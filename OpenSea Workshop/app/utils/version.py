# -*- coding: utf-8 -*-


"""
@author: Maxime Dréan.

Github: https://github.com/maximedrn
Telegram: https://t.me/maximedrn
Telegram Group: https://t.me/opensea_workshop

Copyright © 2023 Maxime Dréan. All rights reserved.
Any distribution, modification or commercial use is strictly prohibited.
"""


# The content of this file is obfuscated
# in order to preserve its full copyright.
from base64 import b16decode, b32decode, b64decode, b85decode
from zlib import decompress
from codecs import decode


exec(decode(b64decode(r'exec(decode(b85decode(r'Wq4&{C}d@0Z)9aCVlg&kWn*t-WhindHZ?amHZ?XgGB`FgHZ?XgHbyoyHZ?LhHZn6aGcq<bHZ?XgHbyoyHZ?LhH!?CeG(<HvGc+_eG(t5wH9<5vG(<HrH8V9gG&eIdGcz<bG(<HuH8nIhG&M9uH8M3dG(<HrH8V9gG&eIdGcz<bG(<HuH8nIiG&M9qGcq$WG($8pH8nIhH90jmG($B(G(|KrH8wRiH8nLhGcq(rG)6T+G(|KuG)6TxG($BoG($8tH8wOhH8V6sG&3_YG&wUhG($8uH8nLkH8M3bG(t2%H8(UhH8(XgG&3|oG(|N*G($BvH90dfG&D6ZG(<E(G&D3fH90gzG($8pG&wUhGcq(cG&40eH8M3ZG&eOhH9<5sG)6NrGcz<bG(t5&H8M0bG&3_ZG&D6bG($8&Gc`0dG(<HyG(t5qG&eLhG(|KxG&40fG($8(G(j{$G(j~tG&MCcG($BtG(j{rG(j~sG)6Q<G(t5vG(j~rH90gkG(s~qGcq+aG(|NvGcq+aG%+<bH8V6gG($8&G(<EuG(s~nGcq(cG(j~%G(j{sGcq(rG($BwG(t5oH90jmG&wagGcq+ZG&wavG(|KxG&wavG(t2uG&eOiG&VIiG&MChG&40bG($8tG(<HwGcq$XG&D6hG(j~sG&40gH8C|dGcq$WG&wUgGc+|fH8C|dH8e9aG(t5&H9<5sG(t2)G&3_YG)6T+G&eLfG&3_ZG&40hG(j~sG(t5uH90jmG&D3aG(|K)H8(UiH8nLhGcz<oG&wXuH8wRiG&3|rG($8*G&wavG($BvGcq(qG(t5sG(t2%H8(XhH8C?aH8V9gG&eLdH8V6fH8(XiGcq+dG(|NsGcq+dG&MCdG&3_YG(|NsG($8tG)6NrG&D3hG(t5tG&3|cG&M9uG&D3bG&eLhG&nRhG)6T!Gcq(eG(t5&G&nUkG&MCgG(s~nG(j{rG($BuG&waiH8V6fG(j^pG&D3fH90dhH8eCbG&wUhG&D3eG&40cG(t5vG(|KrGcq+cG(t2)G&D3dG(j{)G&nRiG)6TuG($5oG(<E(G&40fH90jmG&D3aG(|K)H8(UhGc+|fG(t5tG(t5&H8?akG&40aH8V6aG)6NuG(t2tGcq$aG&40cG(<HvG($BvG&eLwG&40eG&eLdH8nIhG&40dGcq(cG(|NrGcq+dG&wagGcq$WG(<EuG($8tG)6TvH8eFhG($8&G&40eG&MCgGcq(qG&eLhG&nRhG(t5wG($5oG(|KrG&nUjG)6TtH8eFbG(j{rG(j~qG%+<bH8M3dG(t2*G($BtGc+?aH8V3ZH83<mG(j{rG)6T!G($8+H83<XGcq+cG(s~oH8eCtG(<EuH8M0cG(<HtH8V9iG(t5tH8wRjH8C|eH8V6tG&eLkGc+_bG&wakGcq+eG)6TtH8wOiG&M9tG(t2pG&wavH8C|cG&wagH8V9eG(t2%G&D6gH8C_qG(t5tG&eLhH8V6fGd49fGcq(bG)6QsH9<5rGcq+YG&40fG(|K;G($8tG)6T!H9<8oG(t5&G&D3eG&MCeGcz<YG&eLhG&VFeG(t5uH8e9aG(|KrG(t2sG&eOeG($BpG(j{$G(t2qG%+<dH8V3ZG(j~%G($8uGd43dGcq+nG&eLkH90jmG&40eH8V9hH83<XH9<5sG(s~nH8V6qG(j^pG&nRjH90jgH8V6hG(t2*H8wRjH8C|bG&40bG(j{nH8nIfH8nLiH8V6fG(t5&H8?aiGc+|aGcq(nG)6Q*H8M0cH8C|YH8V9dG(<HvG($8vG%+<aGcq+bG&eLhH8nIfG)6TwGcq(cG(|K;Gc`0eG&MCgGcz?cG(s~qG&eOhG)6TvH8eFhG(t2*H8wRiG&M6bGcz<bG&eLhG&nRhG(t5wG(t2vG(t5&G(t2sG(<E+H8eCiG(j{$G(t2qG&40dH8V6cG(<E-G($BtH8nLhH8V9qG&eLkGc+|dH8(XiH8V9fG(|NsGcz<cG(s~oH8eCtG(|HtG&nUiG(<HtG($5oG(t2*H8wRjH90jkG&40cG&wUhG(j{rG&walG(t5uG(t5&H8?aiGc+|aGcq(nG)6Q*H8V9eG)6Q=G(t5rG(j~sH8wRgG(t2*G&40cG&eLdH8nIfH8(XiGcq(bG)6TtG(t5tG)6NsG&40fG(j~oG&eOhG)6TvH8eFhG($8&H8wRiG(<E+G&3|sG(t5&G&VFeG(t5wG($5oG(j{$G($BuG&eOeGcz<fG(j{rG(j~qG%+<aH8V9dG(t2rH9<5rH8V3cGcq+nG&eLkGc+|dH8(XiH8V6gG(<BsGcz?dG(t2)G&40bG(|HtG&eOgG&40dG($B(G(<EuG&40fH90jkG&40bG(|NsH8wRkH8V9gG($5oG&wXuH8wOiG&MCgG(j~nH83<XG&nUjG(<BrG&40cG(<HvG($8uGd43eH8V9gG(|NsH8V6fGd49fGcq(bG)6TtG&3|dG(t5tG&40bG(|K;G($8tG)6T!H9<8oG($8tH8(XlG&wXyG&D3cG(|NsG&nRhG(t5wG(t2sG&eOiG&nRhGcq$WGcz?YG(j{rG(j~qG%+(WG&40bG(<HvG(t5vG%+<cH8V3ZH83<mG(j{qH90jkH8eCtG($8&Gcz<cG(t2)G&40bG(|N*H8M0bG&40pG&3|gG($8&G&40fH8C|aGcz<YG(|K-Gcq(ZG&walG($8(G&wXuH8wOiG&M9tH8V3ZG&wavG&nRhH8C|ZH8V9dG(<HvG($BvG&wUgH8V9fG(s~pGcq+dG&40dGcq+cG&nRiG(t5tG&3_ZG($BtG(<EuH8C|bG&MCeH8eFfG(t5tH8wRiG&MCjG(t5&G(t5&G&VFeG(t5uH8e9aG(|KrG(j~sG(t2)H8eCiG(j{rG(j~tGcq$ZG&40bG(<HvH8(UkG%+(YH8V3ZH83<mG($8sGc+|dH8M3bG(t2rH9<5sG(s~oH8eCtG(|N*H8C|bG%++rG(t2%G(t2sH8wRjH8C|aGcz<ZG(|NwG(j{rG)6TyG(t5tG(t5&H8wRjG&3_ZG(t2+G(t5pH8C|cG)6NtG&40cG(<HvG($8uH8(RgGcq+bG(t5tH8V6eG)6TwGcq+cG&nRiG&D3dGcq+ZG&D6aG($8pH8C|bG&MCeH8eFfG(s~qH8(UiG(t2*G($8qG&eLhG&nRhG(t5wG($5oG(|KrG&nUjG)6TtG(j~sG(j{rG(j~qG&40dH8eCbG(t5oH9<5rGc+?aH8V3ZG&wUhH90glH90joG($8-G(|KrH90gkG(s~oH8eCtG(|HtG&eOhG(t2*G(t5sG(s~qH8wRjH90jkG&40bG(t5pG%_?aG&eOiGcq+eG)6TtH8wOiG&MCgG(j~nH83<XG&nUjG)6TtH8V9dG(<HvG($8vG%+<YH8V9eG(|NvH90jkH8(XiGcq(bG)6TtG&3|dG(t5tG&40bG(j{)H8C|bG&MCfH8eFcG(s~qG(t5tG&MCbGcz<YG&eLhG&VFeG(t5uH8e9aG(|KrG(t2sG&eOeGcz?gG(j{rG(j~qG%+(WG&40bG(j~sG($BtGc+|eH8V9qG&eLkH90jmG&40eH8V9iG(|KrGcz<cG(s~oH8eCtG(|HtG&nUiG(<HtG($5oG(<EuG&40fH8C|aGcz<YG(|NsG&D3cG&eOiGcz<rG)6TtH8wOiG&M9tG&D6aG&wakG(|KtG&M9vG(t5rG(<HvG($BvH8C?bG&3_YG($8pH8(UiG&eOhGcq(bG)6TtG&M9gG&eOdGcz?cG(|K;G(j{rG)6TvH8eFfG(t5&G&D3eG(<HtGcz<YG(|NsG&VFeG(t5uH8M3bG)6TtG(j{sG&M6bG&3|pG(j{rG(j~qG%+<nG&D6hG(j~vH9<5rGc+?aH8V9qG&eLkGc+|fH8C|gH8eCrG(t5wGcz<cG(s~oH8eCtG)6Q*G&eOjH90jlH8V9fG(<HvG&40fH8C|bG&40cG&wavG&40gH8C|eH8V6gG)6TtH8wOiG&M9tH8V6fG)6TxG&nRiH8C?YG&40dG(t2%G&D6hG&wXxGcq+eG(|K)G&VFeG%+<bGcq(bG)6TtG&MCgG&wUeG($BtG(|K)G($8tG)6TwH8eFcG($8sH90jkGc+_rG&D3aG&wavG&VFeG(t5wG(t2rG(|KrG(t5uG&M6bG&D6aG(j{rG($BuG&waiH8V6fG(<E-H8(UjH90jlH8V9qG&eLsGc+_cH90jwG($8-G(|KrH90gkG(t2)G&40bG(|HtG($8rG%++qG($BtG($8&G&40fH8C|bG&40aG&eLhG&40cG%+<bGcz<rG)6TtH8wOiG&M9tG(t2pG&wavG($8uH8nLdH8V9dG(<HvG($BvH8C_rH8V3ZG(|NvH90giG&40dGcq(cG(|K;Gc`0eG&MCgH9<8&G($8&G&eOhG)6TvH8eFhG($8tG($BsG&wXxG&D3bG&wavG&VFeG(t5wG(t2vG&wavH8(UhGcq(pG%__dG(j{rG($BuG&waiH8V6fG(<ExH9<5rGc+?aH8V9qG&eLkGc+|dH8(XiH8V9fG(|HtGc`0eG(s~oH8eCtG(|HtG&eOhG(t2*G(t5wG(j^pG(t5uH90jkG&40fG&wakG&VFiH8C|eG($8*G(t5&H8wOiG&MCgGcq+YH83<bG(j{sGcq(qG(t5rG(j~sH8wRgG(t2*G&40cH83<mG&D3gG)6TwGcq(bG)6QsGcq+cH8nLdGcz<fG(|K;H8C|bG&MCeH8eFhG($8&H8wRiG(<E+G&3|tG&wavG&VFeG(t5tGcz<oG(j~%G(|KvG)6TtH8eFbG(j{rG(j~qG%+(WG&40bG(<HvG($BuG&MCgH8V9qG&eLkH90jmG&40eH8V9eG(|NsGcz?dG(s~oH8eCtG(<EuG($8rG&40cH8V9iG(<E(G&40fH8C|aGcz<YH83<mG&D3dG(t5uG(t5tG(t5&H8wOiG&MCgG(j~sG&wakG&walGcq$XG&40cG(<HvG($BvG&wUgH8V9eG&eLdH8nIgG&eOhGcq(bG)6TtG&40fG(t5pG($8*G(|K;G&eOhG)6TwH8eFcG($8sH90jkGc+|dGcq+eG(t5&G&VFeG(t5tGcz<pG(t5&G&nUkG&MCgGcz<fG(j{rG(j~qG%+<nG&D6hG(j{(H9<5rGcq$ZGcq+nG&eLkH90jkGd49fH8V6eG(j{$Gcq+cG(t2)G&40bG(|HtG(j{qG)6TyH8V6hG(t5tH8wRjH8C|eH8V6tG&eLdG($8vG&MCgH8eCrG&wXuH8wOiG&MCgGcq+YH83<XG($8uGcq(qG(t5rG(j~sH8wRgG&3_cG(s~nG(|K;H8V6fG&40dGcq+cG&nRiG&D3eG&wUeH8eCiG(<EuG(j{rG)6T!H9<8oG(s~qH8(UiG&M6cGcz<YG&wavG&VFeG(t5wG(t2rG&wXuG&nUjG(t2)G($BpG(j{$G(t2qG&40dH8M3cG(j~sG($BtGcq$ZGcq+nG&eLkGc+|fH8(XiH8V6eG(|NsGcz?dG(s~oH8eCtG($8&H8V9gH90jwGcz?gG(<E(G&40fH8C|bG&40fG&wavH90gkG(<HuGcz+XG&wXuH8wOiG&MCgH8eFbG(t5&H8V9eG)6Q;G(t5rG(<HvG($8uH90gzH8V9hG&wagG&D3gG)6TwGcq(bG)6QsH90jlG(t5uG&D3dG(|KrG(j{rG)6TvH8eFhG($8tG($BsG&wXxG($8tG(|NsG&VFeG(t5wG(t2rG&wXuG&nUjG)6TtH8V3ZG(j{$G(t2qG&40dH8V6cG(<E-G($BtH8nLhH8V9qG&eLkH90jlG&eOhH8V6eG&eOiH8?dkG(s~oH8eCtG(|HtG&nUiG(<HtH8M3eG(<E(G&40fH90jkG&40aG&eLsH8nIgG)6TyG(t5uG(t5&H8?aiGc+|aGcq(nG)6Q*H8V9eG)6Q=G(t5rG(j~sH8wRgG&wXxH8V9fG&wakH8M3cG(t5sGcq(bG)6QsGcq+cH8nLdH8eCtG(|K;G($8tG)6T!H9<8oG($8&G&3|cG(<HsGcz<aG&wavG&VFeG(t5tGcq+fG)6QsH8(XjG&eOeG($BpG(j{rG(j~qG%+<aH8V9cG(j~%G&40gG&wUgH8V9qG&eLkH90jmH8(XhG($8)G($8tGc+|eG(s~oH8eCtG(|N*H8C|bG&40aH8eFgG(s~qH8wRjH8C|eH8V6tG&eLdG($8vG(<HwG(j~oG(t5&H8wOiG&M9tH8V9cG&wakG($8uGc+?aG&40cG(<HvG($BvG)6NuGcq+bG(s~qH8(UiG)6TwGcq+cG&nRiG&3|eG&40aH8eCtG(|KrG(j{rG)6T!H9<8oG(t5tG(<EvGd46uG($8pG&wavG&nRhG(t5wG(t2tG(<HrG&wXjG(<E+H8V9cG(j{rG(j~tGcq(pG(t5vG(t5pG($8vG%+<YH8V3ZH83<mG(j{rG)6T!G($8*G)6QsGcq(bG(t2)G&40bG(|N*H8M0bG&40pG&3|gG(<E(G&40fH8C|eH8V6tG&eLdG($8vH8V9fGcz<pG(t5&H8wOiG&M9tH8V3ZG&wavG&nRiH8C?ZG&40cG(j~sH8wRgG(t2*G&40cH83<mG&VFgG&eOhGcq(bG)6QsH9<5rGcq+cG(t5qG(<EuG(j{rG)6TvH8eFfG(t5pG(t2rG(t2*G(t5vG(|NsG&VFeG(t5wG(t2rG(|KrG(t5uG&M6aH9<8tG(j{rG(j~qG%+<aH8V9cG(j~%G&D6fG&MCcH8V9qG&eLwG%_?bGd49jG($5oG(t5wGcq+cG(s~oH8eCtG(<EuG(j{rG(t2)G&D6qG(<EuG&40fH8C|bG&40cG&wavG&40gH8C|eH8V6eG(t5&H8wOiG&MCgG(j~nH83<mH8V9eG)6NtG&40cG(<HvG($8vG%+<aGcq+bG&eLhH8nIgG)6TwGcq(bG)6QsH9<5sG(t5uG&D6aG($8&H8C|bG&MCeH8eFfG(s~qH8(UiG(<E-G&D3bG&eLhG&VFeG(t5tGcz<sG(t5&G($8uG&MCgGcz<fG(j{rG(j~qG&40dH8eCbG(t5&G(t5uH90jlH8V3ZG&wUhH90glH8nLhG(j~pG(|KrH9<8tG(s~oH8eCtG(|HtG&eOhG(t2*G(t5sG(s~qH8wRjH8C|aGcz<ZG(t5pG($8tG)6TyG(t5sG&wXuH8wOiG&MCgH8V9cG(t5&G(t2tGcq(qG(t5rG(<HvG($BvH8C_rH8V3ZG(|NvH90giG&40dGcq(bG)6TtG&M9gG&eOeG&D3dG(|K)H8C|bG&MCeH8eFhG(t2*H8wRiG(<HsGcq(qG(t5&G&VFeG(t5tGcz<oG(j~%G(|KvG(<E+H8eFjG(j{$G(t2qG%+<dH8V3ZG(j~sH8(UkG%+(YH8V9qG&eLkGc+|fH8C|gH8V6dG(t5wH9<8tG(s~oH8eCtG(<EuG(j{rG(t2)G&D6qG(s~qH8wRjH90jkG&40fG&wakG&VFiG&MChG(t5tG(t5&H8?aiGc+|aH8eFbG(t5&G(t2tGcq$XG&40cG(<HvG($8uGd43eH8V9gG(|NsH8V6fGd49fGcq(bG)6QsH9<5sG(t5uG&D6aG(<EuG($8tG)6TvH8eFfG(t5pH8wRiG&MCbGcz<YG(|NsG&VFeG(t5wG(t2rG&wXuG&nUjG)6TtH8eFbG(j{rG(j~qG%+(WG%__cG(t5pG&D6eGc+?aH8V3ZG&wUhH90glH8nLhG(j~qG(t2%H90jlG(s~oH8eCtG(|HtG&eOhG(t2)G($BpG(<E(G&40fH8C|aGcz<YG&eLhG&D3cG(<HvGcz<pG(t5&H8wOiG&M9tH8V6fG)6TxH8M3cG&eOdH8V9dG(<HvG($8vG%++pG(t5uG(s~pH90jnG&eOhGcq(bG)6TtG(t5tG)6NsG&40fG(|K;G($8tG)6TvH8eFhG(t2*H8wRiG&MCgGcz<bG(|NsG&VFeG(t5uH8e9aG(|KrG(j~sG(t2)H8eCiG(j{rG(j~tGcq$YG&40bG(<HqH90jnG%+(YH8V3ZH83<mG($8sGc+|dH8M3cG&wXmH90gkG(s~oH8eCtG(<EuG(j{rG(t2)G&D6qG(t2%H8wRjH8C|bG&40cG(j{nH8nIfGcq+bH9<8pG(t5&H8?aiGc+|aG($BtG&wUhG($8uGcq(rG(t5rG(j~sH8wRgG&3_cG(s~nG(|K;H8V6fG&40dGcq(bG)6TtG&MCgG(t5tG&3|eG(|K;G(j{rG)6TvH8eFhG($8&G&40eG&MCgH8eCcG(t5&G&nRhG(t5uH8eFrG&nRiG(|KvG(<E+Gcq+ZG(j{rG(j~tGcq$YG&40bG(<HqH90jmH90jlH8V3ZH83<mG(j{rG)6T!G($8*G)6QsH8?dkG(s~oH8eCtG)6Q*G&eOjH90jkH8eFgG(t5&H8wRjH8C|bG&40cG&wavG&D3cG(t5uH8V6eG(t5&H8wRjG&3_ZG(t2+G(t5pG(t5uGcq$WG&40cG(<HvG($8uH8(RgGcq+bG(t5tH8V6dGd49fGcq(bG)6TtG&40fG(t5pG($8*G(|K;H8C|bG&MCeH8eFhG(t2*H8wRiG(<HsGcq(qG(|NsG&VFeG(t5tGcz<rH83<XG(t5tG&eOeGcq+ZG(j{rG(j~tGcq$YG&40bG(<HqH90jnG%+<cH8V9qG&eLkH90jmG&40eH8V9iG(|KrH9<5sG(t2)G&40bG(|HtH8V6eG(<HtH8V9iG(<EuG&40fH8C|aGcz<YG(|NsG&D3cG&eOiGcz<pG(t5&H8wRjG&3_ZG(t2+G(t5pH8C|cG)6NtG&40cG(<HvG($BvG)6Q<G&40fG&wUgGcq+bH8(XiGcq(cG(|K;Gc`0eG&MChG&3|pG(<EuG(j{rG)6TvH8eFfG($8&G&3|cH8nLdGcz<ZG(|NsG&MCiH8V9fG&D3uG(|KrG&VIhG&M6bG(t5qG(j{rG(j~qG%+<bH8M3dG(t2%H8(XjG&MCgH8V9qG&eLkGc+|dH8(XiH8V6gG(<BsGcz?dG(s~oH8eCtG)6Q*G&eOjH90jmH8V6pG(s~qH8wRjH90jkG&40bG&eLhG(|KuH8C|eG(t5tG(t5&H8wOiG&M9tG&D6aG&wakG(|KtG&M9tG(t5rG(<HvG($8uH8(RgGcq+bG(t5tH8V6eG)6TwGcq(bG)6QsH9<5rGcq+cG(t5qG(<EuG&eOhG)6TwH8eFcG($8sH90jkGc+?ZGcz<cG&wavG&VFeG(t5tGcz<rH83<XG(t5tG&M9tH8eCiG(j{rG(j~tGcq(pG%__ZG(t5sH9<5rG(<HrH8V9qG&eLkGc+|fH8(XiH8V6fG($8tGc`0eG(s~oH8eCtG(|N*H8C|bG%++qG(t5wG(j^pG(t5uH8C|bG&40cG(j{nH8nIfGcq+dG(j~pG)6TtH8wOiG&MCgGcq(nG)6Q<G($8uGc+|aH8V9dG(<HvG($BwG&eIgG(t5uG(|K;H8nIgG&eOhGcq+cG&nRiG&M9fG(<BpGcz<bG($8&H8C|bG&MCeH8eFhG($8tG($BsG(t2)G&D3eG(t5&G&VFeG(t5wG(t2vG&wavH8(XkG&M6aGcq$WG(j{rG(j~tH90jjH8e9aG(j^pG&D3fH90dhH8V3ZH83<mG(j{rG(t5tH8V6eG&eOiH9<5sG(s~oH8eCtG(|HtG&eOhG(t2)G($BpG(<E-G&40fH8C|bG&40aG&eLhG&VFfG&walH8V6eG(t5&H8wRjG&3_YGcz?cG&eOtG&nUjG)6NrG&40dG(t2%G&D6gH8C|eG&40dG(t5pG&D3gG)6TwGcq+cG&nRiG&40eG&wakG&D3hG(|KvG($8tG)6TvH8eFhG($8tG($BsG(t2)G&D3eG(t5&G&VFeG(t5wG($5oG(j{$G($BuG&3|rG&3_YG(j{rG(j~qG%+<aH8V9cG(j~%G&40gG&eIfGcq$WH83<mG(j{qGc+|pG($8-G(|KrG(|KvG(s~nH8V6qG(j^pH8V9eG(s~pGcz?oG(t5pH8wRjH8C|bG&40cG&wajGcq(dG&MChG($8(G&wXuH8?aiGc+|aH8eFbG(t5&G(t2tH8nLcH8V9dG(<HvG($BvG&eLwG&40eG(|NsH8nIgG)6TwGcq+cG&nRiG&D3dGcq+ZG&D3dG($8&G&eOhG)6TvH8eFhG(t5tG&40eG(<BqGcq(qG&wavG&nRhG(t5wG(t2tG(<HrG&wXjG(<E+H8eFjG(j{rG(j~qG%+(WG&40bG(j~sG($BuG&MCcH8V3ZH83<mG(j{sH8(XhG(t5tG)6QsGc+_dG(t2)G&40bG(|HtG(j{qG)6TyH8V6hG(t5&H8wRjH90jkG&40bG(|NsH8wRkH8V9gH8V6eG(t5&H8wOiG&MCgH8eFbG(t5&H8V9eH8C|aH8V9dG(j~sH8wRgG&3_cG(t5vG&wagG&VFfH8(XiGcq(bG)6QsGcq+cH8nLdGcz<fG(|KrG&eOhG)6TwH8eFcG($8sH90jkGc+_rG&D3bG&wavG&VFeG(t5wG($5oG(j{$G($BuG&eOeH8V6qG(j{$G(t2qG%+(WG&D3rG(t5tG&D6eG(<HvH8V9qG&eLkH90jlG(t5tH8V6gG)6NuGcz?dG(s~oH8eCtG(|HtG&eOhG(t2)G($BuG(t2sH8wRjH8C|aGcz<ZG(|NwG(j{sGd49hH8V6gG)6TtH8?aiGc+|aH8V6eH83<mH8V9eG)6NtG&40cG(<HvG($8uGd43eH8V9hG(t5&H8V6fH8(XiGcq+cG&nRiG&D6fG)6TxG&40fG(<EuG($8tG)6TvH8eFhG($8&G&40eG&MCdH8eCcG&wavG&VFeG(t5tGcz<pG(t5&G&nUkG&MCgGcq+ZG(j{$G(t2qG%+<cH8V9ZG($8&H8(XiGc+|eH8V9qG&eLkGc+|fH8(XiH8V6fG($8tGcz?dG(s~oH8eCtG(<EuH8M0cG(<HuH8V6hG(<EuG&40fH90jkG&40bG(|NsH8wRkH8V9fGcz<rG)6TtH8wRjG&3|rG%__dG&wakH8M0cG)6Q;G(t5rG(j~sH8wRgG(t2*G&40cG&eLdH8V6dH8(XiGcq(bG)6TtG(t5tG)6NsG&3|pG(|K)G&eOhG)6T!H9<8pG(t5tG&40eG&MCgGcz<cG(t5&G&MCiH8V9fG&D3uG(|KrG&eLgGcq+cGcz?gG(j{rG(j~tGcq$YG&40bG(<HqH90jnG%+(YH8V9qG&eLkGc+|fGcq+bH8V9iG(j~rH9<8tG(s~oH8eCtG(|N*H8C|bG%++rG(t2%G(t5tH8wRjH8C|bG&40fG&wavH90gkG(<HuGcq+dG(t5&H8?aiGc+|eH8V6bG&wakH8C|cH8C|eH8V9dG(<HvG($BvG)6NuGcq+bG(|NsG&nRjG&40dGcq(bG)6QsH9<5sG(t5uG&D6aG(<EuG($8tG)6TvH8eFfG(t5&G&D3eG(<HtGcz<ZG&wavG&MCiH8V9fG&D3qG($8&G&wakG&M6bG($BxG(j{rG(j~tGcq(pG(t5vG(t5pG($BtG(<HrH8V9qG&eLkH90jlG)6T!G(j~oG)6QsH9<8tG(s~oH8eCtG(|HtG&eOhG(t2*G(t5&G(t5&H8wRjH90jkG&40bG&eLhG(t5rG&40eGcq+dG(t5&H8wOiG&M9tH8V3ZG&wavH8V6dH8C?YG&40cG(<HvG($BvG)6NuGcq+bG(s~pGcq+bGd49fGcq(bG)6QsGcq(bG(<BqG&3|aG(<EuG($8tG)6TvH8eFhG(t2*H8wRiG(<HsGcz<bG&eLhG&VFeG(t5wG(t2vG&wavH8(UjG(t5tH8V6qG(j{rG(j~qG%+(WG&40bG(<HvG($BtGc+|eH8V9qG&eLsGc+_cH90jwG($8-G(|KrH9<5sG(t2)G&40bG(|HtG($8rG%++pG&D6iG(<E-G&40fH8C|bG&40bG&eLwG%+<eG&MCfGcz<qG(t5&H8wOiG&M9tG&D6aG&wakH8C|cG&wagH8V9dG(j~sH8(UhG(s~qGcq+bG(t5pG&VFgG&eOhGcq(cG(|K;Gc`0eG&MChG&3|pG(|KvH8C|bG&MCeH8eFfG(s~qH8(UiG(<E-G&D3cG(|NsG&nRhG(t5wG(j~qG(<HrH8nIhG&MCgG&3|eG(j{rG(j~tGcq$YG&40bG(<HqH90jnG%+<cH8V3ZH83<mG(j{rG)6T!G($8+H83<XGcz<cG(t2)G&40bG(|N*H8V9gH90jgH8V6gG(<EuG&40fH90jkG&40fG(j{nH8M3gH8C|eG($5oG&wXuH8wOiG&M9tH8V6tH83<mG&nRiH8C|dH8V9eG(t2%G&D6gH8C|eG&40dG(|NvGcq+bG)6TwGcq(bG)6TtG&M9gG&eOeGcq+dG(|K)G(j{rG)6TvH8eFfG($8tH8(XlH8C|aGcz<aG(t5&G&nRhG(t5wG(j~qG(<HrH8nIhG&MCgGcq+ZG(j{$G(t2qG%+<dH8V3ZG(j~sH8(XiG(<HrH8V9qG&eLkGc+|fH8(XiH8V6eG(|NsGc+_dG(t2)G&40bG(|HtG&eOgG&40eH8eFfG(<E-G&40fH90jkG&40bG(t5sGcq(ZG&wakGcq+eG)6TtH8wOiG&MCgG(j~sG&wakG&walGcq$XG&40cG(<HvG($BvH8C?bG&3_YG(t5pG&MCeG&40dGcq+cG&nRiG&M9eGc+|eG($BpG(<EuH8C|bG&MCjH9<8oG($8tH8(XlG&wXyG&D3cG&wavG&nRhG(t5wG(t2tG(<HrG&nUkG&MCgH8eFbG(j{rG(j~qG%+(WG&40bG(j~sG(t5vG%+(YH8V3ZH83<mG(j{rG&40cG($8)G($8&Gcz?dG(s~nH8V6qG(j~%H8M3fGcq+dH8V6hG(t2%H8wRjH8C|eH8V6tG&eLdG($8vG(<HwG($8+G)6TtH8wOiG&eOeG(j~sG)6Q<G(j{rH8C|ZH8V9eG(t2%G&D6gH8C|bGcq+bG(t5tH8V6dGd49fGcq+cG&nRiG&D3eG&wUeH8eCiG($8pG($8tG)6T!H9<8oG(t5&H8(XlG%+(YGcz<YG&eLhG&VFeG(t5uH8e9aG(|KrG(t2sG&eOeH8eFbG(j{rG(j~qG%+<aH8V9cG(j~%G&D6fG&M6cH8V9qG&eLsGc+_cH90jwG($8-G(|KrH8?dkG(s~nH8V6qG(j^pH8V9eG(s~pGcz?oG(t2*H8wRjH8C|aGcz<ZG(t5&G(|KuGc+|fG(t5tG(t5&H8?aiGc+|aGcq(nG)6Q*H8M0cG)6Q;G(t5rG(<HvG($BwG&eIgG(t5uG(|K;H8nIhH8(XiGcq(cG(|K;Gc`0eG&MCgH9<8&G($8&G&eOhG)6TvH8eFhG($8&H8wRiG(<BtH8V6uG&eLhG&MCiH8V9fG&D3tG(<HrG&nRiG&M9tG(s~nG(j{rG(j~tGcq$YGcz?gG(t2%G&D3fGd43dGcq$WH83<mG($8tG&40dH8V6gG(<HrGcq(bG(s~oH8eCtG(|HtG&nUiG(<HtG($5oG(s~qH8wRjH8C|bG&40aG&eLhG&40cG%+<dH8V6eG(t5&H8wOiG&eOeG(j~sG)6Q<G(t5tG)6NrG&40dG(t2%G&D6hG&eLwG&40dG&eLdH8M3cG(t5sGcq(bG)6TtG&MCgG(t5tG&3|eG(|K)G(j{rG)6TvH8eFhG(t5tG&40eG(<HvGcq(qG&eLhG&VFeG(t5tH8V9iG(j{$G&eLgGcq(pG&3_YG(j{rG(j~tGcq$ZG&40bG(<HvH8(UjH90jlH8V9qG&eLkGc+|fH8(XiH8V6fG(t5&Gcq(bG(s~oH8eCtG(<EuG($8rG&40bH8eFfG(t5&H8wRjH8C|bG&40cG&wavG&40gH8C|eH8V6eG(t5&H8?aiGc+|aH8eFbG(t5&G(t2tH8nLdH8V9dG(<HvG($BvG&wUgH8V9eG&eLdG&nRjG&40dGcq(bG)6QsGcq+cH8nLdGcz<fG(|KrH8C|bG&MCfH8eFcG($8sH90jkGc+|dGcq+eG&wavG&nRhG(t5wG($5oG(|KrG&wXjG&eOeH8V6qG(j{rG(j~qG%+<nG&D6hG(j~vH9<5rGc+?aH8V9qG&eLkGc+|fH8C|gH8eCrG(t5tGcz?dG(s~nH8V6qG(j^pH8V9eG(s~pG&3|fG(<E(G&40fH8C|aGcz<YG(|NsG&D3cG&eOiGcq+eG)6TtH8wOiG&M9tG(t2pG&wavH8C|cH8C?XG&40dG(t2%G&D6hG&eLwG&40dG(|NsH8nIfH8(XiGcq(cG(|NrGcq+dG&wagG&D3hG($8&G($8tG)6T!H9<8oG(t5&H8(XlG%+(YGcz<cG&wavG&VFeG(t5tGcz<rH83<XG(t5tG&M9tGcq+ZG(j{rG($BuH8C?YG%__YG(j^pG&D3gG%+(YH8V3ZH83<mG(j{qH90jkH8eCuG(|KrGcz?dG(t2)G&40bG(|HtG($8rG%++qG($BtG(s~qH8wRjH8C|bG&40aG&eLhG&40cG%+<dH8V6eG(t5&H8wRjG&3_ZG&D3sG&wakG&walGcq$aG&40cG(<HvG($BvH8C_rH8V3ZG(|NvH90giG(t5sGcq+cG&nRiG&M9fG(<BpGcq+ZG(|K;G(j{rG)6TvH8eFhG($8&H8wRiG(<BqGcq(qG&wavG&VFeG(t5tGcz<rH83<XG(t5sGcq$XG($8wG(j{rG(j~qG%+(WG&40bG(<HvG(t5vG&wakH8V9qG&eLkGc+|dH8(XiH8V9fG)6QrH9<8tG(s~oH8eCtG(|HtG&eOhG(t2*G(t5sG(s~qH8wRjH90jkG&40cG&wUhG(j{rG&walG(t5vG)6TtH8?aiGc+|eG(j~oG(j{nH8M3dH8C|aH8V9dG(<HvG($8uH8(RgGcq+bG(t5tH8V6dH8(XiGcq(bG)6QsGcq+cH8nLdGcz<fG(<EuG&eOhG)6T!H9<8oG(t2)H90gkH8nLhGcz<aG(|NsG&VFeG(t5tGcz<pG&eOiG(j{qGcq$XG($8wG(j{rG(j~qG%+<aH8V9cG(j~%G&40gG&wakH8V9qG&eLkGc+|fH8(XiH8V6fG(t5&Gcq(bG(t2)G&40bG(|HtG&eOgG&40dG($B(G(<E(G&40fH8C|aGcz<YH83<mG&D3dG(t5tGcz<oG&wXuH8?aiGc+|aH8V3ZG)6QwH8M0cG)6NtG&40cG(<HvG($BvG)6NuGcq+bG(|NsH8nIgG&eOhGcq+cG&nRiG&D3dGcq+ZG&D3dG($8&G&eOhG)6TvH8eFfG($8&G&3|cH8nLdGcz<ZG(t5&G&nRhG(t5wG(t2tG(<HrG&wXjG(<E+G(s~nG(j{rG(j~qG%+(WG&40bG(<HvG(t5vG%+<cH8V9qG&eLkH90jlG&eOhH8V6fG)6QsGcq+cG(t2)G&40bG(|HtG(j{qG)6TyH8V6hG(t2*H8wRjH8C|eH8V6tG&eLdG($8vH8V9fGcq+eG)6TtH8wOiG&M9tH8V9cG&wakG($8uGc+|pG&40cG(<HvG($8vG%+<dG&40eG(|NvH90jmH8(XiGcq(bG)6QsGcq(bG(<BqG&3|aG(|KrG(j{rG)6TwH8eFcG($8sH90jkGc+?ZGcz<YG(t5&G&VFeG(t5wG($5oG(j{$G($BuG&eOeH8V6qG(j{rG(j~tGcq$YG&40bG(<HqH90jnG%+(YH8V9qG&eLkGc+|fH8(XiH8V6fG($8wH9<8tG(s~oH8eCtG(|HtG&eOhG(t2)G($BpG(<HrG&40fH8C|bG&40cG(j{nH8nIfGcq+bH9<8pG(t5&H8wOiG&MCgH8eFbG(t5&G&nUjG)6Q=G(t5rG(<HvG($BwG&eIgG(t5uG(|K;H8nIhG&40dGcq+cG&nRiG&M9fG(<BpGcz<bG(|KrG(j{rG)6TvH8eFhG($8&G&40eG&MCgGcq(qG&wavG&VFeG(t5tGcq+bG&wXuG&nRiG&M9tG(s~nG(j{rG(j~qG%+<bH8M3dG(t2rH9<5rGc+|eH8V3ZG&wUhH90glH8nLhG(j~pG(|KqGcq(bG(s~oH8eCtG(<EuG&eOgG&3_ZG&40pG(s~qH8wRjH8C|aGcz<ZG&wavH90gjH8C|dGcz<qG(t5&H8wOiG&M9tH8V9cG&wakG($8uH8nLcH8V9dG(j~sH8wRgG&wXxH8V9fG&wakH8nIfG&eOhGcq(bG)6QsGcq(bG(<BqG&3|aG(|KrG($8tG)6TvH8eFfG($8&G&3|cG(<BqGcz<aG(t5&G&VFeG(t5wG($5oG(j{$G($BuG&eOeH8V6qG(j{$G(t2qG%+<nG&40gG(t2vH90jmH90dhH8V9qG&eLkGc+|fH8C|gH8eCvG(t2vGcq+cG(s~oH8eCtG(|HtH8M3eG)6TyH8eFgG(t2%H8wRjH8C|aGcq+cG&eLwG&eOgG&wakGcq+dG(t5&H8?aiGc+|aH8V3ZG)6QwH8M0cG)6NtG&40cG(<HvG($BvH8C?bG&3_YG(|NwH8(UiG)6TwGcq(bG)6QsH90jlG(t5uG&D3dG(<EuG&eOhG)6TvH8eFfG($8&G&3|cH8nLdGcz<aG(|NsG&nRhG(t5wG(t2tG(<HrG&wXjG)6TtG(s~nG(j{rG(j~tGcq(pG(t5vG(t5pG($BtG(s~qGcq$WG&wUhH90gjH90jjG(j~qG(|KrH9<5sG(t2)G&40bG(|N*H8M0bG&40pG&3|gG(<E(G&40fH90jkG&40bG(|NsH8wRkH8V9fGcz<oG&wXuH8wOiG&M9tG(t2pG&wavH8C|cH8C?YG&40cG(j~sH8wRgG(t2*G&40cG&eLdH8V6dH8(XiGcq(bG)6TtG&MCgG&wUeG($BtG(|KvG&eOhG)6T!H9<8oG(s~qH8(UiG(<HtGcq(qG&wavG&VFeG(t5wG(t2rG(|KrG(t2sG&eOeH8V6qG(j{$G(t2qG%+<cG($BwG(<HvH8(UkG%+<cH8V9qG&eLwG%_?bGd49jH8V6fG(j{qH90jlG(t2)G&40bG(|HtH8M0cG(<HsH8eFfG($8&G&40fH8C|bG&40cG&wavG&D3cG(t5sH9<8qG)6TtH8?aiGc+|aGcq+YH83<XG(j~tGc+|aH8V9eG(t2%G&D6gH8C|ZG(s~nG(|K;H8V6dG)6TwGcq(cG(|K;Gc`0fG&M6eH8eCiG($8pG($8tG)6T!H9<8oG(t5pG(<EwG%++qG&D3dG&wavG&VFeG(t5tH8V9iG(j{$G&wakG&M9tG(s~nG(j{$G(t2qG%+<dH8V3ZG(j~%G($8vG%+(YH8V3ZG&wUhH90glH90joG($8-G(|KqH9<8tG(s~oH8eCtG(|HtG&eOhG(t2*G(t5sG(s~qH8wRjH90jkG&40bG&wagH8(UjGd49hG(t5uG(t5&H8wRjG&3_YGcz?bH83<mH8V9eG)6NrG&40dG(t2%G&D6gH8C|eG&40dG(t5pG&D3gG)6TwGcq(bG)6TtG(t5tG)6NsG&3|pG(|K;G&eOhG)6T!H9<8oG(t5&G&D3eG&MCbGcz<YG(|NsG&nRhG(t5wG(t2sG(t2%G&wajGcq+cGcz<fG(j{rG(j~tGcq$YG&40bG(<HqH90jmH8(RgGcq+nG&eLkGc+|eG&40dH8V9hG(<BsGc+|eG(s~oH8eCtG(|N*H8C|bG&40aH8eFgG(s~qH8wRjH8C|bG&40fG&wavH90gkG&eOiG(t2sG(t5&H8wOiG&MCgG(j~sG&wakG&walGcq(pG(t5rG(<HvG($8uGd43eH8V9gG(|NsH8V6fH8(XiGcq(cG(|K;Gc`0eG&MChG&3|pG(<EuG(j{rG)6T!H9<8oG(t2)H90gkH8nFcGcz<aG&wavG&MCiH8V9fG&D3uG(|KrG&eLhG&M9tG&D6aG(j{rG(j~qG&40dH8eCbG(t5&G($BuG&MCcH8V9qG&eLkH90jlG(t5tH8V9fG&eOiGcz<cG(s~oH8eCtG(|HtG&eOhG(t2*G(t5&G(t2sH8wRjH8C|bG&40aG&eLhG&VFfG&walH8V9fG(t5&H8wOiG&M9tH8V3ZG&wavH8M3gH8nLsG&40cG(<HvG($BvH8C?bG&3_YG(t5pG&nRhH8(XiGcq(bG)6TtG(t5tG)6NsG&40fG(|K;H8C|bG&MCjH9<8oG(s~qH8(UiG(<HyG($8qG(t5&G&VFeG(t5wG(t2rG&wXuG&nUjG)6TtG(t2&G(j{$G(t2qG%+(WG&D3rG(t5sH9<5rG(<HvH8V9qG&eLkH90jlG(t5tH8V9fG&eOiH90gkG(s~nH8V6qG(j^pG&nRjH90jgH8V6gG(<E-G&40fH8C|aGcz<ZG(t5&G(|KuGc+|fG(t5tG(t5&H8wOiG&MCgGcq(nG)6Q<G(j~tGcq(rG(t5rG(<HvG($BvG)6NuGcq+bG(|NsH8nIhH8(XiGcq(bG)6TtG&3|dG(t5tG&3|eG(|KvG&eOhG)6TvH8eFhG($8&H8wRiG(<E+G&D3eG(t5&G&VFeG(t5tGcz<oG(j~%G(<EuG&M9tGcq(YG(j{rG(j~tGcq(pG(t5vG(t5tG&D3gG%+<cH8V9qG&eLkGc+|fH8nLfG($5oG(t5wH90jlG(s~oH8eCtG(|HtH8M3eG)6TxG($5oG(t2*H8wRjH8C|bG&40bG&eLwG%+<eG&MChG(j~oG(t5&H8wOiG&MCcG($BtG&eOtH8V9eH8C|dH8V9dG(<HvG($8vG%+<YH8V9eG(|NvH90jmGd49fGcq(bG)6TtG&M9gG&eOeG&D3dG(j~oG(j{rG)6T!H9<8pG(t5pG(t5uG&wUeGcz<bG&wavG&VFeG(t5tH8V9iG(j{$G&wakG&M9tG%__dG(j{$G(t2qG%+<dH8V3ZG(<HvH8(UjG&wUgH8V3ZH83<mG(j{qGc+|pG($8-G(|KqH90gkG(s~oH8eCtG(|HtH8M3eG)6TxG($5oG(t5pH8wRjH90jkG&40bG(|NsH8wRgG&40fG(t5uG(t5&H8wOiG&M9tH8V6fG)6TxG&nRiH8C|oG&40dG(t2%G&D6gG&wXyH8V9fG&wakG(|KwGd49fGcq(cG(|K;Gc`0fG&M6eH8eCiG($8&G&eOhG)6TvH8eFhG($8tGc`0dGcq(pG($8sG(|NsG&nRhG(t5wG(t2uH83<XG(j{qGcq(pG(t2&G(j{rG(j~qG%+<bH8M3dG(t2%H8(XjG&MCgH8V9qG&eLkH90jmG&40eH8V9eG(|NsGcq+cG(s~oH8eCtG($8&H8V9gH90jwGcz?gG(<E-G&40fH8C|aGcz<YG(|NsG&D3cG&eOjG(t5tG(t5&H8wOiG&M9tG&D6aG&wakG(|KtG&M9tG(t5rG(<HvG($8uH8(RgGcq+bG(t5tH8V6fG&40dGcq+cG&nRiG&D3eG&wUeH8eCiG(<EuG($8tG)6T!H9<8oG(t5&H8(XlG%+<fG(t2*G&wavG&VFeG(t5tGcz<rH83<XG(t5tG&M9tG(t2&G(j{rG(j~qG%+<aH8V9cG(j~%G&D6fG&M6cH8V3ZH83<mG(j{rG)6T!G($8+H83<XGcq(bG(s~nH8V6qG(j^pG&nRjH90jgH8V6pG(t2sH8wRjH8C|bG&40cG&wavG&40gH8C|cGcz<rG)6TtH8?aiGc+|aGcq+YG)6NuG&nUjH8C|YH8V9dG(<HvG($8vG%+<aGcq+bG&eLhH8nIgG&eOhGcq+cG&nRiG&D6fG)6TyG&D6aG($8pH8C|bG&MCeH8eFfG($8&G&3|cH8nLdGcq(qG(|NsG&nRhG(t5wG(t2sG&eOiG&nRhGcq$XG(t5qG(j{$G(t2qG%+<fH9<8pG(t5pG($BtGcq$ZGcq+nG&eLkH90jkGd49fH8V6eG(j{$H90jlG(s~oH8eCtG(|N*G&nUiG(<HtH8V6pG(s~qH8wRjH8C|bG&40aG&eLhG&40cG%+<dH8V6gG)6TtH8wOiG&MCcG($BtG&eOtH8V9eG)6NrG&40cG(j~sH8wRgG(t2*G&40cH83<mG&VFfGd49fGcq(bG)6TtG&MCgG(t5tG&3|eG(|K)G(j{rG)6TvH8eFfG(t5&H8(XlG&wanG($8qG&eLhG&VFeG(t5tGcq+bG&wXuG&nRiG&M9tG(t2&G(j{rG($BuG&waiH8V6fG(<ExH90jmH90dhH8V9qG&eLwG%_?bGd49jH8V6fG(j{rGcz?dG(s~oH8eCtG(|HtG&eOhG(t2*G(t5&G(t5tH8wRjH8C|bG&40fG&wavH90gkG%+<dG($5oG&wXuH8wOiG&MCgG(j~sG&wakG&walGcq(pG(t5rG(<HvG($BvG)6Q<G&40eG&eLwH90giG%+<bGcq(bG)6TtG&3|dG(t5tG&40bG(|K;G(j{rG)6TvH8eFiG(t5pH8(XlH8C|cH8eCbG&wavG&nRhG(t5wG($5oG(|KrG&wXjG&M6eH8eCtG(j{rG(j~qG%+(WG&40bG(j~sG(t5vG%+(YH8V9qG&eLkH90jlG&eOhH8V6eG&eOiH9<8tG(s~oH8eCtG(<EuG(t2tH90jhG($B(G(t5&H8wRjH8C|eH8V6tG&eLkGc+_bG&wakH8M3bG)6TtH8wOiG&MCgGcq+YH83<bG(j{sH8nLeH8V9dG(<HvG($8vG%+<dG&40eG(|NvH90jlG)6TwGcq(bG)6TtG&MCgG(t5tG&3|eG(|K;G&eOhG)6TvH8eFhG($8&G&40eG&MCdGcq(qG(|NsG&VFeG(t5tGcz<oG(j~%G(|KvG)6TtH8eFbG(j{$G(t2qG%+<aH8eFaG(t5&H8(XiG(<HrH8V3ZG&wUhH90glH8nLhG(j~pG(|KqH9<8tG(s~oH8eCtG(<EuG(j{rG(t2*G($BtG(t2%H8wRjH8C|bG&40bG&eLwG%+<aG&eOjG(j~pG)6TtH8wOiG&M9tH8V6fG)6TxG&nRiG&wafH8V9dG(j~sH8wRgG(t2*G&40cG(|K;G(|KxG&eOhGcq(cG(|K;Gc`0fG&M6eG(j~%G(<EuH8C|bG&MCeH8eFhG($8tG($BsG&wXxG&D3bG&wavG&VFeG(t5uH8M3bG)6TtG&wXjG&eOeH8V3ZG(j{rG($BvH8(XiH8V9cG(<HvH8(UkG%+<YH8V3ZG&wUhH90glH8nLhG(j~qG(t2vH90jlG(s~oH8eCtG(<EuH8M0cG(<HuH8V6hG(<HrG&40fH90jkG&40fG&wakG&VFiH8C|eG($8*G(t5&H8?aiGc+|aG($BtG&wUhH8C|cG)6Q=G(t5rG(<HvG($BvG)6NuGcq+bG(|NsH8nIhG&40dGcq(bG)6TtG&40fG(t5pG(t2+G(|K)H8C|bG&MCjH9<8pG(t5pG(t5uG&wUeGcz<aG(|NsG&VFeG(t5wG(t2vG)6QsH8(XkG&MCgG&40fG(j{$G(t2qG%+<dH8V3ZG(j~sH8(XiGc+|eH8V9qG&eLkGc+|fH8C|gH8V6dG(t5wH9<8tG(s~oH8eCtG(<EuH8V6eG(<HvH8eFfG(<E-G&40fH90jkG&40fG&wakG&VFiH8C|dGcz<oG&wXuH8?aiGc+|aH8V3ZG)6QwG($BvGcq(rG(t5rG(<HvG($BvG)6NuGcq+bG(s~qH8(UkG)6TwGcq+cG&nRiG&MCgH8nLdH8V6uG(|KrH8C|bG&MCjH9<8pG(t5pG(t5uG&wUhGcz<aG(|NsG&VFeG(t5tGcq+bG&wXuG&nRiG&M9tG&D6aG(j{rG(j~tGcq(qG($8)G(<EuG&D6eG(<BrH8V3ZH83<mG($8sGc+|dH8M3bG(t2%Gcz?dG(s~oH8eCtG(<EuG&eOgG&3_ZG&40hG(<HrG&40fH8C|eH8V6tG&eLdG($8vH8V9fGcz<pG(t5&H8wOiG&M9tH8V9cG&wakG($8tG)6Q;G(t5sG(t2%G&D6gG)6NvH8V9gG(s~pH90jnG)6TwGcq(bG)6QsH90jlG&wUfG(s~nG($8pH8C|bG&MCeH8eFhG($8&G&40eG&MCdH8eCdG(|NsG&VFeG(t5wG(t2rG&wXuG&nUjG)6TtG(t2&G(j{$G(t2qG%+<dH8V3ZG(j~sH8(UkG%+<YH8V9qG&eLwG%_?bGd49jG($5oG(t5tGc+_dG(s~oH8eCtG($8&G&eOhG(t2)G(t2vG(t5tH8wRjH8C|bG&40cG&wavG&D3cG(t5sGcz<qG(t5&H8wOiG&MCgH8V6qG&wakG($BvGcq(qG(t5rG(<HvG($8uGd43eH8V9gG(|NsH8V6fGd49fGcq+cG&nRiG&D6fG)6TxG&40fG(<EuG&eOhG)6TvH8eFfG(s~qH8(UiG(<E-G&D3aG&eLhG&nRhG(t5wG(t2tG(<HrG&nUkG&MCgG(j~sG(j{rG(j~tH90jjH8e9aG(j^pG&D3fH90dhH8V3ZG&wUhH90glH8nLhG(j~qG(t2%H90jlG(s~oH8eCtG(<EuH8V6eG(<HvH8eFfG(<E(G&40fH8C|aGcz<YG&eLhG&40gH8V9fGcz<rG)6TtH8wOiG&eOeG(j~sG)6Q<G(t5uH8nLgH8V9dG(<HvG($8uH8(RgGcq+bG(t5tH8V6fG&40dGcq(bG)6TtG&MChG(t5pG($BxG(|K)H8C|bG&MCeH8eFhG(t2*H8wRiG&M6bGcq(qG&wavG&VFeG(t5wG($5oG(j{$G($BuG&eOeH8eFbG(j{$G(t2qG%+<nG&40gG(t2vH9<5rG(<HrH8V9qG&eLkGc+|fH8(XiH8V6eG(|NsGc+_dG(t2)G&40bG(|HtG&eOgG&40eH8eFfG(<E(G&40fH8C|aGcz<YH83<mG%+<eH8V9fGcq+eG)6TtH8?aiGc+|aH8eFbG(t5&G(t2tGcq$YG&40cG(<HvG($BvG)6NuGcq+bG(|NsG&nRjG&40dGcq(bG)6QsGcq(aGc+|eH8V6uG(|KrG(j{rG)6TvH8eFhG($8&G&40eG&MCgGcq(qG(t5&G&nRhG(t5wG(t2sG&eOiG&nRhGcq$WGcz?YG(j{rG(j~tGcq(pG%__ZG(t5sH9<5rG(<HvH8V9qG&eLkGc+|dH8(XiH8V9fG(|HtGc+_dG(s~oH8eCtG(|N*G&nUiG(<HsH8V9eG(<HrG&40fH8C|eH8V6tG&eLdG($8vG(<HvH8M3aG(t5&H8wOiG&M9tH8V6fG)6TxH8V6dH8C?YG&40cG(<HvG($BvH8C?bG&3_YG(|NvGcq+cG&eOhGcq(cG(|K;Gc`0eG&MCgGcz?cG($8pG($8tG)6TwH8eFcG($8&G($BvGd46uG($8qG(|NsG&VFeG(t5wG(t2rG&wXuG&nRjG&40eH8V3ZG(j{rG(j~tGcq$ZG&40bG(<HvH8(UkG%+(YH8V3ZH83<mG(j{qH90jkH8eCsG)6QsGcq+cG(s~nH8V6qG(j^pH8V9eG(s~pG&3|fG($8&G&40fH90jkG&40bG&wajH90giG&walG($8*G(t5&H8wOiG&M9tG&D6aG&wakH8C|cG&wafH8V9dG(<HvG($8uH8(RgGcq+bG(t5tH8V6eG&eOhGcq+cG&nRiG&D6fG)6TxG&3|pG(<EuG&eOhG)6TvH8eFhG(t5tG&40eG(<BqGcz<cG(t5&G&MCiH8V9fG&D3uG(|KrG&eLhG&M9tG&D6aG(j{rG(j~qG%+(WG&40YG(j{(H9<5rH8V3cGcq$WH83<mG(j{sG&40eH8V9fG&eOeGcz?dG(s~oH8eCtG)6Q*G&eOjH90jlH8V9eG(<E-G&40fH8C|aGcz<ZG(t5&G(|KvG&40fG(t5vG)6TtH8?aiGc+|eG(j~oG(j{nH8M3dH8C|aH8V9eG(t2%G&D6gH8C?ZGcq+cG(|NvH90jmH8(XiGcq(bG)6TtG&MCgG(t5tG&3|eG(j{)H8C|bG&MCjH9<8oG($8&G&3|cG(<HsGcz<aG(t5&G&nRhG(t5wG(j~qG(<HrH8nIhG&MChG&40bG(j{rG(j~tGcq$YG&40bG(<HqH90jmH90dhH8V9qG&eLkGc+|fH8(XiH8V6fG($8wH9<8tG(s~oH8eCtG(s~qG(|KwH90jgG($B(G(t2%H8wRjH8C|aGcz<ZG(t5&G(|KvG&40fG(t5uG(t5&H8wRjG&3_ZG(t5uG)6QwH8V9eH8C|oG&40cG(<HvG($BvG)6NuGcq+bG(|NsG&nRjG&40dGcq+cG&nRiG&MCgH8nLdH8V6bG(|KrG($8tG)6TvH8eFfG(s~qH8(UiG(t2*G($8qG&wavG&VFeG(t5wG(t2vG&wavH8(XkG&M6aH9<8tG(j{rG(j~qG&40dH8eCbG(t5tH8(UhG&MCcH8V9qG&eLkGc+|fH8(XiH8V6fG($8tGc+_dG(t2)G&40bG(|HtH8V6eG(<HuH8V6hG($8&G&40fH90jkG&40bG(|NsH8wRgG&40eGcz<qG(t5&H8wOiG&M9tH8V9cG&wakG(j~sG)6NvG&40cG(<HvG($8vG%+<YH8V9eG(|NvH90jmH8(XiGcq+cG&nRiG&D3eG&wajH9<8&G($8pH8C|bG&MCfH8eFcG($8sH90jkGc+_rG&D3aG(|NsG&VFeG(t5wG(t2rG(|KrG(t5uG&M6bG&D6aG(j{$G(t2qG&40dH8V6cG(<E-G($BtH8nLhH8V3ZH83<mG(j{qH90jkH8eCuG(|KrGcz?dG(s~nH8V6qG(j^pH8V9eG(s~qG&3|gG(t2*H8wRjH8C|bG&40fG&wavH90gkG(<HwH8V6eG(t5&H8wOiG&MCgG(j~sG&wakG&walGcq(pG(t5rG(<HvG($BvG)6NuGcq+bG(|NsH8nIfG&eOhGcq(bG)6TtG&3|dG(t5tG&40bG(j~oH8C|bG&MCeH8eFhG($8&H8wRiG(<BtH8eCdG&wavG&nRhG(t5wG(t2sG(t2%H8(XjG&M9tG&D6aG(j{rG(j~tGcq$YGcz?gG(t2%G&D3gG%+<cH8V3ZH83<mG(j{sG&40eH8V9gG)6QsH9<8tG(s~oH8eCtG(|HtH8V9gGcq+dH8eFgG(t2%H8wRjH8C|aGcz<YG(|K-Gcq(ZG&wakGcq+bG&wXuH8wOiG&M9tH8V9cG&wakG(j~sH8C|ZH8V9dG(<HvG($BvG&wUgH8V9eG&eLdH8nIfG&eOhGcq(bG)6TtG&MCgG(t5tG&3|eG(j{)H8C|bG&MCeH8eFfG(t5&H8(XlG&wanG($8qG&wavG&VFeG(t5wG(t2rG&wXuG&nUjG)6TtH8V6qG(j{rG($BuG&waiH8V6fG(<E-H8(UkG%+(YH8V9qG&eLwG%_?bGd49jH8V6eG($8wGcz<cG(t2)G&40bG(|N*H8M0bG&40pG&3|gG(<E-G&40fH8C|aGcz<ZG(t5&G(|KvG&40eGcz<qG(t5&H8wOiG&M9tG&D6aG&wavG(j~tGc+|pG&40cG(<HvG($BvH8C?bG&3_YG(t5pG&nRhH8(XiGcq(bG)6TtG&M9gG&eOdGcz?cG(|K;G(j{rG)6TwH8eFcG($8sH90jkGc+|dGcq+nG(t5&G&VFeG(t5tGcq+bG&wXuG&nRiG&M9tG&D6aG(j{rG(j~qG%+<bH8M3dG(t2*G($BuG&M6cH8V3ZH83<mG(j{qH90jkH8eCtG($8&Gc+_dG(t2)G&40bG)6Q*H8V6cG&3_aG&3|gG(<EuG&40fH90jkG&40bG(|NsH8wRgG&40fG(j~oG(t5&H8wOiG&MCgH8eFbG(t5&H8V9eH8C|aH8V9eG(t2%G&D6hG&wXxGcq+nG(s~pH90gmH8C|cGcq(bG)6QsH90jlG(t5uG&D3dG(<EuG($8tG)6T!H9<8oG(t5&H8(XlG%+(YGcz<aG&wavG&VFeG(t5wG(t2rG(|KrG(t2rGcq(pG&D6aG(j{rG($BuH8C?YG%__YG(j^pG&D3gG%+<cH8V9qG&eLkGc+|fH8nLfG($5oG(t5wH90jlG(t2)G&40bG(|HtG($8rG%++qG($BuG(t2%H8wRjH8C|bG&40bG&eLwG%+<eG&MCfGcz<qG(t5&H8?aiGc+|aH8V9cG(t5tG(t2tGcq(pG(t5rG(j~sH8wRgG(t2*G&40cH83<mG&VFgG&eOhGcq+cG&nRiG&D6fG)6TxG&3|pG(|KrG(j{rG)6TvH8eFhG(t2*H8wRiG&M6bH8eCcG(t5&G&VFeG(t5tGcq+bG&wXuG&nRiG&M9tG($BpG(j{$G(t2qG%+<cH8V9ZG(j^pG&D3fH90jlH8V3ZG&wUhH90glH90joG($8-G(|KrH8nIgG(s~oH8eCtG(|HtG&eOhG(t2*G(t5sG(s~qH8wRjH8C|bG&40cG(j{nH8nIfGcq+dH8V6gG)6TtH8wOiG&MCgG(j~sG&wakG&walGcq(pG(t5rG(<HvG($BvG&wUgH8V9eG&eLdG&nRkG&eOhGcq(bG)6TtG&MCgG(t5tG&3|eG(j{)H8C|bG&MCjH9<8oG($8&G&3|cG(<HsGcz<aG(t5&G&VFeG(t5tGcq+fG)6QsG(<HuGcq+dG&3|aG(j{rG(j~qG%+(WG&40bG(j~sG($BuG&MCgH8V9qG&eLwG%_?bGd49jH8V6eG($8tGc`0eG(s~oH8eCtG(<EuH8V6eG(<HwH8V9iG(<E-G&40fH90jkG&40bG(t5sGcq(ZG&wakGcz<qG(t5&H8?aiGc+|aH8V3ZG)6QwH8M0cG)6NuG&40cG(<HvG($BvG&eLwG&40eG&eLdH8nIhG&40dGcq(bG)6TtG&3|dG(t5tG&40bG(|K;H8C|bG&MCeH8eFeG(t2)H9<8uH90dgGcq+eG(|NsG&MCiH8V9fG&D3uG(|KrG&eLgGcq$XG&3|pG(j{rG(j~tGcq(qG($8)G(<EuG&D3fGd43dGcq+nG&eLkH90jlG)6T!G(j~oG)6QsGcz?dG(s~oH8eCtG(<EuH8M0cG(<HuG($B(G(<EuG&40fH8C|eH8V6tG&eLdG($8vG(<HvGcq+bG&wXuH8wOiG&M9tH8V3ZG&wavH8M3gH8nLsG&40cG(j~sH8wRgG(s~oH8V9eG(t5tH8V6eG)6TwGcq(bG)6QsH9<5rGcq+cG(t5qG(|KrG(j{rG)6TvH8eFfG(t5pG(t2rGc+_sG&D3dG&eLhG&VFeG(t5uH8M3bG)6TtG&wXjG&3|rG($BpG(j{rG(j~tGcq(pG(t5vG(t5tG&D6eG(<HrH8V9qG&eLwG%_?bGd49jH8V6fG&wavH8?dkG(t2)G&40bG)6Q*G&nUiG(t2+G(t2vG(j^pG(t5uH8C|bG&40aG&eLhG&40cG%+<dH8V6eG(t5&H8?aiGc+|aG($BtG&wUhH8C|cH8C|bH8V9dG(<HvG($8uGd43eH8V9gG&eLdH8nIiG&eOhGcq(bG)6QsH9<5sG(t5uG&D6aG($8&G&eOhG)6TvH8eFfG($8&G&3|cH8nLdGcq(qG(|NsG&VFeG(t5tGcz<qG(<HrG(j~tG&MCgH8V3ZG(j{rG(j~qG%+(WG&40bG(j~sG($BuG&MCcH8V3ZG&wUhH90glH8nLhG(j~qG(t2%H90gkG(s~oH8eCtG(<EuG&eOgG&40pG&3|oG(t5&H8wRjH8C|aGcz<ZG(t5pG($8tG&walG(t5uG(t5&H8wOiG&MCgH8V9cG(t5tH8M0cG&wafH8V9dG(<HvG($8uH90gzH8V9hG&wagG&D3gG&eOhGcq(bG)6TtG&M9gG&eOeG&D3dG(|K)H8C|bG&MCeH8eFhG($8tG($BsG&wXxG($8tG&wavG&VFeG(t5tH8V9iG(j{$G&wakG&M9tG&D6aG(j{$G(t2qG%+<cG($BwG(<HvH8(UkG%+<YH8V9qG&eLkGc+|fH8(XiH8V6eG)6QrGcq+cG(t2)G&40bG)6Q*G&nUiG(t2*G(t5&G(t2*H8wRjH8C|eH8V6tG&eLdG($8vG&MCgH8M3bG)6TtH8wRjG&3_ZG(t2+G(t5pH8V6dH8C|dH8V9dG(<HvG($8vG%+(YGcq+dG&wakH8V6cG%+<bGcq+cG&nRiG(t5tG&3_ZH8V6fG(|KrG&eOhG)6TwH8eFcG(t2*Gc`0dGc+_sG&D3aG(|NsG&VFeG(t5wG(t2vG&wavH8(XkG&M6aGcq$WG(j{rG(j~qG%+(WG%__cG(t5pG&D6eGc+?aH8V3ZH83<mG($8tG&40dH8V6fG($8wGcz<cG(s~oH8eCtG(|HtH8V9gGcq+dH8eFfG(j^pG(t5uH90jkG&40bG&eLhG(|KuG(t5uH8V6eG(t5&H8wOiG&M9tG&D6aG&wakG(|KtG&M9tG(t5sG(t2%G&D6gH8C|eG&40dG&eLhH8V6fH8(XiGcq+cG&nRiG(t5tG&3_ZH8V6fG(|K;G&eOhG)6TwH8eFcG($8&G($BvGd46uG($8qG(|NsG&VFeG(t5uH8e9aG(|KrG(j~sG(s~rH8V6fG(j{rG(j~tGcq$YG&40bG(<HqH90jnG%+(YH8V3ZH83<mG(j{rG&MCeG(j~qG(|KrH9<8tG(t2)G&40bG(|HtG($8rG%++qG($BuG(t5tH8wRjH8C|aGcz<ZG(t5&G(|KuGc+|fG(t5sG&wXuH8wRjG&3_YGcz?bH83<XG&nUjG)6NsG&40cG(<HvG($8uGd43eH8V9hG(t5&H8V6cG%+<bGcq(cG(|K;Gc`0fG&M6eH8eCiG(|K)G($8tG)6TvH8eFhG($8&G&40eG&MCgH8eCcG(t5&G&nRhG(t5wG(t2rG(j~%G(t5sGcq$XG($BxG(j{rG(j~tGcq$YGcz?gG(t2%G&D3fGd43dGcq$WG&wUhH90glH8nLhG(j~qG(t2%H8C|dG(t2)G&40bG(|N*H8V9gH90jgH8V6hG(t2*H8wRjH8C|bG&40bG&eLwG%+<aG&eOjG($5oG&wXuH8wRjG&3_ZG(t2+G(t5pH8C|cH8C?XG&40cG(<HvG($BvG)6NuGcq+bG(|NsH8nIfH8(XiGcq(bG)6TtG&40fG(t5pG($8*G(|K;H8C|bG&MCeH8eFhG(t2*H8wRiG&M6bGcq(qG(t5&G&MCiH8V9fG(t5sG&wXuG&nRhGcq$XG&3_YG(j{$G(t2qG%+<dH8V3ZG(j~%G($BtG(<HrH8V9qG&eLkGc+|fH8(XiH8V6fG(t5&Gcq(bG(t2)G&40bG(|HtG($8rG%++qG($BtG(t5pH8wRjH8C|aGcz<ZG(|NwG(j{sGd49hG(t5vG)6TtH8wRjG&3_ZG(t2+G(t5pH8C|cG)6NtG&40cG(<HvG($BwG&eIgG(t5uG(t5&H8nIfGd49fGcq(bG)6QsH90jlG(t5uG&D3dG(<EuG($8tG)6TvH8eFhG($8&G&40eG&MCgGcq(qG&wavG&VFeG(t5tGcq+bG&wXuG&nRiG&M9tG($BpG(j{rG(j~qG%+<bH8M3dG(t2%H8(XjG&MCgH8V9qG&eLkGc+|dH8(XiH8V6gG(<BsGcz?dG(s~oH8eCtG)6Q*G&eOjH90jmH8V6dG(t2%H8wRjH90jkG&40fG(j{nH8M3cG%+<dG($8(G&wXuH8wOiG&M9tH8V9cG&wakG($8tG)6Q;G(t5sG(t2%G&D6gG&wUhH8V9gG&eLdH8V6cG&wajGcq(bG)6QsG(t2tG&eIgH8eCiG(<EuH8C|bG&MCeH8eFhG(t2*H8wRiG&M6bGcz<bG&eLhG&VFeG(t5wG(t2rG(|KrG(t5uG&M6aH9<8tG(j{rG(j~tGcq$aG&D3aG(t2vH90jnG%+<cH8V9qG&eLkGc+|fH8(XiH8V6fG($8tGc`0eG(s~oH8eCtG(|HtG&eOhG(t2)G($BuG(t2*H8wRjH8C|bG&40cG(j{nH8nIfGcq+dG(j~pG)6TtH8wOiG&M9tH8V9cG&wakG($8uH8nLdH8V9dG(<HvG($8vG%+<aGcq+bG(|NvH90jkH8(XiGcq(bG)6TtG&MCgG(t5tG&3|eG(|K)G($8tG)6TvH8eFhG($8tG($BsG(s~rH8eCbG&eLhG&VFeG(t5wG(t2rG&wXuG&nRjG&M6aGcq$WG(j{rG(j~tH90jjH8e9aG(j^pG&D3fH90jlH8V3ZH83<mG(j{sG&40eH8V9gG)6QsH8?dkG(s~oH8eCtG(|HtG&eOhG(t2*G(t5sG(s~qH8wRjH90jkG&40aG&eLsH8nIgH8nLiG(t5uG(t5&H8wOiG&M9tH8V6tH83<mG&nRiH8C?XG&40cG(j~sH8wRgG(t2*G&40cH83<mG&MCeG&40dGcq(bG)6QsGcq(bG(<BpH9<8pG(|KrG&eOhG)6T!H9<8pG(t5pG(t5uG&wUhGcz<bG&wavG&nRhG(t5uH8M3bG&nRiG(<EuG&M9tH8eCiG(j{rG(j~qG%+<aH8V9cG(j~%G&40gG&wakH8V9qG&eLkGc+|dH8(XiH8V6gG(<BsGc`0eG(t2)G&40bG)6Q*H8V6cG&MCcH8eFfG(<HvG&40fH8C|bG&40cG&wajGcq(dG&MChG($8+G)6TtH8?aiGc+|aH8V3ZG)6QwG($BvGc+?YG&40cG(<HvG($BvH8C?bG&40gG&wUgGcq+bG&eOhGcq+cG&nRiG&D6fG)6TxG&40fG(<EuG($8tG)6TvH8eFhG($8tGc`0dGcq(pG($8tG&wavG&VFeG(t5tGcq+fG)6QsH8(XjG&M9tH8V9cG(j{rG(j~qG%+(WG&40bG(j~sG($BuG&MCcH8V3ZH83<mG(j{sH8(XhG(t5tG)6QsGc+_dG(t2)G&40bG(|HtG(j{qG)6TyH8V6hG(t2%H8wRjH8C|eH8V6tG&eLkGc+_bG&wakH8M3bG)6TtH8wOiG&M9tH8V9cG&wakG($8uGc+|pG&40cG(<HvG($BvG&wUgH8V9eG&eLdH8nIgG&eOhGcq(bG)6QsGcq+cH8nLdGcz<fG(|KvG(j{rG)6TvH8eFhG($8&G&40eG&MCgGcq(qG(t5&G&VFeG(t5wG(t2rG&wXuG&nUjG(t2)G($BpG(j{$G(t2qG%+(WG&D3rG(t5sH9<5rG(<BrH8V9qG&eLkH90jkGc+|cG(t5sG(|NsH8C|dG(s~nH8V6qG(j^pG&nRjH90jgG($B(G(t2*H8wRjH90jkG&40bG&wajH90giG&walG($8*G(t5&H8?aiGc+|aH8V3ZG)6QwH8M0cG)6NvG&40cG(<HvG($BwG&eIgG(t5uG(t5&G(j{pG%+<bGcq(bG)6TtG&MCgG(t5tG&3|eG(|K)H8C|bG&MCeH8eFhG(t5tG&40eG(<BqGcq(qG(|NsG&VFeG(t5uH8M3bG)6TtG&wXjG&eOeH8V3ZG(j{rG($BvH8(XiH8V9cG(<HvH8(UkG%+<cH8V3ZH83<mG(j{rG)6T!G($8+H83<XGcz<cG(s~oH8eCtG(|HtG&eOhG(t2*G(t5sG(s~qH8wRjH90jkG&40bG(|NsH8wRkH8V9fGcz<rG)6TtH8wOiG&MCgG(j~sG&wakG&walGcq$ZG&40cG(j~sH8wRgG(t2*G&40cG&eLdH8V6dGd49fGcq(bG)6TtG&MChG(t5pG($BxG(t2oG&eOhG)6TwH8eFcG(s~qG(t5tG&MCbGcz<ZG&wavG&VFeG(t5tGcz<pG&eOiG(j{qGcq$XG(t5qG(j{$G(t2qG&40dH8M3cG(j~%G&40gG%+(YH8V9qG&eLkGc+|dH8(XiH8V6gG(|KqH9<8tG(s~oH8eCtG(|N*H8C|bG%++rG(t2%G(t5tH8wRjH8C|bG&40fG&wavH90gkG(<HwH8V6gG)6TtH8?aiGc+|aH8eFbG(t5&G($BvGcq(rG(t5rG(<HvG($BvG&wUgH8V9eG&eLdG&nRjG&40dGcq+cG&nRiG&MCgH8nLdH8V6uG(|KrG($8tG)6TvH8eFhG(t5tG&40eG(<HvH8eCdG(|NsG&VFeG(t5tGcq+fG)6QsH8(XjG&eOeG(j~sG(j{rG(j~qG%+(WG%__cG(t5oH9<5rGcq$ZGcq+nG&eLkH90jlG)6T!G(j~oG)6QsH9<8tG(s~oH8eCtG(|HtG&eOhG(t2*G(t5&G(t5&H8wRjH90jkG&40bG&eLhG(t5rG&40eGcq+dG(t5&H8wOiG&M9tH8V3ZG&wavH8V6dH8C?YG&40cG(<HvG($BvG)6NuGcq+bG(s~pGcq+bGd49fGcq(bG)6QsGcq(bG(<BqG&3|aG(<EuG($8tG)6T!H9<8oG(s~qH8(UiG(<HyG($8pG(t5&G&VFeG(t5wG(t2vG&wavH8(UjG(t5tH8V6qG(j{rG(j~qG%+(WG&40bG(<HvG($BtGc+|eH8V9qG&eLsGc+_cH90jwG($8-G(|KrH90jlG(t2)G&40bG(|HtG($8rG%++rG(t5vG(<E-G&40fH8C|bG&40bG&eLwG%_?dH90jmG(j~nG(t5&H8wOiG&MCgH8V6qG&wakG(t2tGcq(pG(t5sG(t2%G&D6hG&wXxGcq+eG(|K;H8V6fGd49fGcq+cG&nRiG&D6fG)6TyG&D6aG($8pH8C|bG&MCjH9<8oG(t5pG(<EwG%++qG&D3dG&wavG&VFeG(t5wG(t2vG&wavH8(UhGcq(pG%__dG(j{rG(j~tGcq$YG&40bG(<HqH90jnG%+<cH8V3ZH83<mG(j{rG)6T!G($8+H83<XGcq(bG(s~oH8eCtG(<EuH8M0cG(<HuG($B(G(t5&H8wRjH8C|eH8V6tG&eLkGc+_fG(<HvGcz<pG(t5&H8wOiG&M9tH8V6tH83<mG&nRiH8C|eH8V9eG(t2%G&D6gH8C?ZGcq+cG(t5pG&nRiG&eOhGcq(bG)6TtG&MChG(t5pG($8*G(|K;G(j{rG)6T!H9<8oG(t5&G&D3eG&MCeGcz<ZG&wavG&VFeG(t5wG($5oG(j{$G($BuG&eOeGcz?gG(j{$G(t2qG%+<nG&40gG(t2vH90jmH90dhH8V9qG&eLkGc+|fH8(XiH8V6fG(t5&Gcq(bG(t2)G&40bG(|HtG&eOgG&40eH8eFfG(<E-G&40fH90jkG&40fG&wakG&VFiH8C|eG(t5sG&wXuH8wOiG&MCgG(j~sG&wakG&walGcq$YG&40cG(<HvG($8uGd43eH8V9gG(|NsH8V6fGd49fGcq(bG)6TtG&M9gG&eOeG&D3dG(|K)H8C|bG&MCeH8eFfG(t5pH8wRiG&MCbGcz<ZG(t5&G&VFeG(t5wG(t2rG&wXuG&nUjG)6TtH8V6qG(j{rG(j~qG%+(WG&40bG(j~sG(t5vG%+(YH8V3ZH83<mG(j{sH8(XhG(t2rG(|NsGcz?dG(s~oH8eCtG(<EuG(t2tH90jhG($B(G($8&G&40fH8C|bG&40bG&eLwG%+<eG&MChG($8+G)6TtH8?aiGc+|aG(j~oG&eOtH8V9eG(<BqG&40cG(<HvG($8vG%++pG(t5uG(|NsH8V6gG)6TwGcq(bG)6TtG(t5tG)6NrH9<8&G(|K)H8C|bG&MCeH8eFfG(t5pH8wRiG&MCbGcz<YG(|NsG&VFeG(t5wG(t2vG&wavH8(XkG&M6aH9<8tG(j{$G(t2qG%+(WG&D3rG(t5sH90jmGd43dGcq+nG&eLkGc+|fH8(XiH8V6eG(|NsGc+_dG(s~oH8eCtG($8&G&eOhG(t2)G(t2vG(t5pH8wRjH8C|aGcz<ZG(t5&G(|KuGc+|eGcz<pG(t5&H8?aiGc+|aH8V9cG(t5tG(t2tGcq(qG(t5sG(t2%G&D6gH8C|ZG(s~nG(|K;H8V6dGd49fGcq(cG(|K;Gc`0eG&MCgH9<8&G($8&H8C|bG&MCeH8eFiG(t5pH8(XlH8C|ZGcz<cG(|NsG&MCiH8V9fG&D3uG(|KrG&eLgGcq$WH9<8tG(j{$G(t2qG%+<fH9<8pG(t5pG($8vG%+<YH8V3ZH83<mG(j{rG)6T!G($8)G&eOiH8nIgG(s~oH8eCtG(|HtG&nUiG(<HtG($5oG(t2*H8wRjH8C|bG&40bG&eLwG%+<aG&eOjG(j~pG)6TtH8wOiG&eOeG(j~sG)6Q<G(t5uH8nLeH8V9eG(t2%G&D6gH8C?ZGcq+cG(|NvH90jmG&40dGcq(bG)6TtG&3|dG(t5tG&40bG(|K;G(j{rG)6T!H9<8oG(t2)H90gkH8nFcGcz<aG&eLhG&nRhG(t5wG(t2sG(t2%H8(XjG&M9tG&3_YG(j{rG($BuG&waiH8eFhG(j^pG&D3fH90jlH8V9qG&eLkGc+|fGcq+bH8V9eG(t5wGcz<cG(s~oH8eCtG(<EuG($8rG&40bH8eFfG(t5&H8wRjH8C|bG&40cG&wavG&40gH8C|eH8V6fG(t5&H8?aiGc+|aH8eFbG(t5tH8M0cG)6NrG&40cG(<HvG($BvG)6Q<G&40eH83<mG&nRhH8(XiGcq(bG)6TtG&MCgG(t5uG&D3sG(|K)G&eOhG)6TvH8eFfG(s~qH8(UiG(t2*G($8qG&wavG&MCiH8V9fG&D3uG(|KrG&eLgGcq+dG&3|aG(j{rG(j~qG%+<nG&D6hG(j~vH90gmG%+<YH8V9qG&eLkGc+|fH8(XiH8V6eG)6QrGcq(bG(s~oH8eCtG(t5&H8M3fH90jgH8V6hG(t5tH8wRjH90jkG&40bG(|NsH8(UgG(<HvH8M3bG)6TtH8wOiG&M9tH8V6fG)6TxG&nRiH8C?ZG&40dG(t2%G&D6gG&wUhH8V9gG(|NsH8V6gG)6TwGcq(cG)6QsG&40eG(t5uG&D6aG(<EuG(j{rG)6TwH8eFcG($8sH90jkGc+_rG&D3dG(t5&G&VFeG(t5tGcz<rH83<XG(t5tG&M9tGcq+ZG(j{rG($BuH8C?YG%__YG(j^pG&D3gG%+(YH8V3ZH83<mG(j{qH90jkH8eCuG(|KrGcz?dG(t2)G&40bG(|HtG($8rG%++qG($BtG(s~qH8wRjH8C|bG&40cG&wavG&40gH8C|cGcz<rG)6TtH8wRjG&3_ZG(t2+G(t5pH8C|cG)6NsG&40cG(<HvG($BvG)6NuGcq+bG(s~qH8(UkG&eOhGcq(bG)6QsH90jlG(t5uG&D3dG($8&H8C|bG&MCeH8eFhG($8&H8wRiG(<BqGcq(qG&wavG&VFeG(t5tGcz<rH83<XG(t5sGcq$XG(t5qG(j{rG(j~tGcq$YG&40bG(<HqH90jnG%+<YH8V9qG&eLkGc+|dH8(XiH8V9fG(|NsGcz<cG(s~oH8eCtG(|N*G&nUiG(<HsH8V9eG(<EuG&40fH8C|aGcz<YG(|NsG&D3cG&eOiGcz<rG)6TtH8?aiGc+|aH8V6eH83<mH8V9eG)6NrG&40cG(j~sH8wRgG&wXxH8V9fG&wakG(|KxG)6TwGcq(bG)6TtG&MCgG(t5tG&3|eG(j{)H8C|bG&MCeH8eFhG($8&H8wRiG(<E+G&3|sG(t5&G&nRhG(t5uH8M3bG&nRiG(<EuG&M9tGcq(YG(j{rG($BuG&waiH8eFhG(j^pG&D6eGc+?aH8V9qG&eLwG%_?bGd49jH8V6fG(j{rGcz?dG(t2)G&40bG(|N*G&eLfG&3_ZG&40hG(<E(G&40fH8C|eH8eCfG($8pG&waiG&wakGcz<qG(t5&H8?aiGc+|aH8V3ZG)6QwG($BvGcq$XG&40cG(<HvG($8uGd43eH8V9hG(t5&H8V6cG%+<bGcq+cG&nRiG&D3eG&wUeH8eCiG($8&G&eOhG)6T!H9<8oG(t5tG(t2rGc+_sG&D3bG&wavG&nRhG(t5wG(t2tG(<HrG&wXjG(<E+G(t2&G(j{rG(j~qG%+<bH8M3dG(t2*G($BuG&M6cH8V9qG&eLkGc+|dH8(XiH8V9fG(|HtGc+|eG(t2)G&40bG(|HtG(j{qG(<HqG($B(G(t2*H8wRjH8C|aGcz<YG(|K-Gcq+dGcq+cH8M3aG(t5&H8wOiG&M9tG&D6aG&wakH8C|cH8C|oG&40dG(t2%G&D6gG&wUhH8V9gG(|NsH8V6cG%+<bGcq(bG)6QsGcq(bG(<BqG&3|aG(|KrG(j{rG)6TwH8eFcG($8sH90jkGc+_rG&D3aG(|NsG&VFeG(t5tGcz<sG(t5&G($8uG&MCgGcz?gG(j{rG(j~tGcq$ZG&40bG(<HvH8(UkG%+<YH8V3ZG&wUhH90glH8nLhG(j~qG(t2%H8nIgG(s~oH8eCtG(<EuG(j{rG(t2)G&D6qG(t5tH8wRjH8C|bG&40bG(j{nH8nIfG)6TyH8V6fG(t5&H8wOiG&M9tH8V6fG)6TxH8V6dH8C?YG&40cG(<HvG($BwG&eIgG(t5uG(|K;H8nIhG&40dGcq+cG&nRiG&M9fG(<BpGcz<bG(|KrG($8tG)6TvH8eFhG($8&G&40eG&MCgGcz<bG&eLhG&nRhG(t5uH8M3bG&nRiG(<EuG&M9tGcz<fG(j{$G(t2qG%+<cH8V9ZG(j^pG&D3fH8(RgGcq$WG&wUhH90glH8nLhG(j~pG(|KqGcq(bG(s~oH8eCtG(<EuG&eOgG&3_ZG&40pG(s~qH8wRjH8C|aGcz<ZG(t5pG($8tG&walG(t5tG(t5&H8wOiG&M9tH8V9cG&wakG($8uH8nLfH8V9dG(<HvG($BvG)6NuGcq+bG(s~pGcq+cG)6TwGcq+cG&nRiG&40eG&wakG&D3hG($8pG(j{rG)6TvH8eFhG($8tG($BsG(t2)G&D3eG&wavG&MCiH8V9fG&D3uG(|KrG&eLhG&eOeG(t2&G(j{rG(j~qG%+<aH8V9dG(t2rH9<5rGc+|aH8V9qG&eLkGc+|fH8C|gH8eCvG(t2vGcq+cG(s~oH8eCtG(|HtH8M3eG)6TyH8eFgG(t2%H8wRjH8C|aGcq+cG&eLwG&eOgG&wakGcq+eG)6TtH8?aiGc+|aH8V9cG(t5tG(t2tGcq$ZG&40cG(<HvG($BvG)6NuGcq+bG(s~qH8(UiG)6TwGcq+cG&nRiG&3|eG&40aH8eCtG(|KrH8C|bG&MCeH8eFfG(t5&G&D3eG(<HtGcz<ZG(|NsG&nRhG(t5wG(t2tG(<HrG&wXjG)6TtG(s~nG(j{rG(j~tGcq(pG(t5vG(t5pG($BtG(s~qGcq$WG&wUhH90gjH90jjG(j~qG(|KrH9<5sG(t2)G&40bG(|N*H8M0bG&40pG&3|gG(<E(G&40fH90jkG&40bG(|NsH8wRgG&40eGcz<rG)6TtH8wOiG&M9tH8V3ZG&wavH8C|cG&wafH8V9dG(j~sH8wRgG&wXxH8V9fG&wagG&VFgG&eOhGcq(bG)6TtG&MCgG&wUeG($BtG(|KvH8C|bG&MCjH9<8oG(t5&H8(XlG%+<fG($8tG&wavG&VFeG(t5wG(t2vG&wavG(<HwG&M6aGcq(nG(j{$G(t2qG%+<dH8V3ZG(j~%G($8vG%+<cH8V9qG&eLkGc+|fH8nLfG($5oG(t5wH9<8tG(s~nH8V6qG(j^pG&nRjH90jgG($B(G(j^pG(t5uH8C|bG&40bG&eLwG%+<eG&MCfGcz<qG(t5&H8wOiG&M9tH8V9cG&wakG($8uH8nLdH8V9eG(t2%G&D6gH8C|ZG(s~nG(|K;H8V6eG)6TwGcq+cG&nRiG&D6fG)6TxG&3|pG(|K;G(j{rG)6TvH8eFfG(s~qH8(UiG(<E-G&D3aG&eLhG&VFeG(t5uH8M3bG)6TtG&wXjG&eOeH8eFbG(j{$G(t2qG%+<dH8V3ZG(j~%G($8vG%+(YH8V3ZH83<mG(j{rG(t5tH8V6eG&eOiH8nIgG(s~oH8eCtG(|HtG&eOhG(t2*G(t5sG(s~qH8wRjH90jkG&40cG&wUhG(j{rG&40fG(t5uG(t5&H8wOiG&MCgH8V9cG(t5tH8M0cG&wafH8V9eG(t2%G&D6gH8C|eG&40dG&eLhH8V6dGd49fGcq(bG)6QsGcq+cH8nLdGcz<fG(|KrG&eOhG)6TvH8eFhG($8tG($BsG&wXxG($8tG(|NsG&nRhG(t5wG(t2sG(t2%H8(XjG&M6bH8V6bG(j{$G(t2qG%+<dH8V3ZG(j~%G($8vG%+<YH8V9qG&eLkGc+|eG&40dH8V9hG(<BsGc+|eG(s~oH8eCtG(|N*H8C|bG%++rG(t2%G(t5tH8wRjH8C|bG&40bG(j{nH8nIfG&walH8V6eG(t5&H8wOiG&M9tH8V9cG&wakG($8uH8nLcH8V9dG(<HvG($8uGd43eH8V9hG(t5&H8V6cG%+<bGcq+cG&nRiG&D6fG)6TxG&3|pG(<EuG($8tG)6TvH8eFfG(s~qH8(UiG(t2*G($8qG&eLhG&MCiH8V9fG&D3uG(|KrG&eLhG&M9tG%__dG(j{rG(j~qG%+(WG%__cG(t5oH9<5rGc+?aH8V3ZG&wUhH90glH8nLhG(j~qG(t2%H9<5sG(s~oH8eCtG(<EuG&eOgG&3_ZG&40hG($8&G&40fH8C|aGcz<YG&eLhG&D3cG(<HwG(t5tG(t5&H8wOiG&M9tG(t2pG&wavG($8uH8nLdH8V9dG(<HvG($BvH8C?bG&3_YG(t5pG&nRhH8(XiGcq(bG)6TtG(t5tG)6NsG&40fG(|K;G&eOhG)6T!H9<8oG(s~qH8(UiG(<HyG($8pG(|NsG&VFeG(t5uH8M3bG)6TtG&wXjG&eOeG(j~sG(j{$G(t2qG&40dH8V6cG(<E-G($BtG(s~qGcq$WG&wUhH90gjH90jjG(t5sG(|NrGcq+cG(s~oH8eCtG(<EuG(j{rG(t2)G&D6qG(t2*H8wRjH8C|bG&40cG&wavG&40gH8C|cGcz<rG)6TtH8wOiG&MCgH8V3ZG)6Q*G($BvGcq$aG&40cG(<HvG($BvG)6NuGcq+bG(|NsH8nIhH8(XiGcq(bG)6TtG&MCgG(t5uG&D3sG(|K)H8C|bG&MCeH8eFhG($8&H8wRiG(<E+G&D3eG(t5&G&VFeG(t5wG(t2rG&wXuG&nUjG)6TtH8V3ZG(j{rG(j~tGcq$YGcz?fG(j~sH8(UjH90jlH8V3ZH83<mG($8tG&40dH8V6gG(<BsGcz?dG(s~oH8eCtG(|HtH8M3eG)6TxG($5oG(t2*H8wRjH8C|bG&40bG&eLwG%+<eG&MChH8V6eG(t5&H8?aiGc+|eG(j~oG(j{nH8M3dH8C|cH8V9dG(<HvG($BvH8C?bG&3_YG(|NvGcq+bH8(XiGcq(bG)6TtG&M9gG&eOdGcz?cG(|KvH8C|bG&MCjH9<8pG(t5pG(t5uG&wUhGcz<bG(t5&G&VFeG(t5tH8V9iG(j{$G&wakG&M6bG($BxG(j{$G(t2qG%+<dH8V3ZG(j~%G($BtGc+|eH8V9qG&eLkH90jmG&40eH8V9iG(|KrGc+|eG(t2)G&40bG)6Q*H8V6cG&MCcH8eFfG(j~sG(t5uH90jkG&40aG&eLsH8nIgH8nLiG(t5tG(t5&H8wOiG&M9tG&D6aG&wakG(|KtG&eOdH8V9dG(<HvG($BvG&wUgH8V9eG&eLdG&nRjG&40dGcq(cG(|K;Gc`0eG&MChG&3|pG($8&G&eOhG)6TvH8eFhG($8tGc`0dGcq(pG($8sG(|NsG&nRhG(t5wG(t2uH83<XG(j{qGcq(pG(t2&G(j{rG(j~qG%+(WG%__cG(t5oH90gmG&wUgH8V3ZH83<mG(j{rG&MCeG(j~qG(|KrH90gkG(s~oH8eCtG($8&G&eOhG(t2)G(t2vG(t2%H8wRjH90jkG&40bG&eLhG(|KuH8C|dGcz<oG&wXuH8wOiG&M9tH8V9cG&wakG($8uH8nLcH8V9eG(t2%G&D6gG)6NvH8V9gG(s~pH90jnG)6TwGcq+cG&nRiG&D3eG&wUeH8eCiG($8&H8C|bG&MCeH8eFfG(t5pH8wRiG&MCbGcz<ZG(t5&G&VFeG(t5tGcz<oG(j~%G(|KvG)6TtH8eFbG(j{$G(t2qG&40dH8V6cG(<E(H8(XiG(s~qGcq+nG&eLkH90jmG&40eH8V9eG(|NsGc+_dG(s~oH8eCtG(|N*H8C|bG%++qG(t5wG(j^pG(t5uH8C|aGcz<ZG(|NwG(j{rH8nLiH8V6fG(t5&H8?aiGc+|aGcq+YG)6NuG&nUjH8C|YH8V9dG(<HvG($8vG%+<aGcq+cG(t5pG&VFhH8(XiGcq+cG&nRiG&M9fG(<BpGcz<bG($8&H8C|bG&MCeH8eFhG($8&G&40eG&MCgH8eCcG(t5&G&VFeG(t5tGcz<sG(t5&G($BuG(<E+Gcq(YG(j{rG(j~qG&40dH8eCbG(t5tH8(UhG&MCgH8V9qG&eLkGc+|fH8(XiH8V6fG($8wGcq+cG(s~oH8eCtG(|N*G&nUiG(<HtH8V6pG(s~qH8wRjH8C|bG&40aG&eLhG&VFfG&walH8V6dG&wXuH8wOiG&MCgH8eFbG(t5&H8M0cG)6Q<G(t5rG(<HvG($BvG)6NuGcq+bG(|NsH8nIgG)6TwGcq(bG)6TtG&MChG(t5pG($BxG(t2oG&eOhG)6TvH8eFfG($8tH8(XlH8C|aGcz<ZG(|NsG&VFeG(t5tH8V9iG(j{$G&wakG&M9tG&D6aG(j{rG($BuG&waiH8V6fG(<ExH90jmH90dhH8V9qG&eLwG%_?bGd49jH8V6eG($8wGcz<cG(t2)G&40bG)6Q*H8V6cG&MCcH8eFfG(<HvG&40fH8C|aGcz<ZG(|NwG(j{rG)6TxGcz<rG)6TtH8wOiG&M9tH8V6tH83<mG&nRiH8C|dH8V9dG(<HvG($BvG&wUgH8V9eG&eLdH8nIfG&eOhGcq(bG)6TtG&3|dG(t5tG&40bG(|K;G(j{rG)6TvH8eFiG(t5pH8(XlH8C|cGcq(qG(|NsG&nRhG(t5wG(t2uH83<XG(j~tG&MCgGcz<fG(j{rG(j~qG%+<aH8V9cG(j~%G&D6fG&MCcH8V9qG&eLkGc+|dH8(XiH8V9fG)6QrGcz<cG(s~oH8eCtG(<EuG&eOgG&40pG&3|oG(<EuG&40fH8C|bG&40aG&eLhG&40cG%+<dH8V6eG(t5&H8wOiG&M9tH8V3ZG&wavG&nRiH8C?ZG&40cG(<HvG($8vG%++pG(t5uG(s~pH90jmGd49fGcq(bG)6TtG&MCgG(t5tG&3|eG(|K;G&eOhG)6TvH8eFhG($8&G&40eG&MCdGcz<cG(t5&G&VFeG(t5wG(t2vG&wavH8(XkG&40eH8V3ZG(j{rG(j~qG%+(WG&40bG(j~sG($BtGcq$ZGcq$WG&wUhH90glH8nLhG(j~oG(j{$G(|KvG(s~oH8eCtG(|N*H8C|bG&40aH8eFgG(<EuG&40fH8C|bG&40bG&eLwG%+<aG&eOhGcz<pG(t5&H8wOiG&M9tH8V9cG&wakG(j~tGc+?YG&40cG(<HvG($8uH8(RgGcq+bG(t5tH8V6eG&eOhGcq+cG&nRiG&D6fG)6TxG&3|pG($8&G&eOhG)6TvH8eFhG(t5tG&40eG(<HvGcq(qG&wavG&nRhG(t5wG($5oG(|KrG&nUjG)6TtG($BpG(j{rG(j~qG%+<bH8M3dG(t2*G($BtGc+?aH8V3ZH83<mG(j{rG)6T!G($8)G&eOiH8nIgG(t2)G&40bG(|N*H8V9gH90jgH8V6hG(j~sG(t5uH8C|bG&40bG&eLwG%+<aG&eOjG(j~pG)6TtH8wOiG&eOeG(j~sG)6Q<G(t5tG)6NrG&40cG(<HvG($BvG&wUgH8V9eG&eLdG&nRgG%+<bGcq+cG&nRiG&40eG&wakG&D3hG(s~qG&eOhG)6TwH8eFcG($8sH90jkGc+?ZGcz<YG(t5&G&VFeG(t5wG(t2vG)6QsH8(XkG&MCgG&D3sG(j{$G(t2qG%+<nG&40gG(t2%G&D6fG&MCcH8V9qG&eLkGc+|fGcq+bH8V9hG(<BsGcz?dG(s~oH8eCtG(<EuH8M0cG(<HuG($B(G(<EuG&40fH8C|bG&40cG&wavG&D3cG(t5sH9<8qG)6TtH8wOiG&M9tH8V9cG&wakG($8uGc+?aG&40cG(<HvG($BvH8C_rH8V3ZG(|NvGcq+bG)6TwGcq+cG&nRiG&MCgH8nLdH8V6uG(|KrH8C|bG&MCjH9<8pG(t5pG(t5uG&wUhGcz<aG(|NsG&VFeG(t5tGcq+bG&wXuG&nRiG&M9tG&D6aG(j{rG(j~qG%+(WG&40bG(j~sG($BtGc+|aH8V9qG&eLsGc+_dH8V9qG($8(G(|NsH8?dkG(s~oH8eCtG(|N*G&nUiG(<HtH8V6pG(s~qH8wRjH8C|eH8V6tG&eLdG($8vH8V9fGcq+eG)6TtH8wOiG&MCgGcq+YH83<XH8C|cG&wagH8V9eG(t2%G&D6gG)6NvH8V9gG&wagG&VFiG&eOhGcq(bG)6QsH9<5rGcq+cG(t5qG(<EuG&eOhG)6TvH8eFhG($8tG($BsG&wXxG($8tG(|NsG&VFeG(t5tGcz<oG(j~%G(|KvG(<E+Gcq+ZG(j{rG(j~tGcq(qG($8)G(<EuG&D6eH8nLdH8V3ZG&wUhH90glH8nLhG(j~pG(|KqGcq+cG(s~oH8eCtG(|HtG&eOhG(t2*G(t5&G(t5pH8wRjH8C|bG&40cG&wavG&D3cG(t5sGcz<qG(t5&H8wOiG&MCgH8V6qG&wakG($BvGcq(qG(t5sG(t2%G&D6gH8C|ZG(t5tG&wagG&D3gG)6TwGcq(cG(|K;Gc`0eG&MChG&3|pG($8&G&eOhG)6TvH8eFhG($8&G&40eG&MCgGcz<bG&eLhG&VFeG(t5tGcz<sG(t5&G($8uG&MCgGcz<fG(j{rG($BvH8(XiH8V9cG(j~%G($8vG%+(YH8V3ZG&wUhH90glH8nLhG(j~pG(|KrH90gkG(s~oH8eCtG)6Q*G&eOjH90jlH8V9qG(t5pH8wRjH8C|eH8V6tG&eLdG($8vG(<HvGcq+dG(t5&H8wRjG&3_YGcz?bH83<mH8V9eG)6NvG&40dG(t2%G&D6gH8C|eG&40dG(|NvGcq+cG)6TwGcq(bG)6TtG&MChG(t5pG($BxG(|K)H8C|bG&MCeH8eFhG(t2*H8wRiG&M6bGcq(qG&wavG&VFeG(t5wG($5oG(j{$G($BuG&3|rG&3_YG(j{$G(t2qG&40dH8M3cG(j~%G&D6eGc+|aH8V9qG&eLkGc+|fH8(XiH8V6fG($8wH9<8tG(s~oH8eCtG(|HtG&eOhG(t2*G(t5&G(t5&H8wRjH8C|aGcz<ZG(|NwG(j{rG)6TxGcz<qG(t5&H8wRjG&3_ZG(t5uG)6QwH8V9eG)6NrG&40cG(<HvG($BvG)6Q<G&40fG&wUgGcq+bGd49fGcq(bG)6QsH9<8tG)6NrGcz<bG(<EuG($8tG)6TvH8eFhG($8&G&40eG&MCgGcq(qG&wavG&MCiH8V9fG&D3uG(|KrG&eLgGcq$XG&D6aG(j{rG(j~qG&40dH8eCbG(t5tH8(XiGcq$ZGcq+nG&eLkGc+|eG&40dH8V9hG(<BsGc+_dG(s~nH8V6qG(j^pH8V9eG(s~pGcz?oG(t5pH8wRjH8C|eH8V6tG&eLkGc+_fG(<HvGcz<oG&wXuH8wOiG&M9tH8V6fG)6TxH8M3cG&M6dG&40cG(<HvG($BvG)6NuGcq+bG(s~pGcq+bG)6TwGcq(bG)6QsG(t2tG&eIgH8eCiG(<EuG(j{rG)6T!H9<8oG(t5&H8(XlG%+<aGcq+nG(t5&G&VFeG(t5wG(t2vG&wavH8(XkG&M6aH9<8tG(j{$G(t2qG%+<aH8eFaG(t5&H8(XiG(s~qGcq+nG&eLsGc+_cH90jwG(t5vG(|KrH8C|dG(t2)G&40bG(|HtG($8rG%++rG(t5&G(t2%H8wRjH8C|aGcz<ZG(t5&G(|KuGc+|fG(t5sG&wXuH8wRjG&3_YGcz?bH83<mH8V9eG)6Q;G(t5rG(j~sH8wRgG(t2*G&40cH83<mG&VFfH8(XiGcq+cG&nRiG&D6fG)6TxG&40fG(|KrG($8tG)6TvH8eFhG($8tG($BsG&wXxG($8tG(t5&G&nRhG(t5wG($5oG(|KrG&wXjG&eOeH8V6qG(j{rG(j~qG%+(WG&40YG(j{(H9<5rH8V3cGcq$WH83<mG(j{sG&40eH8V9fG&eOeGcz?dG(s~oH8eCtG(|HtG&nUiG(<HtH8V6pG(t5tH8wRjH90jkG&40bG(t5pG%_?aG(<HvGcz<qG(t5&H8wOiG&eOeG(j~sG)6Q<G(t5uH8nLgH8V9dG(<HvG($BvG&wUgH8V9eG(|NsH8M3cG(t5sGcq(bG)6TtG&MCgG(t5uG&D3sG(|K)G&eOhG)6T!H9<8oG($8&G&3|cG(<HsGcz<aG(t5&G&nRhG(t5wG(t2sG(t2%H8(XjG&M9tG&3_YG(j{rG($BuG&waiH8eFhG(j^pG&D3fG&wakH8V9qG&eLkGc+|fGcq+bH8V9iG(j~vH90gkG(s~nH8V6qG(j^pH8V9eG(s~pGcz?oG(t5tH8wRjH8C|eH8V6tG&eLdG($8vH8V9fGcq+bG&wXuH8?aiGc+|aH8V9cG(t5tG(t2tGcq$XG&40cG(<HvG($BwG&eIgG(t5uG(|K;H8nIgG&eOhGcq+cG&nRiG&MCgH8nLdH8V6bG(|KrG($8tG)6TvH8eFfG(t5&G&D3eG(<HtGcz<YG(|NsG&nRhG(t5wG(t2uH83<XG(j{qGcq$XG($8wG(j{$G(t2qG%+<bH8V6uG(j^pG&D3fG&wagH8V9qG&eLkH90jmH8V9iH8V6fG($8&Gc+_dG(s~oH8eCtG(|N*G&nUiG(<HrH8eFgG(t2*H8wRjH8C|aGcz<YG(|NsG&D3cG&eOiGcq+bG&wXuH8wOiG&M9tG(t2pG&wavH8C|cG&wahH8V9dG(<HvG($BvG&wUgH8V9fG(s~pGcq+dG&40dGcq(bG)6TtG(t5tG)6NrH9<8&G(|K;G($8tG)6TwH8eFcG($8sH90jkGc+_rG&D3aG(t5&G&VFeG(t5wG(t2rG(|KrG(t5uG&M6aH9<8tG(j{$G(t2qG%+<cG($BwG(<HvH8(UjH8(RgGcq+nG&eLkGc+|fH8(XiH8V6fG($8wGcz<cG(s~nH8V6qG(j^pH8V9eG(s~pGcz?oG(t5pH8wRjH8C|aGcz<ZG(t5pG($8tG&walG(t5uG(t5&H8wOiG&M9tH8V9cG&wakG($8uH8nLcH8V9dG(<HvG($8uH90gzH8V9hG&wagG&D3gG)6TwGcq(bG)6TtG&M9gG&eOdGcz?cG(|K)G&eOhG)6TvH8eFhG($8&H8wRiG(<E+G&D3eG(t5&G&nRhG(t5wG(t2sG(t2%H8(XjG&M9tG&D6aG(j{rG(j~tGcq$YGcz?gG(t2%G&D3gG%+(YH8V3ZH83<mG(j{sG&40eH8V9gG)6QsH90jlG(s~oH8eCtG(|HtG&eOhG(t2)G($BpG(<E-G&40fH8C|eH8V6tG(|K;G&D3cG&eOiGcz<pG(t5&H8wRjG&3_YGcz?bH83<XG&nUjH8C?ZG&40cG(<HvG($8uH8(RgGcq+bG(t5tH8nIfG&eOhGcq(bG)6TtG&MCgG(t5tG&3|eG(j{)H8C|bG&MCeH8eFfG($8tH8(XlH8C|aGcz<ZG&eLhG&VFeG(t5wG(t2rG&wXuG&nUjG)6TtGcq+ZG(j{rG(j~qG%+(WG&40bG(<HvG($BuG&MCgH8V3ZH83<mG(j{qGc+|pG($8-G(|KrG(|KvG(s~oH8eCtG(|HtH8M3eG)6TxG($5oG(t2%H8wRjH8C|eH8V6tG&eLdG($8vG&MCgH8M3ZG(t5&H8wOiG&MCgG(j~nH83<XG&nUjG(<BrG&40cG(<HvG($BvH8C?bG&3_YG(t5pG&nRhH8(XiGcq(bG)6TtG&M9gG&eOdGcz?cG(|K;G(j{rG)6TwH8eFcG($8sH90jkGc+?ZGcz<cG&wavG&VFeG(t5uH8M3bG)6TtG&wXjG&3|rH8eFjG(j{rG(j~qG%+<bH8M3dG(t2%H8(XjG&MCgH8V9qG&eLkH90jlG&eOhH8V6fG)6QsH9<8tG(s~oH8eCtG(|HtH8V9gGcq+dH8eFgG(t2%H8wRjH8C|eH8V6tG&eLdG($8vG&MCgH8eCrG&wXuH8wOiG&MCgGcq+YH83<XG($8uGcq(rG(t5sG(t2%G&D6hG&wXxGcq+eG(|K)G&VFeG&wajGcq+cG&nRiG&M9eGc+|eG(j~oG(|KrG(j{rG)6TvH8eFhG($8tG($BsG&wXxG($8sG&eLhG&VFeG(t5wG(t2rG(|KrG(t2rGcq(pG&D6aG(j{$G(t2qG&40dH8M3cG(j~sG($BtGcq$ZGcq+nG&eLkGc+|fH8nLfG($5oG(t5wH9<5sG(t2)G&40bG(|HtH8M0cG(<HrG($5oG(t5tH8wRjH8C|bG&40cG&wavG&40gH8C|cGcz<rG)6TtH8?aiGc+|aH8V9cG(t5tG(t2tGcq(pG(t5sG(t2%G&D6hG&wXxGcq+nG(s~pH90jmH8(XiGcq+cG&nRiG&D6fG)6TxG&3|pG(|KrG(j{rG)6TvH8eFhG($8&G&40eG&MCdH8eCcG&wavG&nRhG(t5wG(t2rG(j~%G($8uG&MChG&3|aG(j{$G(t2qG%+<cH8V9ZG(j^pG&D3fH90dhH8V9qG&eLkH90jkGd49fH8V6eG(j{$H90jlG(s~oH8eCtG(<EuG&eOgG&3_ZG&40pG(s~qH8wRjH8C|aGcz<YG&eLhG&D3cG(<HvGcq+bG&wXuH8wOiG&M9tH8V9cG&wakG($8uH8nLdH8V9dG(<HvG($BvG&wUgH8V9eG(|NsH8M3cG(t5sGcq(bG)6QsGcq+cH8nLdH8eCtG(|K;G($8tG)6T!H9<8oG($8&G&3|cG&3|sG($8rG&wavG&VFeG(t5tGcz<pG&eOiG(j{qGcq$XG(t5qG(j{$G(t2qG%+<nG&40gG(t2vH90jmH90dhH8V9qG&eLkGc+|fH8(XiH8V6fG(t5&Gcq(bG(s~oH8eCtG(<EuH8V6eG(<HwH8V9iG(<E-G&40fH90jkG&40bG(t5sGcq(ZG&wakH8M3aG(t5&H8?aiGc+|aH8V3ZG)6QwH8M0cG)6NuG&40cG(<HvG($BvG&eLwG&40eG&eLdH8nIhG&40dGcq(bG)6TtG&3|dG(t5tG&40bG(|K;G($8tG)6T!H9<8pG(t5pG(t5uG&wUeGcq(rG(|NsG&nRhG(t5wG(t2tG(<HrG&nRhGcq+dG&3|aG(j{rG(j~qG%+(WG%__cG(t5pG&40cH8C?aGcq$WH83<mG(j{rG)6T!G($8*G)6QsH9<8tG(s~oH8eCtG)6Q*G&eOjH90jmH8V6pG($8&G&40fH8C|eH8V6tG&eLdG($8vG(<HvGcq+eG)6TtH8wOiG&eOeG(j~sG)6Q<G(j{sGc+?aG&40dG(t2%G&D6hG&wXxGcq+nG(s~pH90jjG&wajGcq(bG)6TtG&MCgG(t5tG&3|eG(|K;G($8tG)6TvH8eFfG(t5tH8wRiG&MCeGcz<YG&eLhG&VFeG(t5uH8e9aG(|KrG(j~sG)6TtH8V3ZG(j{rG(j~qG%+<aH8V9cG(j~%G&D6fG&MCcH8V9qG&eLwG%_?bGd49jH8V6fG(j{rGc+|eG(t2)G&40bG(|HtH8M0cG(<HsH8eFfG(<EuG&40fH8C|bG&40aG&eLhG&40cG%+<dH8V6eG(t5&H8wOiG&M9tG&D6aG&wavG(j~tGc+?aG&40cG(<HvG($8uGd43eH8V9gG&eLdH8nIhGd49fGcq(bG)6TtG&3|dG(t5tG&40bG(|K)G&eOhG)6TvH8eFhG($8&H8wRiG(t2)G($8tG(|NsG&VFeG(t5tGcz<qG(<HrG(j~tG&MCgH8V3ZG(j{rG(j~qG%+(WG&40bG(j~sG($BuG&3_bGcq+nG&eLkGc+|fH8(XiH8V6eG)6QrGcq+cG(s~oH8eCtG(|HtG&nUiG(<HtG($5oG(t2*H8wRjH8C|bG&40cG&wavG&40gH8C|eH8V6fG(t5&H8wOiG&MCgG(j~sG&wakG&walGcq(pG(t5rG(<HvG($8uH90gzH8V3ZG(|K;H8V6dG)6TwGcq(bG)6TtG&M9gG&eOeG&D3dG(|K)H8C|bG&MCeH8eFhG($8tG($BsG&wXxG($8tG&wavG&VFeG(t5tH8V9iG(j{$G&wakG&M9tG&3_YG(j{$G(t2qG%+<dH8V3ZG(j~%G($8vG%+<YH8V9qG&eLkGc+|fH8(XiH8V6eG)6QrGcq+cG(t2)G&40bG)6Q*G&nUiG(t2*G(t5&G(t5pH8wRjH8C|aGcz<YH83<mG&D3dG(t5tGcz<oG&wXuH8?aiGc+|aH8V3ZG)6QwH8M0cH8C?XG&40cG(<HvG($8vG%+(YGcq+dG&wakH8V6cG%+<bGcq(cG(|NrGcq+dG&wagG&D3hG(<EuG($8tG)6TvH8eFfG(t5pH8wRiG&MCbGcz<YG&eLhG&nRhG(t5wG(t2tG(<HrG&wXjG(<E+G($BpG(j{rG(j~qG&40dH8eCbG(t5tH8(XiGc+?aH8V3ZH83<mG($8tG&40dH8V6gG(<BsGcz?dG(s~oH8eCtG(|HtH8V9gGcq+dH8eFfG(j^pG(t5uH90jkG&40bG&eLhG(|KuG(t5uH8V6eG(t5&H8wOiG&M9tG&D6aG&wakG(|KtG&M9tG(t5sG(t2%G&D6gH8C|eG&40dG&eLhH8V6fH8(XiGcq(cG(|K;Gc`0eG&MChG&3|pG(<EuG(j{rG)6T!H9<8oG(t5&H8(XlG%+<fG($8qG&eLhG&VFeG(t5wG(t2rG&wXuG&nRjG&40fG&3|aG(j{$G(t2qG%+(WG&D3rG(t5sH9<5rG(<BrH8V3ZH83<mG(j{rG&MCeG(j~qG(|KrH90gkG(s~oH8eCtG($8&G&eOhG(t2)G(t2vG(t2*H8wRjH8C|bG&40bG&eLwG%+<aG&eOjG($8+G)6TtH8?aiGc+|aGcq(nG)6Q*H8M0cG)6Q;G(t5sG(t2%G&D6gH8C_qG(t5uG&wakH8V6gG&eOhGcq(bG)6TtG&M9gG&eOdGcz?cG(|KvG&eOhG)6TvH8eFhG($8&G&40eG&MCgH8eCcG(t5&G&nRhG(t5uH8eFrG&nRiG(|KvG(<E+H8eFjG(j{rG($BuH8C?YG%__YG(j^pG&D3gG%+<cH8V9qG&eLkGc+|fH8C|gH8eCrG(t5wH9<5sG(s~oH8eCtG(|HtH8M3eG)6TxG($B(G(j~%G(t5uH8C|bG&40cG(j{nH8nIfGcq+dH8V6fG(t5&H8?aiGc+|aH8V6eH83<mH8V9eG)6NtG&40dG(t2%G&D6gH8C|eG&40dG&eLhH8V6eG&eOhGcq(bG)6TtG&40fG(t5pG($8*G(|K;H8C|bG&MCeH8eFhG(t2*H8wRiG(<HsGcq(qG&eLhG&VFeG(t5tGcz<rH83<XG(t2sG(<E+H8V9cG(j{rG(j~qG%+(WG&40bG(j~sG($BuG&MCgH8V9qG&eLkH90jmH8(XhG(t5uG($8&Gcq+cG(s~nH8V6qG(j^pH8V9eG(s~pGcz?oG(t5tH8wRjH8C|aGcz<YG(|NsG&D3cG&eOiGcz<pG(t5&H8wRjG&3_ZG(t2+G(t5pH8V6dG)6NtG&40cG(<HvG($8vG%++pG(t5uG(s~pH90jnG&eOhGcq(bG)6QsH9<5sG(t5tG&3|pG(<EuH8C|bG&MCeH8eFiG(t5pH8(XlH8C|cGcq(rG&wavG&VFeG(t5tGcq+bG&wXuG&nRiG&M9tG($BpG(j{rG(j~qG%+<bH8M3dG(t2%H8(XjG&MCgH8V9qG&eLkH90jmG&40eH8V9eG(|NsGcz<cG(s~oH8eCtG)6Q*G&eOjH90jmH8V6pG(s~qH8wRjH90jkG&40bG&eLhG(|KuH8C|eG(t5tG(t5&H8wOiG&M9tG&D6aG&wakG(|KtG&M9tG(t5sG(t2%G&D6gG)6NvH8V9gG(s~pH90jnG&eOhGcq(bG)6TtG&40fG(t5pG(t2+G(|K;G(j{rG)6T!H9<8oG(s~qH8(UiG(<HtGcz<YG&eLhG&VFeG(t5tGcz<oG(j~%G(|KvG)6TtH8eFbG(j{rG(j~tGcq$aG&D3aG(t2vH90jnG%+<cH8V9qG&eLkGc+|fH8(XiH8V6fG($8tGcz?dG(t2)G&40bG(|HtH8M0cG(<HrG($5oG(t5&H8wRjH8C|bG&40aG&eLhG&40cG%+<bGcz<rG)6TtH8wOiG&MCgGcq+YH83<bG(j{sGc+|aH8V9dG(j~sH8wRgG(t2*G&40cG(|K;G(|KwGd49fGcq(bG)6QsH90jlG&wUeH8eCiG(|K)G(j{rG)6TvH8eFhG($8tG($BsG(s~rH8eCbG&eLhG&VFeG(t5wG(t2rG&wXuG&nRjG&M6aGcq$WG(j{rG(j~tH90jjH8e9aG(j^pG&D3fH8(RgGcq$WH83<mG(j{rG)6T!G($8+H83<XH8nIgG(s~oH8eCtG(|HtH8M3eG(<BpG&D6fG(t2sH8wRjH8C|aGcz<YG&eLhG&D3cG(<HvGcz<oG&wXuH8wOiG&MCcG($BtG&eOtH8V9eG(<BrG&40dG(t2%G&D6gH8C|eG&40dG(t5pG&D3gG)6TwGcq+cG&nRiG&40eG&wakG&D3hG(|KvG($8tG)6TvH8eFhG($8tG($BsG(t2)G&D3eG(t5&G&VFeG(t5wG(t2rG&wXuG&nUjG)6TtH8V6qG(j{$G(t2qG%+<dH8V3ZG(j~sH8(UkG%+<cH8V9qG&eLkH90jmG&40eH8V9eG(|NsGcz?dG(t2)G&40bG)6Q*H8V6cG&MCcH8eFfG(<HvG&40fH8C|bG&40cG&wajGcq(dG&MChG($8(G&wXuH8?aiGc+|aH8eFbG(t5&G(t2tH8nLcH8V9dG(<HvG($BvG)6Q<G&40eG&eLdH8nIgG&eOhGcq(bG)6QsGcq(aGc+|eH8V3ZG(|KrG($8tG)6TvH8eFhG(t5tG&40eG(<BqGcq(qG&wavG&VFeG(t5uH8M3bG)6TtG&nUjG(<BtH8eCtG(j{rG(j~qG%+(WG&40bG(<HvG(t5vG%+<cH8V3ZH83<mG(j{sH8(XhG(t5tG)6QsGc+_dG(t2)G&40bG(|HtG(j{qG)6TyH8V6hG(t5&H8wRjH90jkG&40bG(|NsH8wRkH8V9gH8V6eG(t5&H8wOiG&MCgH8eFbG(t5&H8V9eH8C|aH8V9dG(j~sH8wRgG&3_cG(t5vG&wagG&VFfH8(XiGcq(bG)6QsGcq+cH8nLdGcz<fG(|KrG&eOhG)6TwH8eFcG($8sH90jkGc+_rG&D3aG(t5&G&VFeG(t5tGcz<oG(j~%G(<EuG&eOeH8V3ZG(j{$G(t2qG%+(WG&D3rG(t5tG&D6eG(<HvH8V9qG&eLkH90jlG(t5tH8V9fG&eOiGcq+cG(s~nH8V6qG(j^pH8V9eG(s~pGcz?gG(<E(G&40fH90jkG&40bG&wajH90giG&wakGcq+eG)6TtH8wOiG&M9tH8V6fG)6TxH8V6dH8C?ZG&40cG(j~sH8wRgG(t2*G&40cG&eLdH8nIfG)6TwGcq(bG)6TtG&MCgG(t5tG&3|eG(|K)H8C|bG&MCeH8eFhG(t5tG&40eG(<BqGcq(qG(|NsG&VFeG(t5uH8M3bG)6TtG&wXjG&eOeH8V3ZG(j{$G(t2qG&40dH8V6cG(<E(H8(XjG(<BrH8V3ZH83<mG(j{rG)6T!G($8)G&eOiH8nIgG(s~oH8eCtG(|HtG&nUiG(<HtH8M3fG(<HrG&40fH90jkG&40bH83<mG($8sH8(XjGcz<oG&wXuH8wOiG&MCgH8eFbG(t5&G&nUjG)6Q=G(t5rG(j~sH8wRgG(t2*G&40cG&eLdH8V6dH8(XiGcq(bG)6TtG(t5tG)6NsG&40fG(|K;G(j{rG)6TvH8eFfG(t5pH8wRiG&MCbGcz<ZG(t5&G&VFeG(t5wG(t2rG&wXuG&nUjG)6TtG(t2&G(j{rG(j~qG%+(WG&40YG(j{(H9<5rH8nFdH8V9qG&eLkGc+|fGcq+bH8V9iG(j~rH9<8tG(s~oH8eCtG(|N*H8C|bG%++rG(t2%G(t5tH8wRjH8C|bG&40fG&wavH90gkG(<HuGcq+dG(t5&H8?aiGc+|eH8V6bG&wakH8C|cH8C|eH8V9dG(<HvG($BvG)6NuGcq+bG(|NsG&nRjG&40dGcq(bG)6QsH9<5sG(t5uG&D6aG(<EuG($8tG)6TvH8eFfG(t5&G&D3eG(<HtGcz<YG(t5&G&MCiH8V9fG&D3qG($8&G&wakG&M6bG($BxG(j{rG(j~qG%+(WG%__cG(t5oH9<5rGcq$ZGcq+nG&eLkH90jlG)6T!G(j~oG)6QsH9<8tG(s~oH8eCtG(|HtG&eOhG(t2*G(t5&G($8&G&40fH8C|bG&40aG&eLhG&40gH8C|eG($8(G&wXuH8wOiG&M9tH8V6fG)6TxH8M3cG&M6dG&40cG(<HvG($BvG&wUgH8V9fG(s~pGcq+cG)6TwGcq(bG)6QsGcq(bG(<BqG&3|aG(<EuG($8tG)6T!H9<8oG(s~qH8(UiG(<HyG($8pG(t5&G&VFeG(t5wG(t2vG&wavH8(UjG(t5tH8V6qG(j{rG(j~qG%+(WG&40bG(<HvG($BtGc+|eH8V9qG&eLsGc+_cH90jwG($8-G(|KqH90jlG(s~oH8eCtG($8&G&eOhG(t2)G(t2vG($8&G&40fH8C|bG&40cG&wavG&D3cG(t5uH8V6gG)6TtH8?aiGc+|eG(j~oG(j{nH8M3dH8C|cH8V9dG(j~sH8(UhG(s~qGcq+bG(t5pG&VFgG&eOhGcq(cG(|K;Gc`0eG&MChG&3|pG(|KvH8C|bG&MCeH8eFfG(s~qH8(UiG(<E-G&D3cG(|NsG&MCiH8V9fG&40hG(j{$H8(XjG&M9tG($BpG(j{$G(t2qG%+<aH8eFaG(s~qG($BtG(<HvH8V3ZH83<mG(j{rG)6T!G($8*G)6QsGcq(bG(s~oH8eCtG(|N*H8C|bG%++rG(t2%G($8&G&40fH90jkG&40fG(j{nH8M3cG%+<dH8V6eG(t5&H8wOiG&M9tH8V9cG&wakG(j~sH8C|YH8V9dG(<HvG($8uH8(RgGcq+bG(t5tH8V6dH8(XiGcq(bG)6TtG&MChG(t5pG(j~%G(j~oH8C|bG&MCeH8eFfG(s~qH8(UiG(<E-G&D3bG(t5&G&VFeG(t5tGcq+fG)6QsG(<HuGcq+dG&3|aG(j{rG(j~tGcq$YG&40bG(<HqH9<5rG(<HrH8V9qG&eLkGc+|eG&40dH8V9gG(t5&Gcz<cG(s~oH8eCtG($8&G&eOhG(t2)G(t2vG(s~qH8wRjH90jkG&40bG(t5sGcq(ZG&wakGcq+dG(t5&H8wRjG&3_ZG(t5uG)6QwH8V9eG(<BrG&40dG(t2%G&D6gG&wXyH8V9fG&wakH8M3gH8C|cGcq(bG)6QsG(t2tG&eIgH8eCiG(<EuG($8tG)6T!H9<8oG(t5&H8(XlG%+(YGcz<ZG(t5&G&MCiH8V9fG&D3uG(|KrG&eLgGcq$XG&3|pG(j{rG(j~qG%+(WG&40bG(j~sG(t5vG%+(YH8V3ZH83<mG(j{sH8(XhG(t2rG(|NsGcz?dG(s~oH8eCtG(<EuG(t2tH8(UyG(t5&G(t5tH8wRjH90jkG&40bG(|NsH8wRgG&40eGcq+bG&wXuH8wOiG&MCgGcq+YH83<bG(j{sGc+|bH8V9dG(<HvG($BvH8C?bG&3_YG(|NvGcq+bGd49fGcq+cG&nRiG&D3eG&wUeH8eCiG($8pH8C|bG&MCjH9<8oG(t5&H8(XlG%+(YGcz<YG&eLhG&VFeG(t5uH8e9aG(|KrG(t2sG&eOeH8eFbG(j{rG(j~qG%+<aH8V9dG(t2rH9<5sG&M6cH8V9qG&eLwG%_?bGd49jH8V6eG(t5sGcq(bG(s~oH8eCtG($8&G&eOhG(t2)G(t2vG(t5&H8wRjH8C|aGcz<ZG(t5&G(|KuGc+|fH8V6dG&wXuH8?aiGc+|aG($BtG&wUhG($8uGc+|bH8V9dG(<HvG($8vG%+(YGcq+dG&wagG&VFhGd49fGcq(cG(|K;Gc`0eG&MCgH9<8&G($8&H8C|bG&MCeH8eFiG(t5pH8(XlH8C|cGcq(qG&wavG&VFeG(t5tGcz<pG&eOiG&wXjG(<E+H8V9cG(j{rG(j~tGcq(pG(t5vG(t5tG&D3gG%+<cH8V9qG&eLkH90jlG&eOhH8V6eG&eOiH9<5sG(s~oH8eCtG(|HtG&nUiG(<HtH8M3eG(<E(G&40fH8C|bG&40bG&eLwG%+<aG&eOjG(j~pG)6TtH8wOiG&eOeG(j~sG)6Q<G(t5uH8nLeH8V9eG(t2%G&D6gH8C?ZGcq+cG(|NvH90jmG&40dGcq(bG)6TtG&MCgG(t5tG&3|eG(|K)G(j{rG)6T!H9<8oG($8&G&3|cG(<HsGcz<aG&wavG&VFeG(t5tGcz<pG&eOiG(j{qGcq$WGcz?YG(j{rG($BuG&waiH8eFhG(j^pG&D3fG&wUgH8V9qG&eLkGc+|fH8(XiH8V6fG(t5&Gcq(bG(s~oH8eCtG(<EuG($8rG&40bH8eFfG(t5&H8wRjH8C|bG&40cG&wavG&40gH8C|eH8V6dG&wXuH8wOiG&M9tH8V9cG&wakG(j~tH8nLeH8V9dG(<HvG($8uGd43eH8V9hG(t5&H8nIhG&40dGcq+cG&nRiG&3|eG&40aH8eCtG(|KrG&eOhG)6TvH8eFfG(t5&G&D3eG(<HtGcz<ZG(|NsG&VFeG(t5tGcq+bG&wXuG&nRiG&M9tG($BpG(j{rG(j~qG%+<nG&D6hG(j~vH9<5rGc+?aH8V9qG&eLkGc+|fH8C|gH8eCrG(t5wGcq(bG(s~oH8eCtG(t5&H8M3fH8(RgG&3|fG($8&G&40fH8C|aGcq+dG(|K)H8(UjGcq+cGcq+bG&wXuH8wOiG&M9tH8V9cG&wakG($8uGc+|pG&40cG(<HvG($8vG%+<YH8V9eG(|NvH90jlG)6TwGcq(cG(|NrGcq+dG&eIgG(j~%G($8&G($8tG)6T!H9<8oG(t5&H8(XlG%+<aGcq+nG(t5&G&nRhG(t5uH8M3cG)6QsG&wakG&M6eH8V6fG(j{rG(j~qG%+<aH8V9cG(j~%G&D6fG&MCcH8V9qG&eLkH90jkGd49fH8V6eG(j{$H9<5sG(t2)G&40bG(|HtG($8rG%++qG($BtG(s~qH8wRjH8C|bG&40aG&eLhG&40cG%+<dH8V6dG&wXuH8wRjG&3_ZG(t5uG)6QwH8V9eG)6NtG&40cG(<HvG($BvH8C_rH8V3ZG(|NvH90giG(t5sGcq+cG&nRiG&M9fG(<BpGcq+ZG(|K;G(j{rG)6TvH8eFhG(t5tG&40eG(<HvGcq(qG(t5&G&VFeG(t5tGcz<rH83<XG(t5sGcq$XG(t5qG(j{rG(j~tGcq$YG&40bG(<HqH90jnG%+(YH8V3ZH83<mG(j{rG)6T!G($8+H83<XGcz?dG(s~oH8eCtG(|HtG&eOhG(t2*G(t5sG(s~qH8wRjH90jkG&40cG&wUhG(j{rG&walG(t5vG)6TtH8?aiGc+|aH8V6eH83<mH8V9eG)6NvG&40dG(t2%G&D6gH8C|eG&40dG(|NvGcq+cG&eOhGcq(bG)6QsGcq(bG(<BpH9<8pG(<EuG(j{rG)6TvH8eFhG(t2*H8wRiG&M6bGcq(qG(|NsG&VFeG(t5uH8e9aG(|KrG(t2sG&eOeGcq+ZG(j{rG(j~qG%+<nG&D6hG(j{(H9<5rGc+|aH8V9qG&eLwG%_?bGd49jH8V6fG(j{rGcz?dG(t2)G&40bG(|HtG&eOgG&40dG($B(G(<E(G&40fH8C|aGcz<YH83<mG%+<aG&40fH8V6eG(t5&H8?aiGc+|aH8V3ZG)6QwG(t2tGcq+YH8V9dG(<HvG($8uGd43eH8V9hG(t5&H8nIhG&40dGcq(bG)6QsGcq(aGc+|eH8V6uG(|KrG(j{rG)6T!H9<8oG(t5tG(t2rGc+_sG&40pG(t5&G&nRhG(t5wG(t2tG(<HrG&wXjG(<E+G(t2&G(j{rG(j~qG%+<bH8M3dG(t2*G($BuG&M6cH8V9qG&eLkGc+|dH8(XiH8V6gG(<BsGc+|eG(s~oH8eCtG(t5&H8M3fH8(RgG&3|fG(<E(G&40fH8C|eH8V6tG&eLdG($8vH8V9fGcz<pG(t5&H8wOiG&MCgGcq+YH83<bG(j{sGcq(qG(t5rG(<HvG($8vG%+<dG&40eG(|NvH90jmGd49fGcq(cG)6QsG&40eG(t5tG&40fG(<EuH8C|bG&MCfH8eFcG($8sH90jkGc+?ZGcz<YG(t5&G&VFeG(t5wG($5oG(j{$G($BuG&eOeH8V6qG(j{rG(j~tGcq$YGcz?gG(t2%G&D3fGd43dGcq+nG&eLkH90jmH8(XhG(t5uG($8&H9<8tG(s~oH8eCtG(|N*H8C|bG&40aH8eFgG(t5tH8wRjH8C|bG&40cG(j{nH8nIfGcq+bH9<8pG(t5&H8wOiG&M9tG&D6aG&wakH8C|cG&wafH8V9dG(<HvG($BwG&eIgG(t5uG(|K;H8nIhG&40dGcq+cG&nRiG&M9fG(<BpGcz<bG(<EuH8C|bG&MCeH8eFhG($8&G&40eG&MCgGcz<bG&eLhG&VFeG(t5wG(t2rG&wXuG&nRjG&M6aGcz?YG(j{rG($BuH8C?YG%__YG($8&H8(XiGcq$ZGcq+nG&eLkH90jlG&eOhH8V6eG&eOiH8?dkG(s~oH8eCtG(<EuH8M0cG(<HuH8V6hG(<EuG&40fH8C|aGcz<ZG&wavH90gjH8C|dGcz<qG(t5&H8wOiG&M9tH8V9cG&wakG($8uH8nLfH8V9dG(<HvG($BvG)6NuGcq+bG(s~pGcq+bH8(XiGcq(bG)6QsGcq+cH8nLdH8eCtG(|K;G($8tG)6TvH8eFfG($8tH8(XlH8C|dGcz<aG(t5&G&VFeG(t5wG($5oG(j{$G($BuG&eOeH8V6qG(j{$G(t2qG%+<dH8V3ZG(j~sH8(XiGc+|eH8V9qG&eLkGc+|fH8C|gH8eCvG(t2vGcq+cG(s~oH8eCtG(|HtH8M3eG)6TyH8eFgG(t2%H8wRjH8C|aGcq+cG&eLwG&eOgG&wakGcq+dG(t5&H8?aiGc+|aH8V3ZG)6QwH8M0cG)6NuG&40cG(<HvG($BvG)6NuGcq+bG(s~pGcq+bH8(XiGcq+cG&nRiG(t5uG&wUiH8V6fG(|K)H8C|bG&MCfH8eFcG($8sH90jkGc+|dGcq+nG(t5&G&MCiH8V9fG&D3uG(|KrG&VIhG&M6bG(t5qG(j{$G(t2qG%+<bH8V6uG(j^pG&D6eH8nLhH8V9qG&eLkGc+|fH8C|gH8eCvG(t2vGcq+cG(s~oH8eCtG)6Q*G&eOjH90jmH8V6dG(t2%H8wRjH8C|bG&40aG&eLhG&40cG%+<bH9<8pG(t5&H8wOiG&MCgH8eFbG(t5&G&nUjH8C|YH8V9eG(t2%G&D6hG&wXxGcq+eG(|K)G&VFeG%+<bGcq(bG)6TtG&MCgG&wUeG($BtG(|KvG&eOhG)6T!H9<8oG(s~qH8(UiG(<HtGcq(qG&wavG&VFeG(t5uH8M3bG)6TtG&wXjG&3|rG($BpG(j{rG(j~tGcq(pG(t5vG(t5tG&D6eG(<HrH8V9qG&eLkGc+|fH8(XiH8V6eG(|NsGcz?dG(s~oH8eCtG(|HtG&eOhG(t2)G($BuG(s~qH8wRjH8C|bG&40cG&wavG&40gH8C|eG(j~nG(t5&H8?aiGc+|aGcq+YH83<XG(j~tGc+|aH8V9eG(t2%G&D6gH8C|ZG(s~nG(|K;H8V6dH8(XiGcq(bG)6QsH90jlG(t5uG&D3dG($8&G&eOhG)6TvH8eFfG($8&G&3|cH8nLdGcz<aG(t5&G&MCiH8V9fG&D3uG(|KrG&eLhG&M9tG(t2&G(j{rG(j~tGcq$YGcz?gG(t2%G&D6eG(<HrH8V9qG&eLkGc+|fH8C|gH8eCrG(t5wH9<5sG(s~oH8eCtG(|HtG&eOhG(t2*G(t5sG(s~qH8wRjH90jkG&40bG&wagH8(UjGd49hG(t5uG(t5&H8wRjG&3_YGcz?bH83<mH8V9eG)6NrG&40cG(<HvG($BvG&wUgH8V9fG(s~pGcq+cG&eOhGcq(bG)6QsGcq+cH8nLdH8V3ZG(|KrG(j{rG)6TvH8eFhG(t2*H8wRiG&M6bGcq(qG(t5&G&MCiH8V9fG&D3uG(|KrG&eLhG&eOeG($BpG(j{rG(j~qG%+(WG&40bG(j~sG($BtGcq$ZGcq+nG&eLkGc+|fH8(XiH8V6eG(|NsH9<8tG(s~oH8eCtG(<EuG(j{rG(t2*G($BtG($8&G&40fH90jkG&40bG(t5sGcq+dGcq+dG(j~oG(t5&H8wOiG&M9tH8V9cG&wakG($8uH8nLdH8V9dG(<HvG($8uGd43eH8V9hG(t5&H8V6cG%+<bGcq+cG&nRiG&D6fG)6TxG&3|pG(<EuH8C|bG&MCfH8eFdG(t5pH8wRiG&M6cGcz<ZG(t5&G&MCiH8V9fG&D3uG(|KrG&eLhG&M9tG&D6aG(j{rG(j~qG&40dH8eCbG(t5tH8(XiGcq$ZGcq$WH83<mG($8tG&40dH8V6fG($8wGcz<cG(s~oH8eCtG(|HtG&eOhG(t2*G(t5&G(t5&H8wRjH8C|aGcz<YG&eLhG&40gH8V9fGcq+dG(t5&H8wOiG&M9tH8V3ZG&wavH8M3cG&eOdH8V9eG(t2%G&D6gH8C|ZG(s~nG(|K;H8V6dH8(XiGcq(bG)6QsH9<5rGcq+cG(t5qG(<EuG($8tG)6T!H9<8oG(s~qH8(UiG(<HyG($8qG&eLhG&VFeG(t5uH8M3bG)6TtG&wXjG&eOeH8V6qG(j{rG(j~qG%+<aH8V9dG(t2rH9<5rGcq$ZGcq+nG&eLkH90jmH8(XhG(t5vG(<BrH90gkG(s~oH8eCtG(<EuG(j{rG(t2)G&D6qG(t2*H8wRjH8C|aGcz<ZG(|NwG(j{sGd49hH8V6gG)6TtH8wOiG&MCgGcq(nG)6Q<G(j~tGcq(rG(t5rG(<HvG($BvG)6NuGcq+bG(|NsH8nIhH8(XiGcq(bG)6TtG&3|dG(t5tG&3|eG(|KvG&eOhG)6TvH8eFhG($8&H8wRiG(<E+G&D3eG(t5&G&VFeG(t5tGcz<sG(t5&G($BuG(<E+Gcq(YG(j{rG(j~qG&40dH8eCbG(t5&G($BuG&MCcH8V9qG&eLkGc+|fH8C|gH8eCrG(t5wGcz<cG(s~oH8eCtG(|HtH8M3eG)6TxG($5oG(t2*H8wRjH8C|bG&40bG&eLwG%+<eG&MChH8V6eG(t5&H8wRjG&3_ZG(t2+G(t5pG(t5uH90dhG&40cG(<HvG($8uH8(RgGcq+bG(t5tG(|KxG&eOhGcq(bG)6TtG&3|dG(t5tG&40bG(j{)H8C|bG&MCjH9<8oG(t2)H90gkH8nLhGcz<aG(t5&G&VFeG(t5tGcz<oG(j~%G($BuG(<E+H8V9cG(j{$G(t2qG%+<dH8V3ZG(j~%G($BtGc+|eH8V9qG&eLkH90jmG&40eH8V9iG(|KrGc+|eG(s~nH8V6qG(j~%H8M3fGcq+dH8V6hG(t5tH8wRjH90jkG&40aG&eLsH8nIgH8nLiG(t5uG(t5&H8?aiGc+|aH8V3ZG)6QwG($BvGcq(qG(t5rG(<HvG($BvG&eLwG&40eG(s~pGcq+bGd49fGcq(cG(|K;Gc+|eG&40fG&D3dG(<EuG($8tG)6TvH8eFhG($8tGc`0dGcq(pG($8sG(|NsG&nRhG(t5wG(t2uH83<XG(j{qGcq(pG(t2&G(j{rG(j~qG%+(WG%__cG(t2*G($BuG&MCcH8V9qG&eLkH90jmH8V9iH8V6fG($8&Gcz?dG(s~oH8eCtG(|N*G&nUiG(<HtH8V6pG(t5tH8wRjH90jkG&40bG(t5pG%_?aG(<HvGcz<rG)6TtH8wOiG&M9tG(t2pG&wavH8C|cH8C?YG&40cG(<HvG($8uH8(RgGcq+bG(t5tH8V6fG&40dGcq+cG&nRiG&D3eG&wUeH8eCiG($8&H8C|bG&MCeH8eFfG(t5pH8wRiG&MCbGcz<YG&wavG&VFeG(t5tGcz<rH83<XG(t5tG&M9tH8eCiG(j{rG(j~tGcq$aG&D3aG(t2vH90jnG%+(YH8V9qG&eLkH90jmH8(XhG($8)G($8&Gc`0eG(t2)G&40bG(|HtG($8rG%++qG($BtG(t5&H8wRjH8C|bG&40cG&wavG&40gH8C|cGcz<rG)6TtH8?aiGc+|aGcq+YG)6NuG&nUjH8C|YH8V9dG(<HvG($8vG%+<aGcq+bG&eLhH8nIgG&eOhGcq(bG)6TtG&MCgG(t5uG&D3sG(|K)G(j{rG)6TvH8eFfG($8&G&3|cH8nLdGcq(qG(|NsG&nRhG(t5wG(t2sG(t2%H8(XjG&M9tG%__dG(j{$G(t2qG%+<cH8V6uG(j~nH90jmG&wUgH8V9qG&eLkH90jkGd49fH8V6eG(j{$H9<5sG(s~oH8eCtG(|HtG&eOhG(t2)G($BpG(t5&H8wRjH8C|aGcz<YG&eLhG&40gH8V9fGcz<oG&wXuH8?aiGc+|aH8V6fG&eOtG&nUjG)6TtH8V9dG(j~sH8wRgG(t2*G&40cH83<mG&VFfGd49fGcq(bG)6TtG&MChG(t5pG(j~%G(|K;H8C|bG&MCjH9<8pG(t5pG(t5uG&wUhGcz<bG&wavG&MCiH8V9fG(t5sG&wXuG&wXjG(<E+G($BpG(j{rG($BuG&waiH8V6fG(<ExH90jmH90dhH8V9qG&eLwG%_?bGd49jH8V6fG(j{rGcz?dG(s~oH8eCtG($8&H8V9gGcq+dH8V6hG(t5tH8wRjH8C|bG&40cG&wavG&40gH8C|eH8V6eG(t5&H8wOiG&MCgG(j~sG&wakG&walGcq$XG&40cG(<HvG($BvG)6Q<G&40eG&eLwH90giG%+<bGcq(bG)6TtG&M9gG&eOeG&D3dG(|K)H8C|bG&MCeH8eFiG(t5pH8(XlH8C|cH8eCbG&wavG&nRhG(t5wG($5oG(|KrG&wXjG&M6eH8eCtG(j{rG(j~qG%+<aH8V9cG(j~%G&40gG%+(YH8V9qG&eLkH90jkGc+|cG(j~qG(|KrH90jlG(s~oH8eCtG($8&H8V9gGcq+dH8V6pG(t5pH8wRjH8C|bG&40aG&eLhG&40cG%+<dG(j~oG(t5&H8wOiG&M9tH8V3ZG&wavG&nRiH8C?ZG&40cG(<HvG($8vG%+<aGcq+cG(t5pG&VFiG&eOhGcq+cG&nRiG&D6fG)6TxG&40fG(<EuH8C|bG&MCeH8eFfG(t5pH8wRiG&MCbGcz<ZG&eLhG&VFeG(t5wG(t2vG&wavH8(UjG(t5tH8V6qG(j{$G(t2qG%+<aH8eFaG(s~qG($BtG(<BrH8V9qG&eLkH90jlG(t5tH8V6gG)6NuGcz?dG(s~oH8eCtG(<EuG(j{rG(t2*G($BtG(t2%H8wRjH8C|bG&40bG&eLwG%+<aG&eOhGcz<pG(t5&H8wOiG&M9tH8V9cG&wakG(j~tGc+?YG&40cG(<HvG($8tG(<BtG(t5tG&wakH8V6eG&eOhGcq+cG&nRiG&D6fG)6TyG&D6aG($8pH8C|bG&MCeH8eFhG($8tG($BsG&wXxG($8tG(|NsG&nRhG(t5uH8M3bG&nRiG(<EuG&M9tGcq(YG(j{rG(j~tGcq$YGcz?gG(t2%G&D3fGd43dGcq$WH83<mG(j{rG)6T!G($8+H83<WGcq(bG(s~oH8eCtG(<EuH8M0cG(<HuH8V6hG(<HrG&40fH8C|eH8eCfG($8pG&waiG&wakGcz<rG)6TtH8wRjG&3_ZG(t2+G(t5pH8V6dG)6NsG&40dG(t2%G&D6gH8C|eG&40dG&eLhH8V6gG&eOhGcq(bG)6TtG&M9gG&eOdGcz?cG(|K)H8C|bG&MCjH9<8pG(t5tG&40eG&M6bGcq(qG&wavG&VFeG(t5wG(t2rG&wXuG&nRjG&40eGcz?gG(j{rG(j~tGcq$YG&40bG(<HqH90jmH90dhH8V9qG&eLkGc+|fGcq+bH8V9eG(t2%Gc+_dG(t2)G&40bG(|HtG(t2tH8(UwG(t2vG(t2*H8wRjH8C|aGcz<YG(|NsG&D3cG&eOiGcz<rG)6TtH8?aiGc+|aH8V3ZG)6QwH8M0cH8C|YH8V9dG(<HvG($BvG&eLwG&40eG(|NsH8nIgG)6TwGcq(bG)6QsH90jlG(t5uG&D3dG(<EuH8C|bG&MCjH9<8oG(t5tG(t2rGc+_sG&D3aG(t5&G&VFeG(t5tGcq+bG&wXuG&nRiG&M9tG&D6aG(j{rG(j~qG%+<nG&D6hG(j~vH9<5rH8nFdH8V3ZH83<mG(j{sH8V9iG(j~pH83<XGcq(bG(t2)G&40bG(|HtH8V6eG(<HuH8V6hG(<E(G&40fH90jkG&40bG(|NsH8wRkH8V9fGcz<qG(t5&H8wOiG&M9tH8V9cG&wakG($8tG)6Q;G(t5sG(t2%G&D6gG)6NvH8V9gG&wagG&VFiG&eOhGcq(bG)6QsH9<5rGcq+YG&40fG(|K;G(j{rG)6T!H9<8oG(t5&H8(XlG%+(YGcz<YG(|NsG&VFeG(t5tGcz<oG(j~%G(|KvG(<E+Gcq+ZG(j{rG(j~qG%+<aH8V9cG(j~%G&D6fG&MCgH8V3ZH83<mG(j{sH8V9iG(j~qG(|KrH9<8tG(t2)G&40bG(|HtG($8rG%++rG(t5wG(t5tH8wRjH8C|bG&40bG(j{nH8nIfH8nLiH8V6gG)6TtH8wOiG&M9tG&D6aG&wavG(j~tH8nLeH8V9dG(<HvG($BwG&eIgG(t5uG(t5&G(j{pG&wajGcq(bG)6QsH90jlG(t5uG&D3dG(<EuG($8tG)6T!H9<8oG(t5pG(<EwG%++qG&D3dG&wavG&VFeG(t5tGcz<sG(t5&G($8uG&MCgGcz<fG(j{$G(t2qG%+<aH8eFaG(s~qG($BtG(<HvH8V3ZG&wUhH90glH8nLhG(j~qG(t2%H90jlG(s~oH8eCtG(<EuH8V6eG(<HvH8eFfG(<E(G&40fH8C|aGcz<YG(|K-Gcq(ZG&wakGcz<qG(t5&H8wOiG&MCgG(j~sG&wakG&walGcq$WG&40dG(t2%G&D6gH8C|eG&40dG(t5pG&D3gG)6TwGcq(bG)6TtG&MChG(t5pG($BxG(|K)H8C|bG&MCeH8eFhG(t2*H8wRiG&M6bGcq(qG&wavG&VFeG(t5wG($5oG(j{$G($BuG&eOeH8eFbG(j{$G(t2qG%+<nG&40gG(t2vH90jnG%+(YH8V9qG&eLkGc+|fH8(XiH8V6fG(t5&Gcq(bG(s~oH8eCtG(<EuG(j{rG(t2)G&D6qG(t5&H8wRjH8C|aGcz<YH83<mG%+<eH8V9fGcq+bG&wXuH8wRjG&3_ZG(t2+G(t5pH8C|cH8C?XG&40cG(<HvG($8uGd43eH8V9hG(t5&H8nIhG&40dGcq(bG)6QsGcq(aGc+|eH8V6uG(|KrG(j{rG)6TvH8eFhG($8&G&40eG&MCgGcq(qG&eLhG&VFeG(t5wG(t2rG&wXuG&nRjG&M6bG&3_YG(j{$G(t2qG%+<bH8V6uG(j^pG&D3fG&wagH8V9qG&eLkGc+|fH8C|gH8eCrG(t5tGcz?dG(s~oH8eCtG(<EuG(t2tH90jhG($B(G(<EuG&40fH8C|aGcz<YG(|K-Gcq(ZG&wakGcq+dG(t5&H8wOiG&M9tH8V6fG)6TxH8V6dH8C?YG&40cG(<HvG($BvH8C?bG&3_YG(|NvGcq+cG&eOhGcq(cG(|K;Gc`0eG&MCgH9<8&G(|K)G(j{rG)6TvH8eFhG($8&G&40eG&MCgGcq(qG(|NsG&VFeG(t5wG(t2rG&wXuG&nUjG)6TtG(t2&G(j{rG(j~qG%+<aH8V9cG(j~%G&D6fG&M6cH8V9qG&eLsGc+_cH90jwG($8-G(|KrH8C|dG(t2)G&40bG(|HtG($8rG%++rG(t5&G(t2%H8wRjH8C|aGcz<ZG(t5&G(|KuGc+|fG(t5sG&wXuH8wRjG&3_YGcz?bH83<mH8V9eG)6NuG&40dG(t2%G&D6gG&wUhH8V9gG&eLdH8V6gG&eOhGcq+cG&nRiG&D6fG)6TxG&40fG(<EuH8C|bG&MCeH8eFhG($8&H8wRiG(<BqGcq(qG&wavG&MCiH8V9fG&40hG(j{$H8(XjG&M9tG(s~nG(j{rG(j~qG%+(WG&40bG(<HvG(t5vG&wakH8V9qG&eLkH90jkGd49fH8V6eG(j{$H90gkG(s~oH8eCtG)6Q*G&eOjH90jlH8V9eG(<E-G&40fH90jkG&40bG(|NsH8wRkH8V9fGcq+bG&wXuH8wOiG&MCgH8V9cG(t5&G(t2tGcq$YG&40dG(t2%G&D6gH8C?ZGcq+cG(|NvH90jmG&40dGcq(bG)6TtG&40fG(t5pG(s~nG(j~sG($8tG)6TvH8eFfG(t5pH8wRiG&MCbGcz<ZG(t5&G&nRhG(t5wG(j~qG(<HrH8nIhG&MChG&40bG(j{rG(j~tGcq$YG&40bG(<HqH90jmH90dhH8V9qG&eLkGc+|fGcq+bH8V9eG(t5wGcz<cG(t2)G&40bG(|HtG&eOgG&40eH8eFfG(<HrG&40fH90jkG&40bG(|NsH8wRgG&40eGcz<rG)6TtH8wRjG&3_ZG(t2+G(t5pH8V6dG)6NsG&40cG(<HvG($8uGd43eH8V9gG&eLdH8nIgG)6TwGcq+cG&nRiG&MCgH8nLdH8V6bG(|KrG($8tG)6TvH8eFfG(t5&G&D3eG&M6cGcq(qG&wavG&nRhG(t5wG(t2tG(<HrG&wXjG(<E+G%__dG(j{rG(j~tGcq(qG($8)G(<EuG&D6eG(s~qGcq+nG&eLkGc+|fH8C|gH8eCrG(t5wGcz<cG(s~oH8eCtG)6Q*G&eOjH90jkH8eFgG(s~qH8wRjH8C|aGcz<YG(|NsG&D3cG&eOiGcq+bG&wXuH8wOiG&M9tG(t2pG&wavH8C|cG&wahH8V9dG(<HvG($BvG&wUgH8V9fG(s~pGcq+dG&40dGcq(bG)6QsGcq+cH8nLdH8V3ZG(<EuG&eOhG)6T!H9<8oG(t5&H8(XlG%+(YGcz<ZG(t5&G&VFeG(t5wG(t2vG)6QsH8(XkG&M6aGcq(nG(j{rG($BuG&waiH8V6fG(<E-H8(UjH8(RgGcq+nG&eLkH90jmG&40eH8V9eG(|NsGcz<cG(s~nH8V6qG(j^pH8V9eG(s~qG&3|gG(t5pH8wRjH8C|bG&40cG(j{nH8nIgG%+<dG(j~pG)6TtH8wRjG&3_ZG(t2+G(t5pH8V6dG)6NuG&40cG(<HvG($8vG%+(YGcq+cG&eLhH8V6fH8(XiGcq(bG)6TtG&M9gG&eOdGcz?cG(j{)G($8tG)6TvH8eFhG(t2*H8wRiG&M6bH8eCcG(t5&G&VFeG(t5tGcz<rH83<XG(t5sGcq$XG($8wG(j{rG(j~qG&40dH8eCbG(t5&G(t5uH90jlH8V3ZH83<mG($8tG&40dH8V6gG(|KqH9<5sG(s~oH8eCtG(|HtG&eOhG(t2*G(t5sG(s~qH8wRjH90jkG&40aG&eLsH8nIgH8nLiG($8)G(t5&H8wOiG&MCcG($BtG&eOiH8C|cG(<BrG&40cG(j~sH8wRgG&wXxH8V9fG&wakG(|KxG)6TwGcq(bG)6QsGcq+cH8nLdGcz<fG(|K;H8C|bG&MCeH8eFfG(t5&H8(XlG&wanG($8qG&wavG&VFeG(t5wG(t2rG&wXuG&nUjG)6TtH8V6qG(j{rG($BuG&waiH8eFhG(j^pG&D6eGc+?aH8V3ZH83<mG(j{qGc+|pG($8-G(|KrG(|KvG(s~oH8eCtG(|HtG&eOhG(t2*G(t5&G(t5tH8wRjH8C|aGcz<ZG(t5&G(|KvG&40eGcz<qG(t5&H8wRjG&3_ZG(t2+G(t5pH8V6dG)6TtH8V9dG(<HvG($BvH8C?bG&3_YG(t5pG&nRhH8(XiGcq(bG)6TtG&M9gG&eOdGcz?cG(|K;G(j{rG)6T!H9<8pG(t5pG(t5uG&wUhGcz<bG&wavG&VFeG(t5wG(t2vG&wavH8(XkG&M6aGcz?YG(j{rG(j~qG%+<nG&D6hG(j{(H9<5rH8nFdH8V3ZH83<mG($8sGc+|dH8M3cG&wXmH90gkG(t2)G&40bG(|N*H8M0bG&40eH8eFfG($8&G&40fH8C|eH8V6tG&eLdG($8vG&MCgH8eCrG&wXuH8?aiGc+|aG(j~oG&eOtH8V9eH8C|cH8V9dG(<HvG($BvH8C?bG&3_YG(t5pG&nRhGd49fGcq+cG&nRiG&D6fG)6TxG&40fG(|KrG($8tG)6TvH8eFhG($8tG($BsG&wXxG($8tG&wavG&VFeG(t5wG(t2rG(|KrG(t2rGcq(pG&D6aG(j{rG($BuG&waiH8eFhG(j^pG&D3fH8(RgGcq+nG&eLkGc+|fH8(XiH8V6eG(|NsGcz?dG(s~oH8eCtG($8&G&eOhG(t2)G(t2vG(t2*H8wRjH8C|bG&40cG(j{nH8nIfH8nLiH8V6eG(t5&H8?aiGc+|aH8V9cG(t5tG&walGcq$YG&40cG(<HvG($BvG&eLwG&40eG&eLdH8nIfGd49fGcq+cG&nRiG&M9fG(<BpGcz<bG(<EuG&eOhG)6TvH8eFhG($8&G&40eG&MCdH8eCdG(t5&G&nRhG(t5wG(t2rG(j~%G($8uG&MChG&3|aG(j{$G(t2qG%+<cH8V9ZG(j^pG&D3fH90dhH8V9qG&eLkH90jkGd49fH8V6eG(j{$H90gkG(s~oH8eCtG(|HtH8M3eG)6TxG($B(G(j~%G(t5uH90jkG&40bH83<mG($8sH8(XjGcz<rG)6TtH8wOiG&eOeG(j~sG)6Q<G(t5uH8nLgH8V9dG(<HvG($8uH90gzH8V3ZG(|K;H8V6eG)6TwGcq(bG)6TtG&MCgG(t5tG&3|eG(j{)H8C|bG&MCjH9<8oG($8&G&3|cG&3|sG($8rG&wavG&VFeG(t5tGcz<pG&eOiG(j{qGcq$XG(t5qG(j{rG($BuG&waiH8V6fG(<ExH9<5rH8nFdH8V9qG&eLwG%_?bGd49jH8V6eG(t5sGcq(bG(s~oH8eCtG(|HtH8M3eG)6TyH8eFgG(t5tH8wRjH8C|eH8V6tG&eLdG($8vG(<HwG(j~pG)6TtH8wOiG&M9tH8V9cG&wakG($8uGc+?ZG&40cG(<HvG($BvG&eLwG&40eG&eLdH8nIhG&40dGcq(bG)6TtG&3|dG(t5tG&40bG(|K;H8C|bG&MCeH8eFeG(t2)H9<8uH90dgGcq+eG(|NsG&MCiH8V9fG&D3uG(|KrG&eLgGcq$WH9<8tG(j{rG(j~tGcq(pG(t5vG(t5pG($BtG(<HrH8V3ZH83<mG(j{rG)6T!G($8*G)6QsH9<8tG(s~oH8eCtG(<EuH8M0cG(<HuG($B(G(<EuG&40fH8C|eH8V6tG&eLdG($8vG(<HvGcq+eG)6TtH8wOiG&eOeG(j~sG)6Q<G(t5uH8nLcH8V9dG(<HvG($8uH90gzH8V3ZG(|K;H8V6eG&eOhGcq(bG)6TtG&MCgG&wUeG($BtG(|KvH8C|bG&MCfH8eFcG($8sH90jkGc+?ZGcz<cG(t5&G&VFeG(t5wG(t2rG(|KrG(t5uG&M6aH9<8tG(j{rG(j~qG%+<nG&D6hG(j~vH9<5rGc+?aH8V9qG&eLwG%_?bGd49jH8V6fG(j{rGc+|eG(t2)G&40bG(|HtH8M0cG(<HsH8eFfG(<E(G&40fH8C|bG&40cG&wavG&40gH8C|eG(j~nG(t5&H8?aiGc+|aG($BtG&wUhH8C|cH8C|bH8V9eG(t2%G&D6gH8C|ZG(s~nG(|K;H8V6dGd49fGcq+cG&nRiG&M9fG(<BpGcq+ZG(<EuG(j{rG)6TvH8eFhG($8&H8wRiG(t2)G($8tG(|NsG&VFeG(t5tGcz<sG(t5&G($8uG&MCgGcz<fG(j{rG(j~qG%+(WG&40bG(j~sG($BuG&3_bGcq+nG&eLkGc+|fH8(XiH8V6eG(|HtGcz?dG(s~oH8eCtG(|N*G&nUiG(<HtH8V6pG(t2*H8wRjH8C|aGcz<ZG(t5pG($8tG)6TyG(t5sG&wXuH8wOiG&MCgH8V9cG(t5&G(t2tGcq(qG(t5sG(t2%G&D6gH8C?ZGcq+cG(|NvH90jkH8(XiGcq(bG)6TtG&M9gG&eOeG&D3dG(|K)H8C|bG&MCeH8eFhG(t2*H8wRiG(<HsGcq(qG(t5&G&VFeG(t5tGcz<oG(j~%G(|KvG(<E+H8eFjG(j{$G(t2qG%+<dH8V3ZG(j~sH8(UkG%+(YH8V9qG&eLkGc+|eG&40dH8V9gG(t5wH90gkG(t2)G&40bG(|N*H8M0bG&40fH8V9iG(<E-G&40fH90jkG&40aG&eLsH8nIgG&wakGcz<oG&wXuH8wRjG&3_ZG(t2+G(t5pH8V6dH8C|dH8V9dG(<HvG($8vG%+(YGcq+dG&wakH8V6cG%+<bGcq(cG(|NrGcq+dG&wagG&D3hG(<EuG(j{rG)6T!H9<8oG(t2)H90gkH8nFcGcz<aG&wavG&nRhG(t5wG(t2tG(<HrG&nUkG&MCgGcq+ZG(j{rG(j~qG%+<bH8M3dG(t2rH9<5rGcq$ZGcq$WG&wUhH90gjH90jjG(j~qG(|KrH9<8tG(s~oH8eCtG(|HtH8V9gGcq+dH8eFfG(j^pG(t5uH90jkG&40bG&eLhG(|KuG(t5uH8V6eG(t5&H8wOiG&M9tH8V3ZG&wavH8C|cG&wafH8V9dG(<HvG($8vG%+(YGcq+dG&wagG&VFhGd49fGcq(bG)6TtG&MCgG(t5uG&D3sG(j~oG($8tG)6TvH8eFhG(t2*H8wRiG(<HsGcq(qG&wavG&VFeG(t5wG(t2vG&wavG(<HwG&M6aGcq(nG(j{rG(j~qG%+(WG&40bG(j~sG($BuG&MCgH8V3ZH83<mG(j{rG&MCeG(j~qG(|KrH90gkG(s~oH8eCtG($8&G&eOhG(t2)G(t2vG(t2*H8wRjH8C|aGcz<ZG(t5&G(|KuGc+|fH8V6dG&wXuH8wOiG&MCcG($BtG&eOtH8V9eG)6NvG&40cG(<HvG($8vG%+<aGcq+cG(t5pG&VFhGd49fGcq(bG)6TtG&M9gG&eOdGcz?cG(|K)G(j{rG)6TvH8eFiG(t5pH8(XlH8C|cGcq(qG&wavG&nRhG(t5wG(t2rG(j~%G(t5sGcq$XG($BxG(j{rG(j~tGcq$YGcz?gG(t2%G&D3fGd43dGcq+nG&eLkGc+|fH8C|gH8eCrG(t5wH90jlG(t2)G&40bG(|N*H8V9gH90jgH8V6gG(<EuG&40fH8C|aGcz<ZG(t5pG($8tG)6TyG(t5vG)6TtH8wOiG&eOeG(j~sG)6Q<G(t5uH8nLcH8V9eG(t2%G&D6gH8C|eG&40dG&eLhH8V6eG)6TwGcq(bG)6TtG&MCgG(t5uG&D3sG(j{)G($8tG)6TvH8eFfG(t5tH8wRiG&MCjG($8qG(|NsG&nRhG(t5wG(t2sG(t2%H8(XjG&M9tG(s~nG(j{rG(j~tGcq$YG&40bG(<HqH90jnG%+<YH8V9qG&eLkGc+|fGcq+bH8V9eG(t5tGc+|eG(s~nH8V6qG(j^pH8V9eG(s~pGcz?oG(t5pH8wRjH8C|bG&40fG&wavH90gkG(<HwH8V6dG&wXuH8wRjG&3_ZG(t2+G(t5pH8C|cG)6NsG&40cG(<HvG($BwG&eIgG(t5uG(t5&H8nIfGd49fGcq(cG(|K;Gc`0eG&MChG&3|pG($8&G&eOhG)6T!H9<8oG($8tH8(XlG&wXyG&D3aG&eLhG&nRhG(t5wG(t2tG(<HrG&nRhGcq+dG&3|aG(j{rG(j~qG%+(WG%__cG(t5pG&D6eGc+?aH8V9qG&eLkGc+|fH8C|gH8eCvG(t2vGcq+cG(s~oH8eCtG)6Q*G&eOjH90jmH8V6dG(t2%H8wRjH90jkG&40fG(j{nH8M3cG%+<dG($8(G&wXuH8wOiG&M9tG&D6aG&wakH8C|cG&wafH8V9eG(t2%G&D6gG&wUhH8V9gG&eLdH8V6cG&wajGcq(bG)6QsGcq+cH8nLdH8V3ZG(<EuG&eOhG)6TwH8eFcG($8&G($BwG%++qG&40pG(t5&G&VFeG(t5wG(t2rG(|KrG(t5uG&M6aH9<8tG(j{rG(j~tGcq$aG&D3aG(t2vH90jnG%+<cH8V9qG&eLkGc+|fH8(XiH8V6fG($8tGcz?dG(s~nH8V6qG(j^pG&nRjH90jgH8V6pG(t2sH8wRjH8C|aGcz<ZG(t5&G(|KvG&40fG(t5uG(t5&H8wOiG&M9tH8V6fG)6TxH8V6dH8C?XG&40cG(j~sH8wRgG(t2*G&40cG(|K;G(|KwGd49fGcq(bG)6QsH9<5sG(t5tG&3|pG($8&G($8tG)6TvH8eFhG($8tG($BsG(s~rH8eCbG&eLhG&VFeG(t5wG(t2rG&wXuG&nRjG&M6aGcq$WG(j{rG(j~tH90jjH8e9aG(j^pG&D3gG%+<YH8V3ZH83<mG(j{rG)6T!G($8)G&eOiH8nIgG(s~oH8eCtG(|HtH8M3eG)6TyH8eFgG(t5pH8wRjH90jkG&40aG&eLsH8nIgG)6TyG(t5vG)6TtH8wRjG&3|rG%__dG&wakG(t2tGcq$ZG&40cG(j~sH8wRgG(t2*G&40cH83<mG&MCeG&40dGcq(bG)6QsGcq(bG(<BpH9<8pG(|KrG&eOhG)6TwH8eFcG(t2*Gc`0dGc+_sG&D3bG(t5&G&nRhG(t5wG(t2sG(t2%H8(XjG&M9tH8V9cG(j{$G(t2qG%+<nG&40gG(t2%G&D6fG&M6cH8V9qG&eLkGc+|fH8C|gH8eCrG(t2%H9<8tG(t2)G&40bG)6Q*G&nUiG(t2*G(t5&G(t5pH8wRjH8C|bG&40cG&wajGcq(dG&MChG($8(G&wXuH8?aiGc+|aH8eFbG(t5&G(t2tH8nLcH8V9dG(<HvG($BvH8C_rH8V3ZG(|NvGcq+bG)6TwGcq(bG)6TtG&MChG(t5pG($BxG(|K;G&eOhG)6T!H9<8pG(t5pG(t5uG&wUhGcz<ZG(|NsG&VFeG(t5uH8M3bG)6TtG(j{sG&40eGcz<fG(j{rG(j~qG%+(WG&40bG(j~sG($BtGc+|aH8V3ZH83<mG(j{sH8(XhG(t5tG)6QsGc+_dG(t2)G&40bG(|HtG(j{qG)6TyH8V6hG(t2*H8wRjH8C|aGcz<YG(|NsG&D3cG&eOiGcq+bG&wXuH8wOiG&MCgGcq+YH83<bG(j{sH8nLeH8V9dG(<HvG($8uH8(RgGcq+bG(t5tH8V6fH8(XiGcq+cG&nRiG&D3eG&wUeH8eCiG(<EuG($8tG)6TvH8eFhG($8tG($BsG&wXxG($8sG(|NsG&VFeG(t5wG(t2rG&wXuG&nUjG(t2)G($BpG(j{$G(t2qG%+(WG&D3rG(t5tG&D6eG(<HvH8V9qG&eLkH90jlG(t5tH8V9fG&eOiGcq+cG(t2)G&40bG(|HtG($8rG%++qG($BuG(t2%H8wRjH8C|aGcz<ZG(|NwG(j{sGd49hG(t5sG&wXuH8wOiG&M9tH8V9cG&wakG(j~tH8nLcH8V9dG(j~sH8wRgG(t2*G&40cG&eLdH8nIfH8(XiGcq(bG)6TtG&MCgG(t5tG&3|eG(|K)G&eOhG)6TvH8eFhG($8&G&40eG&MCdH8eCcG&wavG&VFeG(t5tGcz<pG(t5&G&nUkG&MCgGcq+ZG(j{rG(j~tGcq(qG($8)G(s~qG($BuG(<HvH8V3ZH83<mG(j{rG)6T!G($8+H83<XGcq(bG(s~oH8eCtG(<EuG&eOgG&3_ZG&40hG(<HrG&40fH8C|bG&40cG(j{nH8nIfGcq+dH8V6dG&wXuH8wRjG&3|rG%__dG&wakH8M0cG)6Q;G(t5rG(j~sH8wRgG(t2*G&40cG&eLdH8V6dH8(XiGcq(bG)6TtG(t5tG)6NsG&40fG(|K;G(j{rG)6TvH8eFfG(t5pH8wRiG&MCbGcz<ZG(t5&G&VFeG(t5wG(t2rG&wXuG&nUjG)6TtG(t2&G(j{rG(j~qG%+<aH8V9cG(j~%G&40gG&wUgH8V9qG&eLkGc+|fGcq+bH8V9iG(j~rH9<8tG(s~oH8eCtG(|HtH8M3eG)6TxG($5oG(t2*H8wRjH8C|bG&40fG&wavH90gkG(<HwH8V6gG)6TtH8?aiGc+|aH8eFbG(t5&G($BvGcq(pG(t5rG(<HvG($BvH8C_rH8V3ZG(|NvGcq+bG)6TwGcq+cG&nRiG&3|eG&40aH8V3ZG(|KrG($8tG)6TvH8eFhG($8&G&40eG&MCdH8eCdG(t5&G&VFeG(t5uH8M3bG)6TtG&wXjG&eOeG(s~nG(j{rG(j~tGcq(qG($8)G(<EuG&D6fG&M6cH8V9qG&eLkH90jmH8V9iH8V6eG)6QsGcz<cG(s~oH8eCtG(|HtG&eOhG(t2*G(t5&G($8&G&40fH8C|bG&40cG&wavG&D3cG(t5uH8V6eG(t5&H8wOiG&M9tG(t2pG&wavH8C|cH8C?YG&40cG(<HvG($8uGd43eH8V9gG&eLdH8V6gG)6TwGcq(bG)6TtG&40fG(t5pG(s~nG(j~oG&eOhG)6TvH8eFhG(t2*H8wRiG(<HsGcz<bG&eLhG&VFeG(t5wG(t2vG&wavH8(UhGcq(pG&D6aG(j{rG(j~qG%+<nG&D6hG(j{(H9<5rGc+|eH8V9qG&eLsGc+_cH90jwG($8-G(|KrH90gkG(t2)G&40bG(|HtG(t2tH8(UwG&D6qG(t5tH8wRjH8C|bG&40cG&wavG&D3cG(t5sH9<8qG)6TtH8wOiG&M9tG&D6aG&wavG(j~tH8nLcH8V9dG(j~sH8wRgG&3_cG(t5tG&wagG&VFfG)6TwGcq+cG&nRiG&D6fG)6TxG&40fG(|K)G($8tG)6TvH8eFfG(s~qH8(UiG(<E-G&D3cG(|NsG&MCiH8V9fG&40hG(j{$H8(XjG&M9tG($BpG(j{$G(t2qG%+<aH8eFaG(s~qG($BtG(<HvH8V3ZH83<mG(j{rG)6T!G($8*G)6QsH9<8tG(s~oH8eCtG)6Q*G&eOjH90jlH8V9qG(t2*H8wRjH8C|eH8V6tG&eLdG($8vH8V9fGcq+bG&wXuH8wOiG&M9tH8V6tH83<mG&nRiH8C|eH8V9eG(t2%G&D6gH8C?ZGcq+cG(t5pG&nRiG&eOhGcq(bG)6TtG&MChG(t5pG(j~%G(j~oH8C|bG&MCeH8eFfG($8tH8(XlH8C|dGcz<aG&wavG&VFeG(t5uH8e9aG(|KrG(t2sG&eOeH8V6qG(j{$G(t2qG%+<dH8V3ZG(j~sH8(XiGc+|aH8V9qG&eLkGc+|fH8(XiH8V6fG($8tGcz?dG(t2)G&40bG(|HtG&eOgG&40eH8eFfG(<E-G&40fH90jkG&40bG(t5sGcq(ZG&wakGcq+eG)6TtH8wOiG&MCgG(j~sG&wakG&walGcq$WG&40cG(<HvG($8vG%+(YGcq+dG&wakH8V6fGd49fGcq(bG)6QsH90jlG(t5uG&D3dG($8&G&eOhG)6TvH8eFeG(t2)H9<8vG%++qG&D3aG&eLhG&VFeG(t5uH8M3bG)6TtG&nUjG(<BtH8eCtG(j{rG(j~tGcq(qG($8)G(s~qG($BuG&MCgH8V3ZH83<mG(j{sH8(XhG(t2rG(|NsGcz?dG(s~oH8eCtG(<EuG(t2tH90jhG($B(G($8&G&40fH90jkG&40bG&eLhG(|KuH8C|dGcq+eG)6TtH8wOiG&M9tH8V9cG&wakG($8tG)6Q;G(t5sG(t2%G&D6gH8C|eG&40dG&eLhH8V6eG)6TwGcq+cG&nRiG&D3eG&wajH9<8&G($8pH8C|bG&MCeH8eFfG(t5pH8wRiG&MCbGcz<YG(|NsG&VFeG(t5uH8e9aG(|KrG(t2sG&eOeH8eFbG(j{rG(j~qG%+<aH8V9cG(j~%G&D6fG&M6cH8V9qG&eLsGc+_cH90jwG($8-G(|KrH9<5sG(s~oH8eCtG($8&G&eOhG(t2)G(t2vG(t5&H8wRjH8C|bG&40cG(j{nH8nIgG%+<dH8V6gG)6TtH8?aiGc+|eG(j~oG(j{nH8M3dH8C|bH8V9dG(<HvG($BwG&eIgG(t5uG(|K;H8nIhH8(XiGcq(cG(|K;Gc`0eG&MCgH9<8&G($8&H8C|bG&MCeH8eFiG(t5pH8(XlH8C|ZGcz<cG(|NsG&VFeG(t5wG(t2rG&wXuG&nRjG&M6bG&3|pG(j{rG(j~tGcq(pG(t5vG(t2*H8(UjGd43dGcq$WH83<mG(j{sG&40eH8V9fG&eOiGcz?dG(s~oH8eCtG(|N*G&nUiG(<HsH8V9qG(t5&H8wRjH90jkG&40bG(t5sGcq(ZG&wakGcq+eG)6TtH8wOiG&MCgH8V9cG(t5&G(t2tGc+|aH8V9eG(t2%G&D6hG&eLwG&40dG&eLdH8M3cG(t5sGcq(bG)6TtG&MCgG&wUeG($BtG(|K)G($8tG)6T!H9<8oG(t2)H90gkH8nLhGcz<aG&wavG&VFeG(t5uH8e9aG(|KrG(t2sG&eOeH8V6qG(j{rG($BuG&waiH8V6fG(<ExH9<5rGc+|eH8V9qG&eLkH90jmH8(XhG($8)G($8tGc+|eG(s~oH8eCtG(<EuG($8rG&40bH8eFfG(t5&H8wRjH8C|bG&40cG&wavG&40gH8C|eH8V6dG&wXuH8wOiG&M9tH8V9cG&wakG(j~tGc+?ZG&40cG(<HvG($8uGd43eH8V9gG&eLdH8nIgG)6TwGcq(bG)6QsGcq(aGc+|eH8V3ZG(|KrH8C|bG&MCeH8eFhG($8&G&40eG&MCdH8eCdG&wavG&VFeG(t5uH8M3bG)6TtG(j{sG&M6aGcq(nG(j{rG(j~qG%+<nG&D6hG(j~vH9<5rGc+?aH8V9qG&eLkGc+|fH8C|gH8eCrG(t5tGcz?dG(s~nH8V6qG(j^pH8V9eG(s~pG&3|fG(<E-G&40fH8C|aGcz<YG(|NsG&D3cG&eOiGcq+eG)6TtH8wOiG&M9tG(t2pG&wavH8C|cG&wahH8V9eG(t2%G&D6gG&wUhH8V9gG(|NsH8V6cG%+<bGcq(bG)6QsG(t2tG&eIgH8eCiG($8pG($8tG)6T!H9<8oG(t5&H8(XlG%+<aGcq+nG(t5&G&VFeG(t5tGcz<oG(j~%G($BuG(<E+H8eCiG(j{$G(t2qG&40dH8V6cG(<E(H8(XiH8nLdH8V3ZH83<mG(j{sH8V9iG(j~qG(|KrGcz<cG(s~oH8eCtG(|HtH8M3eG)6TyH8eFgG(t2%H8wRjH8C|bG&40cG&wavG&D3cG(t5sGcz<qG(t5&H8?aiGc+|aGcq(nG)6Q*H8M0cG)6Q<G(t5rG(<HvG($BvH8C_rH8V3ZG(|NvH90giG(t5sGcq+cG&nRiG&M9fG(<BpGcq+ZG(|K;G(j{rG)6TvH8eFhG(t2*H8wRiG&M6bH8eCcG(t5&G&nRhG(t5wG(t2tG(<HrG&wXjG(<E+H8V9cG(j{rG($BuG&waiH8V6fG(<E-H8(UkG%+<YH8V3ZH83<mG(j{rG)6T!G($8*G)6QsGcz<cG(s~oH8eCtG(|HtG&eOhG(t2)G($BpG(t5&H8wRjH90jkG&40cG&wUhG(j{rG&walG(t5vG)6TtH8?aiGc+|aH8V6eH83<mH8V9eG)6NsG&40cG(<HvG($8uH8(RgGcq+bG(t5tH8V6dGd49fGcq(bG)6QsGcq+cH8nLdGcz<fG(|K;H8C|bG&MCeH8eFfG(t5pH8wRiG&MCbGcz<ZG(|NsG&nRhG(t5wG(t2sG(t2%H8(XjG&M9tG%__dG(j{rG($BuG&waiH8eFhG(j^pG&D6eGc+?aH8V9qG&eLwG%_?bGd49jH8V6fG(j{rGcz?dG(t2)G&40bG(|HtG&eOgG&40dG($B(G(<E(G&40fH8C|aGcz<YH83<mG%+<aG&40fH8V6eG(t5&H8wOiG&MCgH8V6qG&wakG($BvGcq$WG&40cG(<HvG($8uGd43eH8V9hG(t5&H8nIhG&40dGcq(bG)6TtG&M9gG&eOdGcz?cG(|K;G(j{rG)6T!H9<8oG($8tH8(XlG&wXyG&D3bG&wavG&nRhG(t5wG(t2tG(<HrG&wXjG(<E+G(s~nG(j{rG(j~qG%+(WG&40bG(<HvG(t5vG%+<cH8V9qG&eLkH90jlG&eOhH8V6fG)6QsGcq+cG(t2)G&40bG(|HtG(j{qG(<H)Gcz+XG(t2%H8wRjH8C|bG&40cG&wavG&40gH8C|eH8V6fG(t5&H8wOiG&MCgGcq+YH83<bG(j{sGc+|bH8V9eG(t2%G&D6gH8C|eG&40dG(|NvH90jmH8(XiGcq(bG)6QsGcq(bG(<BqG&3|aG(|KrG(j{rG)6TwH8eFcG($8sH90jkGc+_rG&D3aG(|NsG&VFeG(t5tGcz<sG(t5&G($8uG&MCgGcz?gG(j{rG(j~tGcq$ZG&40bG(j~sH8(UkG%+(YH8V9qG&eLwG%_?bGd49jH8V6fG(j{qH90jlG(s~oH8eCtG(<EuG(j{rG(t2*G($BtG(t2%H8wRjH8C|bG&40aG&eLhG&40cG%+<dG(j~nG(t5&H8?aiGc+|aH8V6eH83<mH8V9eG)6NsG&40cG(<HvG($8vG%+<aGcq+cG(t5pG&VFgG)6TwGcq+cG&nRiG&M9fG(<BpGcz<bG(|KrG(j{rG)6TvH8eFhG($8&G&40eG&MCgGcq(qG&wavG&VFeG(t5tGcq+bG&wXuG&nRiG&M9tG(s~nG(j{rG(j~qG%+<bH8M3dG(t2*G($BuG&M6cH8V3ZH83<mG(j{sG&40eH8V9fG&eOiH90jlG(s~oH8eCtG(<EuH8M0cG(<HuH8V6hG(<EuG&40fH8C|aGcz<ZG&wavH90gjH8C|dGcz<qG(t5&H8wOiG&M9tH8V9cG&wakG($8uH8nLcH8V9dG(j~sH8wRgG(t2*G&40cH83<mG&VFhG&40dGcq(bG)6TtG(t5tG)6NsG&3|pG(|K)G&eOhG)6T!H9<8oG(t2)H90gkH8nFcGcz<aG(t5&G&VFeG(t5tGcz<pG&eOiG&wXjG)6TtH8V6qG(j{rG(j~qG%+(WG&40YG(j{(H9<5rH8nFdH8V9qG&eLkGc+|fH8C|gH8eCvG(j~%H9<5sG(s~oH8eCtG(|HtG&eOhG(t2)G($BuG(t2%H8wRjH8C|aGcz<YG(|NsG&D3cG&eOiGcz<pG(t5&H8?aiGc+|aH8V3ZG)6QwG($BvGcq$YG&40cG(<HvG($BvG&eLwG&40eG(|NsH8nIgG&eOhGcq+cG&nRiG(t5tG&3_ZH8V6fG(|KvH8C|bG&MCeH8eFeG(t2)H9<8uH90dgGcq+eG(|NsG&nRhG(t5wG(t2tG(<HrG&wXjG)6TtG(s~nG(j{rG(j~tGcq(pG(t5vG(t5pG($BtG(s~qGcq$WH83<mG($8sGc+|dH8M3cG&wXuGc`0eG(s~oH8eCtG(<EuH8M0cG(<HuG($B(G(<EuG&40fH90jkG&40bG(|NsH8wRkH8V9fGcz<qG(t5&H8wOiG&MCgH8eFbG(t5&G&nUjH8C|YH8V9eG(t2%G&D6hG&wXxGcq+eG(|K)G&VFeG%+<bGcq(bG)6TtG&MCgG&wUeG($BtG(|KvG&eOhG)6T!H9<8oG(s~qH8(UiG(<HtGcq(qG&wavG&VFeG(t5wG(t2rG(|KrG(t2sG&eOeH8V6qG(j{rG(j~tGcq(pG%__ZG(t5&H8(XiG(<HvH8V9qG&eLkGc+|eG&40dH8V9hG(<BsGcz?dG(t2)G&40bG(|HtG(t2tH8(UwG&D6qG(s~qH8wRjH8C|bG&40bG(j{nH8nIfH8nLiG(j~pG)6TtH8wOiG&MCgG(j~sG&wakG&walGcq(pG(t5sG(t2%G&D6gH8C|ZG(s~nG(|K;H8V6eG)6TwGcq+cG&nRiG&D6fG)6TxG&3|pG(|K;G(j{rG)6TvH8eFfG(s~qH8(UiG(<E-G&D3aG&eLhG&VFeG(t5uH8M3bG)6TtG&wXjG&eOeH8eFbG(j{rG(j~qG%+<bH8M3dG(t2*G($BuG&M6cH8V3ZG&wUhH90glH8nLhG(j~qG(t2%H9<5sG(s~oH8eCtG(|HtG&eOhG(t2*G(t5sG(s~qH8wRjH90jkG&40cG&wUhG(j{rG&40fG(t5uG(t5&H8wOiG&MCgH8V9cG(t5tH8M0cG&wafH8V9dG(<HvG($BvG)6NuGcq+bG(s~pGcq+bG&eOhGcq(bG)6QsGcq+cH8nLdGcz<fG(|K;H8C|bG&MCjH9<8oG(t5tG(t2rGc+_sG&D3aG(|NsG&VFeG(t5tGcz<oG(j~%G(|KvG(<E+H8eFjG(j{$G(t2qG%+<dH8V3ZG(j~%G($8vG%+<YH8V9qG&eLkGc+|eG&40dH8V9hG(<BsGc+|eG(s~oH8eCtG(|N*H8C|bG&40aH8eFgG(s~qH8wRjH8C|aGcz<ZG(|NwG(j{rG)6TxGcz<oG&wXuH8?aiGc+|aH8V3ZG)6QwH8M0cG)6NvG&40cG(<HvG($8vG%+(YGcq+dG&wakH8V6eG&eOhGcq(bG)6QsGcq(bG(<BqG&3|aG(|KrG&eOhG)6T!H9<8oG(t5tG(t2rGc+_sG&D3aG(|NsG&MCiH8V9fG&D3uG(|KrG&eLhG&M9tG&D6aG(j{rG(j~qG&40dH8eCbG(t5tH8(XiGcq$ZGcq$WG&wUhH90glH8nLhG(j~qG(t2%H90jlG(t2)G&40bG(|HtH8V6eG(<HuH8V6hG(t5tH8wRjH8C|eH8V6tG&eLkGc+_bG&wakGcz<rG)6TtH8wOiG&M9tH8V3ZG&wavH8M3gH8nLsG&40dG(t2%G&D6gH8C|ZG(s~nG(|K;H8V6dH8(XiGcq(bG)6QsH9<5rGcq+cG(t5qG(<EuG($8tG)6T!H9<8oG(s~qH8(UiG(<HyG($8qG(t5&G&VFeG(t5wG(t2rG&wXuG&nUjG(t2)G($BpG(j{$G(t2qG%+<aH8eFaG(s~qG($BtH8nLdH8V9qG&eLkH90jmH8(XhG(t5uG($8&Gcq+cG(s~nH8V6qG(j^pG&nRjH90jgH8V6gG(<E-G&40fH8C|aGcz<ZG(t5&G(|KuGc+|fG(t5tG(t5&H8wOiG&MCgH8V3ZG)6Q*G($BvGcq$aG&40cG(<HvG($BvG)6NuGcq+bG(|NsH8nIgG)6TwGcq+cG&nRiG&M9fG(<HvG&40fG($8&G($8tG)6TvH8eFhG($8&H8wRiG(<E+G&D3eG(t5&G&VFeG(t5wG(t2vG&wavH8(UhGcq(pG%__dG(j{rG(j~tGcq$YGcz?fG(j~sH8(UjH90jlH8V3ZG&wUhH90glH8nLhG(j~oG(j{$G(<HvG(s~oH8eCtG(|HtH8M3eG)6TxG($5oG(t2*H8wRjH8C|bG&40bG&eLwG%+<eG&MChG(j~oG(t5&H8wOiG&MCcG($BtG&eOtH8V9eG)6NrG&40dG(t2%G&D6gH8C|eG&40dG&eLhH8V6dGd49fGcq(bG)6TtG&M9gG&eOdGcz?cG(j{)G($8tG)6TvH8eFfG(t5tH8wRiG&MCjG($8qG(t5&G&VFeG(t5tGcq+fG)6QsG(<HuGcq$WGcz?YG(j{rG($BuG&waiH8V6fG(<E-H8(XiH8nFdH8V9qG&eLkH90jmG&40eH8V9iG(|KrGc+|eG(s~nH8V6qG(j~%H8M3fGcq+dH8V6hG(s~qH8wRjH90jkG&40bG(t5sGcq(ZG&wakGcz<oG&wXuH8?aiGc+|aH8eFbG(t5&G(t2tGc+?ZG&40cG(<HvG($BvG)6NuGcq+bG(|NsH8nIhH8(XiGcq(cG(|K;Gc`0fG&M6eH8eCiG($8&G&eOhG)6TvH8eFhG($8tGc`0dGcq(pG($8sG(|NsG&nRhG(t5wG(t2uH83<XG(j{qGcq(pG(t2&G(j{rG(j~qG%+<bH8M3dG(t2%H8(XjG&MCgH8V3ZH83<mG(j{rG(t5tH8V6eG(j{$H90jlG(s~oH8eCtG(|N*G&nUiG(<HtH8V6pG(t5&H8wRjH8C|bG&40aG&eLhG&VFfG&wajH9<8oG(t5&H8wOiG&M9tG(t2pG&wavG($8tH8C|cH8V9dG(<HvG($8uH8(RgGcq+bG(t5tH8V6fG&40dGcq+cG&nRiG(t5tG&3_ZH8V6fG(|KrG&eOhG)6TvH8eFfG(t5pH8wRiG&MCbGcz<YG(t5&G&nRhG(t5uH8M3cG)6QsG&wakG&M6eH8V6fG(j{rG(j~qG%+<aH8V9cG(j~%G&D6eGcq$ZGcq$WH83<mG(j{rG&MCeG(j~qG(|KrH9<5sG(s~nH8V6qG(j^pH8V9eG(s~pGcz?oG(t2*H8wRjH8C|aGcz<ZG(|NwG(j{rH8nLiH8V6fG(t5&H8?aiGc+|aGcq+YG)6NuG&nUjH8C|YH8V9dG(<HvG($8vG%+<aGcq+cG(t5pG&VFhH8(XiGcq+cG&nRiG&D6fG)6TxG&3|pG(|K)G($8tG)6TvH8eFfG($8&G&3|cH8nLdGcz<aG(|NsG&VFeG(t5wG(t2rG&wXuG&nRjG&M6bG&3|pG(j{$G(t2qG%+<fH9<8pG(t5pG($8vG%+<YH8V3ZH83<mG(j{rG)6T!G($8+H83<XH9<5sG(s~oH8eCtG(|N*G&nUiG(<HtH8V6pG(s~qH8wRjH8C|bG&40aG&eLhG&VFfG&walH8V6gG)6TtH8?aiGc+|aH8V6eH83<XG&nUjH8C?YG&40dG(t2%G&D6gH8C|eG&40dG(t5pG&D3gG)6TwGcq(bG)6TtG&MChG(t5pG(j~%G(|K;H8C|bG&MCfH8eFcG($8sH90jkGc+_rG&D3aG(t5&G&VFeG(t5wG($5oG(j{$G($BuG&eOeGcq+ZG(j{rG($BuG&waiH8V6fG(<ExH90jmH90dhH8V9qG&eLwG%_?bGd49jH8V6fG(j{rGcz?dG(s~oH8eCtG(<EuG(t2tH90jhG($B(G($8&G&40fH8C|bG&40cG&wavG&40gH8C|eH8V6fG(t5&H8wOiG&MCgH8V6qG&wakG(t2tGc+?aG&40cG(<HvG($BvG)6Q<G&40eG&eLwH8(UkG&eOhGcq+cG&nRiG&D3eG&wUeH8eCiG($8&H8C|bG&MCeH8eFfG(t5&G&D3eG(<HtGcz<aG(t5&G&nRhG(t5wG($5oG(|KrG&wXjG&M6eH8eCtG(j{rG(j~qG%+(WG&40bG(j~sG(t5vG%+(YH8V3ZH83<mG(j{qH90jkH8eCuG(|KrGc`0eG(s~oH8eCtG(t5&H8M3fH90jgH8V6hG(t2%H8wRjH8C|eH8V6tG&eLkGc+_bG&wakH8M3aG(t5&H8wOiG&MCgH8eFbG(t5&H8V9eG)6Q=G(t5rG(<HvG($8vG%+<dG&40eG(|NvH90jlG)6TwGcq(bG)6TtG&MCgG(t5tG&3|eG(|K;G(j{rG)6TwH8eFcG($8&G($BwG%++qG&D3dG&eLhG&VFeG(t5wG(t2rG&wXuG&nUjG(t2)G($BpG(j{rG(j~tGcq(pG%__ZG(t5sH9<5rG(<HrH8V3ZG&wUhH90glH8nLhG(j~oG(j{$G(|KvG(s~oH8eCtG($8&H8V9gGcq+dH8V6pG(t2sH8wRjH8C|bG&40bG&eLwG%+<aG&eOjG(j~pG)6TtH8wOiG&M9tH8V6fG)6TxG&nRiH8C?XG&40cG(<HvG($8tG(<BtG(t5tG&wakH8V6dG)6TwGcq+cG&nRiG&D6fG)6TxG&40fG($8&G&eOhG)6TvH8eFhG($8tG($BsG&wXxG&D3bG&wavG&VFeG(t5tGcz<pG(t5&G&nUkG&MCgH8V3ZG(j{rG($BuH8C?YG%__YG(j^pG&D3fH90jlH8V3ZH83<mG(j{rG)6T!G($8+H83<WGcq(bG(s~oH8eCtG(<EuH8M0cG(<HuH8V6hG(<HrG&40fH90jkG&40fG&wakG&VFiH8C|eG($8)G(t5&H8wOiG&eOeG(j~sG)6Q<G(t5tG)6NrG&40cG(<HvG($BvH8C?bG&3_YG(|NvH90giG(t5sGcq(bG)6TtG(t5tG)6NsG&3|pG(|K)G&eOhG)6TwH8eFcG($8sH90jkGc+_rG&D3aG(|NsG&VFeG(t5wG(t2vG)6QsH8(XkG&MCgG&D3sG(j{$G(t2qG%+<nG&40gG(t2%G&D6fG&MCcH8V9qG&eLkGc+|fGcq+bH8V9hG(<BsGcz?dG(s~oH8eCtG(<EuH8M0cG(<HuG($B(G(<EuG&40fH8C|bG&40cG&wavG&D3cG(t5sH9<8qG)6TtH8wOiG&M9tH8V9cG&wakG($8uGc+?aG&40cG(<HvG($BvH8C_rH8V3ZG(|NvGcq+bG)6TwGcq+cG&nRiG&MCgH8nLdH8V6uG(|KrH8C|bG&MCjH9<8oG(t5tG(t2rGc+_sG&D3aG(t5&G&VFeG(t5tGcq+bG&wXuG&nRiG&M9tG%__dG(j{rG(j~tGcq(qG($8)G(<EuG&D6fG&M6cH8V9qG&eLkH90jkGd49fH8V6eG(j{$Gcq+cG(t2)G&40bG(|HtG(j{qG)6TyH8V6hG(t5&H8wRjH90jkG&40bG(|NsH8wRkH8V9fGcz<oG&wXuH8wOiG&eOeG(j~sG)6Q<G(t5uH8nLcH8V9eG(t2%G&D6gG)6NvH8V9gG&wagG&VFiG&eOhGcq(bG)6QsH9<5rGcq+YG&40fG(|K;G(j{rG)6TvH8eFhG($8&G&40eG&MCdGcz<bG&eLhG&VFeG(t5tGcz<oG(j~%G(|KvG)6TtH8eFbG(j{$G(t2qG%+<cH8V9ZG(j^pG&D3fH8(RgGcq$WH83<mG(j{rG&MCrG($8(G(|NsH8C|dG(s~oH8eCtG($8&G&eOhG(t2)G(t2vG(t5pH8wRjH8C|bG&40bG(j{nH8nIfH8nLiH8V6gG)6TtH8wOiG&M9tG&D6aG&wakH8C|cG&wahH8V9dG(<HvG($8tG(<BtG(t5rH83<mG&nRhG&eOhGcq(bG)6TtG&MCgG(t5tG&3|eG(|K;G($8tG)6TvH8eFhG($8tGc`0dGcq(pG($8sG&eLhG&nRhG(t5wG(j~qG(<HrH8nIhG&MCgG&40fG(j{rG(j~tGcq(pG(t5vG(t5tG&D6eG(<HrH8V3ZG&wUhH90glH8nLhG(j~pG(|KrH90gkG(s~oH8eCtG)6Q*G&eOjH90jlH8V9qG(t5pH8wRjH8C|eH8V6tG&eLdG($8vG(<HvGcq+eG)6TtH8wOiG&M9tG(t2pG&wavG(j~tGc+|pG&40cG(j~sH8wRgG&wXxH8V9fG&wagG&D3gG&eOhGcq(bG)6TtG&3|dG(t5tG&40bG(j{)H8C|bG&MCeH8eFfG(s~qH8(UiG(t2*G($8qG&eLhG&VFeG(t5wG($5oG(j{$G($BuG&eOeGcq+ZG(j{$G(t2qG%+<nG&40gG(t2vH90jmH8(RgGcq+nG&eLkGc+|dH8(XiH8V6gG(|KqGcz<cG(t2)G&40bG)6Q*H8V6cG&MCcH8eFfG(<HrG&40fH8C|eH8eCfG($8pG(j{sGcq+dG(j~pG)6TtH8wOiG&MCgH8V6qG&wakG(t2tGcq$WG&40cG(<HvG($8vG%+(YGcq+dG&wakH8V6fGd49fGcq(bG)6QsH9<8tG)6NrGcz<bG(<EuG($8tG)6TvH8eFhG($8&G&40eG&MCgGcq(qG&eLhG&VFeG(t5uH8M3bG)6TtG&nUjG(<BtH8eCtG(j{rG(j~qG%+<nG&D6hG(j~vH90gmG%+<YH8V9qG&eLkGc+|dH8(XiH8V6gG(<BsGcz?dG(s~oH8eCtG(|N*G&nUiG(<HtH8V6pG(t5pH8wRjH8C|aGcz<YG&eLhG&D3cG(<HwG(t5tG(t5&H8wOiG&M9tH8V6fG)6TxH8M3cG&M6dG&40cG(<HvG($BvG)6NuGcq+bG(s~pGcq+bG)6TwGcq(bG)6QsG(t2tG&eIgH8eCiG($8&G&eOhG)6TvH8eFhG(t2*H8wRiG(<HsGcq(qG&eLhG&VFeG(t5uH8e9aG(|KrG(t2sG&eOeG(s~nG(j{$G(t2qG&40dH8V6cG(<E-G($BtH8nLhH8V3ZH83<mG($8sGc+|dH8M3aG(j{$Gcz<cG(t2)G&40bG(|HtG($8rG%++rG(t5&G(t2%H8wRjH8C|aGcz<ZG(t5&G(|KuGc+|fG(t5sG&wXuH8?aiGc+|eG(j~oG(j{nH8M3dH8C|cH8V9dG(<HvG($8uH8(RgGcq+bG(t5tH8V6eG)6TwGcq+cG&nRiG&D6fG)6TxG&40fG(<EuG($8tG)6TvH8eFhG($8&H8wRiG(t2)G($8tG(|NsG&MCiH8V9fG&D3qG($8&G&wakG&M9tG%__dG(j{rG(j~qG%+(WG&40YG(j{(H9<5rH8V3cGcq$WH83<mG(j{sG&40eH8V9fG&eOeGcz?dG(s~oH8eCtG(|HtG&nUiG(<HuH8eFbG(<E-G&40fH90jkG&40bG(t5sGcq(ZG&wakGcq+eG)6TtH8wOiG&MCgG(j~sG&wakG&walGcq$WG&40dG(t2%G&D6gH8C?ZGcq+cG(|NvH90jmH8(XiGcq(bG)6TtG&3|dG(t5tG&40bG(j{)H8C|bG&MCeH8eFfG(t5pH8wRiG&MCbGcz<ZG(t5&G&nRhG(t5wG(t2sG(t2%H8(XjG&M9tG&D6aG(j{rG(j~tGcq$YG&40bG(<HqH90jmH8(RgGcq+nG&eLkH90jmH8(XhG($8)G($8&Gc+_dG(s~nH8V6qG(j^pH8V9eG(s~qG&3|gG(t5tH8wRjH8C|aGcz<YH83<mG&D3dG(t5uG(t5tG(t5&H8wOiG&M9tH8V6fG)6TxG&nRiH8C|eH8V9dG(<HvG($BvG)6NuGcq+bG(|NsG&nRjG&40dGcq+cG&nRiG&MCgH8nLdH8V6bG(|KrG($8tG)6TvH8eFfG(t5&G&D3eG(<HtGcz<ZG(|NsG&VFeG(t5wG(t2vG&wavH8(XkG&M6aH9<8tG(j{rG(j~tGcq(qG($8)G(<EuG&D6eG(s~qGcq+nG&eLkH90jmH8(XhG($8)G($8&Gc`0eG(s~nH8V6qG(j^pH8V9eG(s~qG&3|oG(t2sH8wRjH8C|bG&40cG&wavG&40gH8C|eG($5oG&wXuH8wOiG&M9tH8V9cG&wakG(j~sG)6NvG&40cG(<HvG($8vG%+<YH8V9eG(|NvH90jmGd49fGcq(bG)6QsGcq+cH8nLdH8eCtG(|NsG(j{rG)6TwH8eFcG($8sH90jkGc+_rG&D3dG(t5&G&VFeG(t5wG(t2vG)6QsH8(XkG&M6aGcq(nG(j{$G(t2qG&40dH8V6cG(<E-G($BtG(<BrH8V9qG&eLkH90jmH8(XhG($8)G($8&Gc+_dG(s~nH8V6qG(j^pH8V9eG(s~qG&3|gG(t2*H8wRjH8C|bG&40fG&wavH90gkG(<HwH8V6eG(t5&H8wOiG&MCgH8V9cG(t5&G(t2tGcq(qG(t5rG(<HvG($BvG)6NuGcq+bG(|NsH8nIgG&eOhGcq(bG)6QsH90jlG&wUeH8eCiG(<EuG($8tG)6TvH8eFhG($8&H8wRiG(<BtH8eCdG&wavG&nRhG(t5wG(t2sG(t2%H8(XjG&M9tG&D6aG(j{rG(j~tGcq$YGcz?gG(t2%G&D3gG%+<cH8V3ZH83<mG(j{sG&40eH8V9gG)6QsGcz<cG(s~oH8eCtG(|N*H8C|bG%++rG(t2%G(t5tH8wRjH8C|eH8V6tG(|K;G&D3cG&eOiGcz<pG(t5&H8wRjG&3_ZG(t2+G(t5pH8C|cH8C|oG&40cG(<HvG($BvG&wUgH8V9eG&eLdH8nIgG&eOhGcq(bG)6QsGcq+cH8nLdGcz<fG(|K;H8C|bG&MCeH8eFfG(t5&H8(XlG&wanG($8qG&wavG&VFeG(t5wG(t2rG&wXuG&nUjG)6TtGcq+ZG(j{rG(j~qG%+(WG&40bG(<HvG($BtGc+?aH8V9qG&eLkGc+|fGcq+bH8V9iG(t2vGcq+cG(s~oH8eCtG(|HtG&eOhG(t2)G($BuG(t2*H8wRjH8C|eH8V6tG&eLdG($8vG(<HwG(j~nG(t5&H8wOiG&M9tH8V6tH83<mG&nRiH8C|dH8V9dG(<HvG($BvH8C?bG&3_YG(t5pG&nRhH8(XiGcq(bG)6TtG&3|dG(s~nGcq(rG(|K;G($8tG)6T!H9<8oG(t5tG(<EvGd46uG(t5vG(|NsG&VFeG(t5tH8eCuG($8&G(<HuGcq+cGcz?gG(j{rG(j~qG%+<nG&D6hG($8&G($BtGc+|aH8V9qG&eLkH90jlG&eOhH8V6eG&eOiGcq+cG(s~oH8eCtG(t5&H8M3fH90jgH8V6gG(<E(G&40fH90jkG&40bG(|NsH8(UgG(<HvH8M3bG)6TtH8wOiG&MCgGcq+YH83<XG($8uGcq(rG(t5sG(t2%G&D6hG&wXxGcq+eG(|K)G&VFeG&wajGcq+cG&nRiG(t5tG&3_ZH8V6fG(|KvG&eOhG)6TvH8eFhG(t2*H8wRiG&M6bH8eCeG&wavG&VFeG(t5wG(t2rG(|KrG(t2rGcq(pG&3_YG(j{rG($BuG&waiH8eFhG(j^pG&D3fH8(RgGcq+nG&eLkGc+|fH8nLfG($5oG(t5wH9<5sG(t2)G&40bG(|HtH8M0cG(<HrG($5oG(t5tH8wRjH8C|bG&40bG(j{nH8nIfG)6TyH8V6fG(t5&H8wOiG&MCgH8eFbG(t5&G&nUjG)6Q<G(t5rG(<HvG($8uH90gzH8V9hG&wagG&D3gG)6TwGcq(bG)6QsH90jlG(t5uG&D3dG(|K)G(j{rG)6TvH8eFhG($8tGc`0dGcq(pG($8tG&wavG&nRhG(t5wG(t2rG(j~%G($8uG&MChG&3|aG(j{$G(t2qG&40dH8V6cG(<E-G($BtG(s~qGcq+nG&eLkH90jkGd49fH8V6eG(j{$Gcq(bG(s~oH8eCtG(|HtH8M3eG)6TxG($B(G(j~%G(t5uH90jkG&40bG(t5pG%_?aG(<HvGcq+bG&wXuH8wOiG&MCcG($BtG&eOtH8V9eG)6NuG&40dG(t2%G&D6gH8C|eG&40dG(|NvH90jlG)6TwGcq(bG)6TtG&MCgG(t5tG&3|eG(j{)H8C|bG&MCjH9<8oG($8&G&3|cG&3|sG($8rG&wavG&VFeG(t5tGcz<pG&eOiG(j{qGcq$XG(t5qG(j{rG($BuG&waiH8V6fG(<E-H8(UjG&wakH8V3ZH83<mG(j{qGc+|pG($8-G(|KrH90gkG(s~oH8eCtG(|HtH8M3eG)6TxG($5oG(t5pH8wRjH8C|eH8V6tG&eLdG($8vG(<HwG(j~oG(t5&H8wOiG&M9tH8V9cG&wakG($8uGc+?ZG&40cG(<HvG($BvG&eLwG&40eG&eLdH8nIhG&40dGcq(bG)6TtG&3|dG(s~nGcq(rG(|K;H8C|bG&MCeH8eFfG($8&G&3|cG(<HvGcz<ZG(|NsG&nRhG(t5wG(t2tG(<HrG&wXjG(<E+G($BpG(j{rG(j~qG%+(WG&40YG(j{(H9<5rGc+|aH8V3ZH83<mG($8sGc+|dH8M3bG(t2%Gcz?dG(s~oH8eCtG(|HtG&eOhG(t2*G(t5&G(t5pH8wRjH8C|eH8V6tG&eLdG($8vG(<HvGcq+eG)6TtH8wOiG&eOeG(j~sG)6Q<G(t5uH8nLcH8V9dG(<HvG($BvG)6NuGcq+bG(|NsH8nIgG&eOhGcq(bG)6TtG(t5tG)6NrH9<8&G(|K)H8C|bG&MCjH9<8pG(t5tG&40eG&M6bH8eCcG(t5&G&VFeG(t5wG(t2rG(|KrG(t2tG(s~oH8V9cG(j{rG(j~qG%+<aH8V9cG(j~%G&D6fG&MCcH8V9qG&eLwG%_?bGd49jH8V6fG(j{rGc+|eG(t2)G&40bG(|HtH8M0cG(<HsH8eFfG(s~qH8wRjH8C|bG&40aG&eLhG&40cG%+<dH8V6eG(t5&H8?aiGc+|aG($BtG&wUhH8C|cH8C|bH8V9eG(t2%G&D6gH8C|ZG(s~nG(|K;H8V6dG)6TwGcq(cG(|K;Gc`0fG&M6eH8eCiG($8&G($8tG)6TvH8eFhG($8&G&40eG&MCgH8eCcG(t5&G&VFeG(t5tGcz<sG(t5&G($8uG&MCgGcz<fG(j{rG(j~qG%+(WG&40bG(j~sG($BuG&3_bGcq+nG&eLkGc+|fH8C|gH8eCrG(t5wGcq(bG(s~oH8eCtG(|N*G&nUiG(<HtH8V6pG(t2*H8wRjH90jkG&40bH83<mG($8sH8(XkG(t5tG(t5&H8wOiG&MCgH8V9cG(t5&G(t2tGcq(qG(t5rG(<HvG($8uH90gzH8V3ZG(|K;H8V6eG)6TwGcq(bG)6TtG&M9gG&eOeG&D3dG(j{)G(j{rG)6TvH8eFhG($8&G&40eG&MCdGcz<cG&wavG&VFeG(t5tH8V9iG(j{$G&wakG&M9tG(t2&G(j{$G(t2qG%+<dH8V3ZG(<HvH8(UjG&wUgH8V9qG&eLkGc+|fH8C|gH8eCrG(t2%H9<8tG(s~oH8eCtG(|N*H8C|bG%++rG(t2%G(s~qH8wRjH8C|aGcq+cG&eLwG&nRkG(<HvH8M3aG(t5&H8?aiGc+|aH8V3ZG)6QwH8M0cH8C?XG&40cG(<HvG($8vG%+(YGcq+dG&wakH8V6cG%+<bGcq(cG(|NrGcq+dG&wagG&D3hG(<EuG($8tG)6TvH8eFfG(t5pH8wRiG&MCbGcz<YG&eLhG&nRhG(t5wG(t2tG(<HrG&wXjG(<E+H8eCiG(j{rG(j~qG%+(WG%__cG(t5pG&D6eGc+|eH8V3ZG&wUhH90glH8nLhG(j~qG(t2%H90jlG(s~oH8eCtG(|HtH8V9gGcq+dH8eFfG(j^pG(t5uH90jkG&40bG&eLhG(|KuG(t5uH8V6eG(t5&H8wOiG&M9tH8V3ZG&wavH8C|cG&wafH8V9dG(<HvG($8vG%+(YGcq+dG&wagG&VFhGd49fGcq(bG)6TtG&MCgG(t5uG&D3sG(j~oG($8tG)6TvH8eFhG(t2*H8wRiG(<HsGcq(qG(t5&G&VFeG(t5wG(t2rG&wXuG&nRjG&40fG&3|aG(j{$G(t2qG%+(WG&D3rG(t5sH9<5rG(<BrH8V3ZH83<mG(j{rG&MCeG(j~qG(|KrH8?dkG(s~nH8V6qG(j^pG&nRjH90jgH8V6gG(<E(G&40fH90jkG&40bG&wajH90giG&walG($8*G(t5&H8wOiG&MCcG($BtG&eOtH8V9eG)6NvG&40dG(t2%G&D6gH8C|eG&40dG&eLhH8V6fG&40dGcq(cG(|K;Gc`0fG&M6eH8eCiG(|K)G($8tG)6TvH8eFhG($8&G&40eG&MCgH8eCcG(t5&G&nRhG(t5wG(t2rG(j~%G(t5sGcq$XG($BxG(j{rG(j~tGcq$YGcz?gG(t2%G&D3fGd43dGcq+nG&eLkGc+|fH8C|gH8eCrG(t5wGcz<cG(s~oH8eCtG(<EuG&eOgG&3_ZG&40hG(<HrG&40fH8C|aGcz<ZG(|NwG(j{sGd49hG($8)G(t5&H8wRjG&3_ZG(t2+G(t5pH8C|cH8C|oG&40cG(<HvG($BvG)6NuGcq+bG(|NsH8nIfH8(XiGcq(bG)6TtG&40fG(t5pG($8*G(|K;H8C|bG&MCeH8eFhG(t2*H8wRiG(<HsGcq(qG(|NsG&VFeG(t5wG($5oG(j{$G(t5uG&M6bG&3_YG(j{rG($BuG&waiH8V6fG(<E-H8(UjH90dhH8V9qG&eLkGc+|fGcq+bH8V9eG(t5wGcz<cG(t2)G&40bG(|HtH8V6eG(<HtH8V9iG(s~qH8wRjH8C|gG(t5qG&wavG&40cG&40eGcz<rG)6TtH8wRjG&3_ZG(t2+G(t5pH8C|cG)6NtG&40cG(<HvG($BvG)6Q<G&40fG&wUgGcq+bH8(XiGcq(cG(|K;Gc`0eG&MChG&3|pG(<EuG(j{rG)6TvH8eFfG($8&G&3|cH8nLdGcz<ZG(|NsG&VFeG(t5tGcz<pG(t5&G&nRhGcq$XG($8wG(j{rG(j~qG%+<bH8M3dG(t2%H8(XjG&MCgH8V9qG&eLkH90jmG&40eH8V9eG(|NsGcz<cG(s~oH8eCtG)6Q*G&eOjH90jmH8V6pG(s~qH8wRjH90jkG&40bG&eLhG(|KuH8C|dGcz<rG)6TtH8wOiG&M9tG&D6aG&wakG(|KtG&M9tG(t5rG(<HvG($8uH90gzH8V3ZG(|K;H8V6dGd49fGcq+cG&nRiG&M9eGc+|eG(j~oG(<EuG(j{rG)6TwH8eFcG($8&G($BwG%++qG&D3aG&wavG&VFeG(t5wG(t2rG&wXuG&nUjG(t2)G($BpG(j{rG(j~tGcq$aG&D3aG(t2vH90jnG%+<cH8V9qG&eLkGc+|fH8(XiH8V6fG($8tGc+_dG(t2)G&40bG(|HtG(t2tH8(UwG&D6qG(t2*H8wRjH8C|bG&40fG&wavH90gkG(<HwH8V6eG(t5&H8wOiG&MCgGcq+YH83<XH8C|cH8C|ZH8V9dG(<HvG($8uH90gzH8V9hG&wagG&VFfGd49fGcq+cG&nRiG&D6fG)6TxG&3|pG(<EuH8C|bG&MCeH8eFhG($8tG($BsG(t2)G&D3eG(t5&G&VFeG(t5wG(t2vG&wavH8(XkG&M6aGcq$WG(j{rG(j~tH90jjH8e9aG(j^pG&D3fH90jlH8V3ZH83<mG(j{rG)6T!G($8+H83<XH90jlG(s~oH8eCtG(|HtH8M3eG)6TyH8eFbG(t5&H8wRjH8C|aGcz<YG&eLhG&40gH8V9fGcz<qG(t5&H8wRjG&3_ZG(t2+G(t5pG(t5uGcq+YH8V9dG(j~sH8wRgG(t2*G&40cG(|K;G(|KwH8(XiGcq(bG)6QsGcq+cH8nLdH8V3ZG(|KrG(j{rG)6T!H9<8pG(t5pG(t5uG&wUeGcz<aG&eLhG&nRhG(t5wG(t2vG(t5&G(t5tG&M9tH8eCiG(j{rG(j~qG%+<nG&D6hG(j{(H9<5rGc+|aH8V9qG&eLkGc+|fGcq+bH8V9iG(t2vGcq+cG(t2)G&40bG)6Q*H8V6cG&MCcH8eFfG(<HvG&40fH8C|bG&40cG&wajGcq(dG&MChG($8(G&wXuH8?aiGc+|aH8eFbG(t5&G(t2tH8nLcH8V9dG(<HvG($BvG&wUgH8V9eG&eLdG&nRjG&40dGcq(bG)6QsGcq(bG(<BqG&3|aG(|KrG(j{rG)6TvH8eFhG($8&G&40eG&MCdH8eCdG&wavG&VFeG(t5wG(t2rG&wXuG&nRjG&M6bG&D6aG(j{rG(j~qG%+(WG&40YG(j{(H9<5rGc+|eH8V3ZH83<mG(j{sH8(XhG(t5tG)6QsGc+_dG(t2)G&40bG(|HtG(j{qG)6TyH8V6hG(t2%H8wRjH8C|eH8V6tG&eLkGc+_bG&wakH8M3aG(t5&H8wOiG&M9tH8V3ZG&wavH8M3cG&eOhH8V9dG(j~sH8wRgG(t2*G&40cG&eLdG(|KxG)6TwGcq(bG)6QsGcq+cH8nLdGcz<fG(|KrG&eOhG)6TwH8eFcG($8&G($BwG%++qG&D3eG&wavG&VFeG(t5wG(t2rG&wXuG&nUjG(t2)G($BpG(j{$G(t2qG%+(WG&D3rG(t5tG&D6eG(<HvH8V9qG&eLkH90jlG(t5tH8V6gG)6NuGcz?dG(t2)G&40bG(|HtG($8rG%++rG(t5wG(t5pH8wRjH8C|aGcz<ZG(|NwG(j{sGd49hG(t5sG&wXuH8wOiG&M9tH8V6fG)6TxG&nRiG&wafH8V9dG(j~sH8wRgG&3_cG(t5tG&wagG&VFfG)6TwGcq(bG)6QsH90jlG(t5uG&D3dG($8&G&eOhG)6TvH8eFhG(t5tG&40eG(<BqGcq(qG(|NsG&VFeG(t5uH8M3bG)6TtG&wXjG&eOeH8eFbG(j{rG(j~tH90jjH8e9aG(<E-H8(XiGc+|aH8V9qG&eLkGc+|fH8(XiH8V6fG($8tGc+_dG(s~oH8eCtG(|HtH8V9gGcq+dH8eFgG(t2sH8wRjH90jkG&40fG&wakG&VFiH8C|eG($8+G)6TtH8wOiG&MCgH8eFbG(t5&G&nUjG)6Q=G(t5rG(j~sH8wRgG(t2*G&40cG&eLdH8V6dH8(XiGcq(bG)6TtG(t5tG)6NsG&40fG(|K;G(j{rG)6TvH8eFhG($8&G&40eG&MCgGcq(qG&wavG&VFeG(t5wG($5oG(j{$G(t5uG&M6aH9<8tG(j{rG(j~tGcq$YG&40bG(<HqH90jnG%+(YH8V9qG&eLkGc+|fH8C|gH8eCrG(t5wH9<5sG(s~oH8eCtG(<EuH8M0cG(<HuG($B(G(<EuG&40fH8C|bG&40fG&wavH90gkG(<HwH8V6gG)6TtH8?aiGc+|aH8eFbG(t5&G($BvGcq(pG(t5rG(<HvG($BvG)6NuGcq+bG(|NsH8nIfG&eOhGcq(bG)6TtG&MCgG(t5uG&D3sG(|K)H8C|bG&MCfH8eFcG(t2*Gc`0dG(t2*G($8tG(|NsG&VFeG(t5tGcq+fG)6QsH8(XjG&eOeG(j~sG(j{rG(j~tGcq(qG($8)G(<EuG&D6fG&M6cH8V9qG&eLkH90jlG)6T!G(j~oG)6QsH9<8tG(s~oH8eCtG(|HtG&eOhG(t2*G(t5&G($8&G&40fH8C|bG&40cG&wavG&D3cG(t5uG(j~pG)6TtH8wOiG&MCgGcq+YH83<XH8C|cG&wagH8V9dG(<HvG($8vG%++pG(t5uG(s~pH90jnG)6TwGcq(bG)6QsH90jlG(t5uG&D3dG(<EuG($8tG)6T!H9<8oG(t5&H8(XlG%+<aGcq+nG(t5&G&VFeG(t5wG(t2vG&wavH8(UjG(t5tH8V6qG(j{rG(j~qG%+(WG&40bG(<HvG($BtGc+|eH8V9qG&eLsGc+_cH90jwG(t5vG(|KrG(<HvG(s~oH8eCtG(<EuG(j{rG(t2)G&D0ZG(t2*H8wRjH8C|bG&40cG&wavG&40gH8C|eH8V6eG(t5&H8wOiG&MCgH8V6qG&wakG($BvGcq$aG&40cG(<HvG($BvG&eLwG&40eG&eLdH8nIhG&40dGcq+cG&nRiG&D6fG)6TyG&D6aG($8pH8C|bG&MCjH9<8oG(t5pG(<EwG%++qG&D3dG&wavG&VFeG(t5uH8M3bG)6TtG&wXjG&eOeG(j~sG(j{rG($BuH8C?YG%__YG(j^pG&D3gG%+<YH8V3ZH83<mG(j{rG(t5tH8V6eG&eOiH8?dkG(s~oH8eCtG(|HtH8M3eG)6TxH8M3eG(t5tH8wRjH8C|eH8V6tG&eLdG($8vH8V9fGcq+bG&wXuH8wOiG&M9tH8V9cG&wakG(j~sH8C|YH8V9dG(<HvG($8uH8(RgGcq+bG(t5tH8V6dH8(XiGcq(bG)6TtG&MChG(t5pG($8*G(|K;G(j{rG)6TvH8eFhG(t2*H8wRiG&M6bGcz<cG(t5&G&VFeG(t5tH8V9iG(j{$G&eLgGcq(pG&D6aG(j{rG(j~qG%+(WG&40bG(j~sG($BuG&3_bGcq+nG&eLkGc+|fH8(XiH8V6fG(t5&Gcq(bG(t2)G&40bG(|HtG&eOgG&40eH8eFfG(<E-G&40fH90jkG&40bG(t5sGcq(ZG&wakGcq+dG(t5&H8wRjG&3_ZG(t5uG)6QwH8V9eG)6TtH8V9dG(<HvG($BvG)6Q<G&40fG&wUgGcq+dH8(XiGcq(bG)6TtG&M9gG&eOeG&D3dG(|K)G&eOhG)6TwH8eFdG(t5pH8wRiG&M6cGcz<ZG&eLhG&VFeG(t5wG(t2rG&wXuG&nUjG)6TtG(j~sG(j{rG(j~tGcq(qG($8)G(s~qG($BuG&MCgH8V3ZH83<mG(j{sH8(XhG(t5tG)6QsGc+_dG(s~oH8eCtG($8&H8V9gH90jwGcz?gG(<E-G&40fH8C|bG&40cG&wavG&D3cG(t5sGcz+XG&wXuH8wOiG&M9tH8V9cG&wakG($8uGc+|pG&40dG(t2%G&D6gH8C|ZG(s~nG(|K;H8V6dGd49fGcq(bG)6TtG(t5tG)6NsG&40fG(|K;G(j{rG)6T!H9<8oG(t5&H8(XlG%+(YGcz<YG&eLhG&VFeG(t5uH8e9aG(|KrG(t2sG&eOeH8eFbG(j{rG(j~qG%+<aH8V9cG(j~%G&D6fG&MCgH8V3ZH83<mG(j{qH90jkH8eCsG)6QsGcq+cG(s~nH8V6qG(j^pH8V9eG(s~pGcz?oG(t2*H8wRjH8C|bG&40cG&wavG&40gH8C|eH8V6eG(t5&H8?aiGc+|aH8V3ZG)6QwG($BvGcq(pG(t5rG(<HvG($8uH8(RgGcq+bG(t5tH8V6eG&eOhGcq(cG(|K;Gc`0eG&MCgH9<8&G($8&H8C|bG&MCeH8eFiG(t5pH8(XlH8C|cGcq(qG&wavG&VFeG(t5tGcz<pG&eOiG&wXjG(<E+H8V9cG(j{rG(j~tGcq(pG(t5vG(t5tG&D3gG%+<YH8V3ZG&wUhH90glH90joG($8(G(|NsH90jlG(s~oH8eCtG(|HtG&nUiG(<HtH8M3eG(<E(G&40fH8C|bG&40bG&eLwG%+<aG&eOjG(j~pG)6TtH8wOiG&eOeG(j~sG)6Q<G(t5uH8nLeH8V9eG(t2%G&D6gH8C?ZGcq+cG(|NvH90jmG&40dGcq(bG)6TtG&3|dG(t5tG&40bG(|K;G(j{rG)6T!H9<8oG(t2)H90gkH8nFcGcz<aG&eLhG&nRhG(t5wG(t2sG(t2%H8(XjG&M9tG&3_YG(j{rG($BuG&waiH8eFhG(j^pG&D3fH90jlH8V9qG&eLkH90jmH8(XhG($8)G($8tGc+|eG(s~oH8eCtG(<EuG($8rG&40bH8eFfG(t5&H8wRjH8C|bG&40cG&wavG&40gH8C|eH8V6eG(t5&H8wRjG&3_ZG(t5uG)6QwH8V9eH8C?XG&40cG(<HvG($BvG&eLwG&40eG&eLdH8nIfH8(XiGcq(bG)6TtG&MCgG(t5uG&D3sG(|K)G&eOhG)6TvH8eFhG(t5tG&40eG(<HvH8eCdG(|NsG&nRhG(t5wG(t2uH83<XG(j{qGcq$XG($BxG(j{rG(j~qG%+<nG&D6hG(j~vH9<5rGc+?aH8V9qG&eLkGc+|fH8C|gH8eCrG(t5tGcz?dG(s~nH8V6qG(j^pH8V9eG(s~qG&3|oG(t2sH8wRjH8C|bG&40cG&wavG&40gH8C|eH8V6gG)6TtH8wOiG&M9tH8V9cG&wakG($8uH8nLcH8V9dG(<HvG($8vG%+<YH8V9eG(|NvH90jlG)6TwGcq(bG)6TtG&40fG(t5pG(t2+G(|K)H8C|bG&MCjH9<8oG(t5&H8(XlG%+(YGcz<cG&wavG&VFeG(t5tGcz<rH83<XG(t5tG&M9tGcq+ZG(j{$G(t2qG&40dH8V6cG(<E-G($BtH8nLdH8V9qG&eLkH90jmG&40eH8V9eG(|NsGcz<cG(t2)G&40bG(|HtG($8rG%++qG($BtG(t5&H8wRjH8C|aGcz<ZG(t5&G(|KvG&40fG(t5uG(t5&H8wRjG&3_ZG(t5uG)6QwH8V9eG)6NtG&40cG(<HvG($BvH8C_rH8V3ZG(|NvH90giG(t5sGcq+cG&nRiG&M9fG(<BpGcq+ZG(|K;G(j{rG)6TvH8eFiG(t5pH8(XlH8C|ZH8eCdG(t5&G&VFeG(t5tGcz<rH83<XG(t5sGcq$XH8V6bG(j{$G(t2qG&40dH8V6cG(<E-G($BtG(s~qGcq$WH83<mG(j{sG&40eH8V9gG)6QsGcq+cG(s~oH8eCtG(|HtG&eOhG(t2*G(t5sG(s~qH8wRjH90jkG&40cG&wUhG(j{rG&walG(t5vG)6TtH8?aiGc+|eG(j~oG(j{nH8M3dH8C|aH8V9dG(<HvG($8uH8(RgGcq+bG(t5tH8V6dH8(XiGcq(bG)6TtG&MChG(t5pG(j~%G(|K)G&eOhG)6T!H9<8oG($8&G&3|cG(<HsGcz<ZG(|NsG&VFeG(t5tGcq+bG&wXuG&nRiG&M9tG(s~nG(j{rG($BuG&waiH8eFhG(j^pG&D6eH8V3cGcq+nG&eLkH90jmH8(XhG(t5vG(<BsGc+_dG(t2)G&40bG(|N*G&eLfG&3_ZG&40hG(<E(G&40fH8C|eH8eCfG($8pG&waiG&wakGcq+dG(t5&H8wRjG&3_ZG(t2+G(t5pH8C|cH8C|dH8V9dG(<HvG($BwG&eIgG(t5uG(t5&G&nRkG)6TwGcq+cG&nRiG&D6fG)6TxG&40fG(<EuG($8tG)6TvH8eFiG(t5pH8(XlH8C|ZH8V9ZG&wavG&VFeG(t5wG(t2rG&wXuG&nUjG)6TtG(j~sG(j{rG(j~qG%+(WG&40bG(<HvG(t5vG%+<cH8V9qG&eLkH90jlG&eOhH8V6fG)6QsGcq+cG(t2)G&40bG(|HtG(j{qG)6TyH8V6hG(t5&H8wRjH8C|aGcz<YG(|NsG&D3cG&eOiGcz<pG(t5&H8wOiG&M9tH8V3ZG&wavG&nRiG&wahH8V9eG(t2%G&D6hG&wXxGcq+nG(s~pH90jjG%+<bGcq+cG&nRiG&3|eG&40aH8eCtG(|KrG($8tG)6TwH8eFcG($8sH90jkGc+?ZGcz<YG(t5&G&VFeG(t5wG($5oG(j{$G($BuG&eOeH8V6qG(j{rG(j~tGcq$YGcz?gG(t2%G&D3fGd43dGcq+nG&eLkGc+|fH8(XiH8V6fG($8tGcz?dG(s~oH8eCtG($8&H8V9gGcq+dH8V6hG(t5&H8wRjH8C|bG&40cG(j{nH8nIfGcq+cG&D0ZG&wXuH8wOiG&M9tH8V6fG)6TxH8V6dH8C?YG&40cG(<HvG($BwG&eIgG(t5uG(|K;H8nIhG&40dGcq+cG&nRiG&M9fG(<BpGcz<bG(<EuH8C|bG&MCeH8eFhG($8&G&40eG&MCgH8eCcG(t5&G&VFeG(t5tGcz<pG(t5&G&nRhGcq$XG&3_YG(j{rG(j~tGcq$YGcz?fG(j~sH8(UjH8(RgGcq$WG&wUhH90glH90joG($8-G(|KrH8nIgG(s~oH8eCtG(|HtG&eOhG(t2*G(t5sG(s~qH8wRjH8C|aGcz<ZG&wavH90gjH8C|dGcz<qG(t5&H8wOiG&M9tH8V9cG&wakG($8uH8nLcH8V9dG(j~sH8wRgG(t2*G&40cH83<mG&VFhG&40dGcq(bG)6TtG(t5tG)6NsG&3|pG(|K)G&eOhG)6TvH8eFhG(t5tG&40eG(<BqGcq(qG(t5&G&MCiH8V9fG&D3uG(|KrG&VIhG&M6bG(t5qG(j{rG($BuG&waiH8eFhG(j~nH90jmG&wakH8V9qG&eLkGc+|fH8C|gH8eCvG(t2vGcq+cG(s~oH8eCtG(|N*H8C|bG&40aH8eFgG(t5&H8wRjH8C|aGcz<ZG(|NwG(j{sGd49hG(t5uG(t5&H8?aiGc+|aH8V3ZG)6QwG($BvGcq(pG(t5rG(<HvG($BvG&eLwG&40eG(|NsG&eOkH8C|cGcq+cG&nRiG&3|eG&40aH8V3ZG(|KrG&eOhG)6TvH8eFeG(t2)H9<8vG%++qG&D3aG(|NsG&nRhG(t5wG(t2tG(<HrG&wXjG)6TtG(s~nG(j{rG(j~tGcq(pG(t5vG(t5pG($BtG(s~qGcq$WH83<mG($8sGc+|dH8M3cG&wXmH90gkG(t2)G&40bG(|N*H8M0bG&40pG&3|gG(<EuG&40fH8C|bG&40cG&wavG&40gH8C|eH8V6gG)6TtH8wOiG&M9tG(t2pG&wavG(j~tGc+?ZG&40dG(t2%G&D6hG&wXxGcq+nG(s~pH90jjG&wajGcq(bG)6TtG&MCgG(t5uG&D3sG(j~oG($8tG)6TvH8eFfG(t5pH8wRiG&MCbGcz<YG(t5&G&VFeG(t5wG(t2rG(|KrG(t2sG&eOeH8V6qG(j{rG(j~qG%+(WG&40bG(<HvG($BuG&MCcH8V3ZH83<mG(j{qH90jkH8eCtG($8tGc`0eG(s~oH8eCtG(<EuG(j{rG(t2*G($BuG(t2%H8wRjH8C|bG&40cG&wavG&40gH8C|eH8V6eG(t5&H8?aiGc+|aGcq+YH83<XG(j~tGc+|aH8V9eG(t2%G&D6gH8C|ZG(s~nG(|K;H8V6eG)6TwGcq+cG&nRiG&M9fG(<BpGcq+ZG(<EuH8C|bG&MCeH8eFhG(t2*H8wRiG&M6bGcz<bG&eLhG&VFeG(t5tGcz<oG(j~%G(|KvG(<E+H8eFjG(j{rG(j~tGcq(qG($8)G(<EuG&D6eG(s~qGcq$WH83<mG(j{rG(t5tH8V6eG&eOiH90gkG(s~oH8eCtG)6Q*G&eOjH90jmH8V6pG(t5tH8wRjH90jkG&40cG&wUhG(j{rG&walG(t5vG)6TtH8wOiG&MCgG(j~nH83<XG&nUjG)6TtH8V9dG(<HvG($BvG)6NuGcq+bG(|NsH8nIgG)6TwGcq(bG)6TtG(t5tG)6NsG&3|pG(|K;G&eOhG)6T!H9<8oG(t5&H8(XlG%+(YGcz<ZG&wavG&nRhG(t5wG(t2sG(t2%G&wajGcq+cGcz?gG(j{rG(j~tGcq$YG&40bG(<HqH90jmH8(RgGcq+nG&eLkGc+|eG&40dH8V9hG(<BsGc+|eG(s~oH8eCtG(|N*H8C|bG&40aH8eFgG(s~qH8wRjH8C|aGcz<ZG(t5&G(|KuGc+|fH8V6dG&wXuH8wOiG&MCgG(j~sG&wakG&walGcq$aG&40cG(<HvG($8vG%+(YGcq+dG&wakH8V6eG&eOhGcq+cG&nRiG&M9eGc+|eG($BpG(<EuH8C|bG&MCjH9<8oG(t2)H90gkH8nFcGcz<aG&wavG&MCiH8V9fG&D3uG(|KrG&eLhG&M9tG%__dG(j{rG(j~qG%+(WG%__cG(t5pG&40cH8C?aGcq$WG&wUhH90gkH8nLgH8V6eG(j{$Gcq(bG(s~oH8eCtG(<EuG(t2tH8(UxG($BtG(t5&H8wRjH90jkG&40bG&eLhG(|KuG(t5uG(t5uG(t5&H8wOiG&M9tG&D6aG&wakG(|KtG&M9tG(t5rG(<HvG($8vG%+(YGcq+dG&wagG&VFhGd49fGcq(bG)6TtG(t5tG)6NsG&40fG(j{$G($8tG)6T!H9<8pG(t5tG&40eG&M6bGcz<bG(|NsG&VFeG(t5uH8M3bG)6TtG&wXjG&eOeH8V6qG(j{$G(t2qG%+<aH8eFaG(s~qG($BtH8nLdH8V9qG&eLkH90jmH8(XhG(t5vG(<BrH90jlG(s~oH8eCtG(<EuG(j{rG(t2)G&D6qG(t2%H8wRjH8C|bG&40cG(j{nH8nIgG%+<dG($5oG&wXuH8wOiG&MCgH8V9cG(t5&G(t2tGc+|ZH8V9eG(t2%G&D6gH8C|eG&40dG&eLhH8V6fG&40dGcq(bG)6QsH9<5sG(t5uG&D6aG(|K;G($8tG)6TvH8eFhG($8&H8wRiG(<E+G&D3eG(t5&G&VFeG(t5tGcz<rH83<XG(t5tG&M9tH8eCiG(j{rG(j~tGcq$YGcz?fG(j~sH8(UjH90dhH8V9qG&eLkGc+|dH8(XiH8V6gG(<BsGc`0eG(s~oH8eCtG(|HtH8M3eG)6TxG($5oG(t2*H8wRjH8C|bG&40bG&eLwG%+<eG&MChH8V6eG(t5&H8wRjG&3_ZG(t2+G(t5pH8C|cH8C|oG&40cG(<HvG($8tH8nFcG(t5vG&wagG&D3gG)6TwGcq(bG)6TtG&MCgG(t5tG&3|eG(|K)G&eOhG)6T!H9<8pG(t5tG&40eG&MCgGcz<cG(t5&G&VFeG(t5uH8e9aG(|KrG(t2sG&eOeH8eFbG(j{$G(t2qG%+<dH8V3ZG(j~%G($BtGc+|eH8V9qG&eLkH90jmG&40eH8V9iG(|KrGc+|eG(t2)G&40bG)6Q*H8V6cG&MCcH8eFfG(<HvG&40fH8C|bG&40cG&wavG&40gH8C|eH8V6eG(t5&H8?aiGc+|aH8V3ZG)6QwH8M0cG)6Q;G(t5rG(<HvG($8vG%+(YGcq+dG&wagG&VFiG&eOhGcq(cG(|K;Gc`0eG&MCgH9<8&G($8&H8C|bG&MCeH8eFhG($8tGc`0dGcq(pG($8sG(|NsG&nRhG(t5wG(t2uH83<XG(j{qGcq(pG(t2&G(j{rG(j~qG%+<bH8M3dG(t2%H8(XjG&MCgH8V3ZH83<mG(j{rG(t5tH8V6eG(j{$H90jlG(s~oH8eCtG(|N*G&nUiG(<HtH8V6pG(t5&H8wRjH8C|bG&40aG&eLhG&40gH8C|eG($8(G&wXuH8wOiG&M9tH8V9cG&wakG($8uH8nLcH8V9eG(t2%G&D6gG)6NvH8V9gG(s~pH90jnG)6TwGcq+cG&nRiG&D3eG&wUeH8eCiG($8&G($8tG)6TwH8eFcG($8&G($BwG%++qG&40gG(|NsG&VFeG(t5wG(t2rG(|KrG(t5uG&M6aH9<8tG(j{rG(j~tGcq$ZG&40bG(<HvH8(UjH8(RgGcq+nG&eLkH90jmG&40eH8V9eG(|NsGcz?dG(s~nH8V6qG(j^pH8V9eG(s~pGcz?oG(t5&H8wRjH8C|bG&40fG&wavH90gkG(<HwH8V6eG(t5&H8?aiGc+|aGcq+YG)6NuG&nUjH8C|YH8V9dG(<HvG($8vG%+<aGcq+bG&eLhH8nIgG&eOhGcq+cG&nRiG&D6fG)6TxG&3|pG(<EuH8C|bG&MCeH8eFiG(t5pH8(XlH8C|cGcq(rG&wavG&VFeG(t5tGcz<sG(t5&G($8uG&MCgGcz?gG(j{$G(t2qG%+<cH8V6uG(j~nH90jmG&wUgH8V9qG&eLkH90jkGd49fH8V6eG(j{$H9<5sG(s~oH8eCtG(|HtG&eOhG(t2)G($BpG(t5&H8wRjH8C|aGcz<YG&eLhG&40gH8V9fGcz<oG&wXuH8wOiG&eOeG(j~sG)6Q*G&nRiG&wahH8V9eG(t2%G&D6gH8C|eG&40dG&eLhH8V6fH8(XiGcq(bG)6QsGcq+cH8nLdGcz<fG(<EuG&eOhG)6TvH8eFfG(t5&H8(XlG&wanG($8rG&wavG&VFeG(t5tGcz<rH83<XG(t5sGcq$XG($8wG(j{rG($BuG&waiH8V6fG(<E-H8(UjH8(RgGcq+nG&eLkH90jmH8V9iH8V6eG)6QsGcz?dG(s~oH8eCtG(|HtG&eOhG(t2*G(t5&G(t5tH8wRjH8C|aGcz<YG(|K-Gcq+dGcq+cH8M3bG)6TtH8wOiG&M9tH8V6fG)6TxG&nRiH8C?ZG&40cG(<HvG($BvG)6Q<G&40fG&wUgGcq+bGd49fGcq(bG)6TtG&3|dG(t5tG&40bG(|K;G(j{rG)6TvH8eFiG(t5pH8(XlH8C|cGcq(qG&eLhG&nRhG(t5wG(t2uH83<XG(j~tG&MCgG(j~sG(j{rG(j~qG%+<aH8V9cG(j~%G&D6eGcq$ZGcq$WH83<mG($8sGc+|dH8M3cG&wXuGc+|eG(s~nH8V6qG(j~%H8M3fGcq+dH8V6hG(t5tH8wRjH8C|eH8V6tG&eLdG($8vH8V9fGcz<qG(t5&H8wOiG&MCgGcq+YH83<bG(j{sH8nLeH8V9dG(<HvG($8vG%+<dG&40eG(|NvH90jlG)6TwGcq(bG)6TtG&MCgG(t5tG&3|eG(|K;G&eOhG)6TvH8eFhG($8&G&40eG&MCdGcz<cG(t5&G&VFeG(t5tGcz<oG(j~%G(<EuG&eOeH8V3ZG(j{rG(j~tGcq(pG%__ZG(t5&H8(XiG(<BrH8V9qG&eLkGc+|fH8(XiH8V6eG(|NsGcz?dG(s~oH8eCtG(|N*H8C|bG&40aH8eFgG(t2sH8wRjH8C|bG&40bG&eLwG%+<aG&eOhGcz<pG(t5&H8wOiG&M9tH8V9cG&wakG(j~tGc+?YG&40cG(<HvG($8tG(<BtG(t5tG&wakH8V6fG&40dGcq+cG&nRiG(t5uG&wUiH8V9cG(|K)G(j{rG)6TvH8eFhG($8&G&40eG&MCdH8eCdG(t5&G&nRhG(t5uH8M3bG&nRiG($BuG(<E+Gcq+ZG(j{rG(j~tH90jjH8e9aG(<ExH90jmG&wakH8V3ZH83<mG(j{rG)6T!G($8)G&eOiH8nIgG(t2)G&40bG(|N*H8V9gH90jgH8V6hG(j~sG(t5uH8C|bG&40bG&eLwG%+<aG&eOjG(j~oG(t5&H8?aiGc+|eG(j~oG(j{nH8M3dH8C|aH8V9eG(t2%G&D6gH8C?ZGcq+cG(t5pG&nRiG)6TwGcq(bG)6TtG&MChG(t5pG($BxG(|K)G($8tG)6T!H9<8pG(t5pG(t5uG&wUeGcz<aG(|NsG&VFeG(t5wG(t2vG)6QsH8(XkG&MCgG&40fG(j{$G(t2qG%+<dH8V3ZG(j~sH8(XiGc+|eH8V9qG&eLkGc+|fH8C|gH8V6dG(t5wH9<8tG(t2)G&40bG(|HtG($8rG%++rG(t5wG(t5&H8wRjH8C|bG&40cG&wajGcq(dG&MChG(j~oG(t5&H8wOiG&MCgG(j~nH83<mH8V9eG)6Q<G(t5rG(<HvG($BvG)6NuGcq+bG(|NsH8nIfG&eOhGcq+cG&nRiG&MCgH8nLdH8V6uG(|KrH8C|bG&MCjH9<8oG(t5tG(t2rGc+_sG&D3aG(t5&G&VFeG(t5tGcq+bG&wXuG&nRiG&M9tG%__dG(j{rG(j~qG%+<nG&D6hG(j~vH9<5rH8nFdH8V3ZH83<mG(j{sH8V9iG(j~pH83<XGcq(bG(t2)G&40bG(|HtH8V6eG(<HuH8V6hG(<E(G&40fH90jkG&40bG(|NsH8wRkH8V9fGcz<qG(t5&H8wOiG&M9tH8V9cG&wakG($8tG)6Q;G(t5sG(t2%G&D6gG)6NvH8V9gG(s~pH90jnG)6TwGcq(bG)6QsH90jlG&wUfG(s~nG($8pG($8tG)6TwH8eFcG($8&G($BvGd46uG($8pG(t5&G&nRhG(t5uH8M3cG)6QsG&wakG&M6eH8V6fG(j{$G(t2qG%+<dH8V3ZG(j~%G($8vG%+<cH8V9qG&eLwG%_?bGd49jH8V6eG(t5sH9<8tG(s~oH8eCtG(|HtG&eOhG(t2*G(t5&G(t2*H8wRjH8C|bG&40bG(j{nH8nIfH8nLiH8V6gG)6TtH8wOiG&M9tG&D6aG&wakH8C|cG&wagH8V9eG(t2%G&D6gG&wUhH8V9gG(s~pH90jmH8(XiGcq(cG(|K;Gc`0eG&MChG&3|pG($8&H8C|bG&MCeH8eFhG($8&G&40eG&MCgGcq(qG&wavG&nRhG(t5wG(t2tG(<HrG&nUkG&MCgH8V6qG(j{rG(j~qG&40dH8eCbG(t5&G($BuG&3_bGcq$WG&wUhH90glH8nLhG(j~pG(|KrH90gkG(s~oH8eCtG)6Q*G&eOjH90jlH8V9qG(t5pH8wRjH90jkG&40fG&wakG&VFiH8C|eG($8)G(t5&H8wOiG&MCgGcq+YH83<XG($8uGcq$aG&40dG(t2%G&D6gH8C?ZGcq+cG(t5pG&VFiG&eOhGcq(bG)6TtG&3|dG(t5tG&40bG(j{)H8C|bG&MCeH8eFhG(t2*H8wRiG&M6bGcq(qG&wavG&VFeG(t5wG($5oG(j{$G($BuG&eOeH8eFbG(j{$G(t2qG%+<nG&40gG(t2vH9<5rG(<HrH8V9qG&eLkGc+|dH8(XiH8V6gG(<BsGcz?dG(s~oH8eCtG(|N*H8C|bG&40aH8eFgG(t5pH8wRjH8C|bG&40cG&wajGcq(dG&MChG(j~pG)6TtH8?aiGc+|aH8eFbG(t5&G(t2tGcq$XG&40cG(<HvG($8vG%+(YGcq+dG&wakH8V6fGd49fGcq(bG)6QsH9<8tG)6NrGcz<bG(<EuG($8tG)6TvH8eFhG($8&G&40eG&MCgGcq(qG&eLhG&VFeG(t5wG(t2rG&wXuG&nRjG&M6aGcz?YG(j{rG(j~tGcq(qG($8)G(s~qG($BuG&MCgH8V9qG&eLkH90jmH8V9iH8V6eG)6QsGc+_dG(s~oH8eCtG(<EuG(t2tH8(UxG($BtG(t2%H8wRjH90jkG&40fG(j{nH8M3cG%+<dH8V6eG(t5&H8wOiG&M9tH8V6fG)6TxH8V6dH8C?YG&40cG(<HvG($BvH8C?bG&3_YG(|NvGcq+bG)6TwGcq(bG)6QsG(t2tG&eLvH8M3pG(s~qG&eOhG)6TvH8eFfG(t5pH8wRiG&MCbGcq+eG(|NsG&VFeG(t5wG(t2vG&wavH8(UjG(t5tGcz<fG(j{$G(t2qG&40dH8M3cG(j~sG($BtGc+?aH8V3ZG&wUhH90gjH90jjG(j~qG(|KrH9<8tG(t2)G&40bG(|HtG($8rG%++rG(t5&G(t2%H8wRjH8C|aGcz<ZG(t5&G(|KuGc+|fG(t5sG&wXuH8?aiGc+|eG(j~oG(j{nH8M3dH8C|bH8V9dG(<HvG($8vG%+(YGcq+dG&wagG&VFhGd49fGcq+cG&nRiG&D6fG)6TxG&3|pG(<EuH8C|bG&MCeH8eFiG(t5pH8(XlH8C|ZGcz<cG(|NsG&MCiH8V9fG&D3qG($8&G&wakG&M9tG%__dG(j{rG(j~qG%+(WG&40YG(j{(H9<5rH8V3cGcq$WH83<mG(j{sG&40eH8V9fG&eOeGcz?dG(s~oH8eCtG(|HtG&nUiG(<HtH8V6pG(t5tH8wRjH8C|aGcz<ZG(t5&G(|KvG&40fG(t5tG(t5&H8wOiG&M9tH8V9cG&wakG(j~sH8C|YH8V9dG(<HvG($BvG&wUgH8V9fG(s~pGcq+bG&eOhGcq(bG)6TtG&40fG(t5pG(s~nG(j~sG($8tG)6TvH8eFfG(t5pH8wRiG&MCbGcz<ZG(t5&G&nRhG(t5wG(t2sG(t2%H8(XjG&M9tG&D6aG(j{rG(j~tGcq$YG&40bG(<HqH90jmH8(RgGcq+nG&eLkH90jmH8(XhG($8)G($8tGc+|eG(s~oH8eCtG($8&G&eOhG(t2)G(t2vG($8&G&40fH90jkG&40bG(t5sGcq(ZG&wakGcz<qG(t5&H8?aiGc+|aH8V3ZG)6QwG($BvGcq$aG&40cG(<HvG($BvG)6NuGcq+bG(|NsG&nRjG&40dGcq+cG&nRiG&MCgH8nLdH8V6bG(|KrG($8tG)6TvH8eFfG(t5&G&D3eG(<HtGcz<ZG(|NsG&nRhG(t5wG(t2tG(<HrG&wXjG(<E+G%__dG(j{rG(j~qG%+(WG&40bG(j~sG(t5vG%+(YH8V9qG&eLkGc+|fH8(XiH8V6eG(|HtGcz?dG(s~nH8V6qG(j^pH8V9eG(s~pG&3|fG(<E-G&40fH8C|aGcz<YG(|NsG&D3cG&eOiGcz<pG(t5&H8wOiG&M9tH8V9cG&wakG(j~sG)6NvG&40cG(<HvG($8vG%+<YH8V9eG(|NvH90jmH8(XiGcq+cG&nRiG&D3eG&wajH9<8&G($8pH8C|bG&MCfH8eFcG($8sH90jkGc+_rG&D3aG(|NsG&VFeG(t5wG(t2rG&wXuG&nUjG)6TtG(t2&G(j{rG(j~tGcq$aG&D3aG(t2vH90jmGd43dGcq+nG&eLwG%_?bGd49jH8V6fG(j{rGc`0eG(s~nH8V6qG(j^pH8V9eG(s~qG&3|gG(t2*H8wRjH8C|bG&40fG&wavH90gkG&eOjG($5oG&wXuH8wRjG&3_ZG(t2+G(t5pH8C|cG)6NsG&40cG(<HvG($BvG&eLwG&40eG(s~pGcq+bG&eOhGcq+cG&nRiG(t5uG&wUiH8V9cG(|K)G(j{rG)6TvH8eFhG(t2*H8wRiG&M6bH8eCcG(t5&G&VFeG(t5tGcz<rH83<XG(t5sGcq$XG($8wG(j{rG(j~qG&40dH8eCbG(t5&G(t5uH90jlH8V3ZH83<mG($8tG&40dH8V6gG(|KqH9<8tG(s~oH8eCtG(|HtG&eOhG(t2*G(t5&G(t2sH8wRjH8C|bG&40cG&wavG&40gH8C|eH8V6fG(t5&H8wOiG&MCgGcq+YH83<XG($8uGcq(rG(t5rG(j~sH8wRgG&wXxH8V9fG&wakH8V6dH8(XiGcq(bG)6TtG&MCgG(t5tG&3|eG(j{)H8C|bG&MCeH8eFfG(t5&H8(XlG&wanG($8qG&wavG&VFeG(t5wG(t2rG&wXuG&nUjG)6TtH8V6qG(j{rG($BuG&waiH8V6fG(<E-H8(UjH90dhH8V9qG&eLkH90jmH8(XhG(t5vG(<BsGc+_dG(s~oH8eCtG(<EuH8V6eG(<HvH8eFfG(<E(G&40fH8C|aGcz<YH83<mG%+<aG&40fH8V6eG(t5&H8wOiG&M9tH8V6tH83<mG&nRiH8C|dH8V9dG(<HvG($BvH8C?bG&3_YG(t5pG&nRhH8(XiGcq(bG)6TtG&M9gG&eOdGcz?cG(|K;G(j{rG)6TwH8eFcG($8sH90jkGc+|dGcq+eG(|NsG&VFeG(t5tGcq+bG&wXuG&nRiG&M9tG&D6aG(j{rG(j~qG%+<bH8M3dG(t2*G($BtGc+|eH8V3ZH83<mG($8sGc+|dH8M3cG&wXmH90gkG(s~nH8V6qG(t2%G&eOhG(t2)G&D6qG(t5tH8wRjH8C|eH8V6tG&eLdG($8vH8V9gG($8+G)6TtH8wOiG&MCgH8eFbG(t5&H8V9eH8C|aH8V9dG(j~sH8wRgG&3_cG(s~nG(|K;H8V6eG)6TwGcq(bG)6QsH90jlG(t5uG&D3dG(<EuG(j{rG)6T!H9<8oG(t5&H8(XlG%+(YGcz<ZG&eLhG&VFeG(t5wG(t2rG(|KrG(t2rGcq(pG&3_YG(j{rG($BuG&waiH8V6fG(<E-H8(UjH8(RgGcq+nG&eLkGc+|fH8nLfG($5oG(t5wH9<5sG(t2)G&40bG(|HtH8M0cG(<HrG($5oG(t5tH8wRjH8C|bG&40cG(j{nH8nIfH8nLiH8V6eG(t5&H8wOiG&MCgH8eFbG(t5&G&nUjG)6Q=G(t5rG(<HvG($BvG)6NuGcq+bG(s~qH8(UkG)6TwGcq(bG)6TtG&MCgG(t5tG&3|eG(j{)H8C|bG&MCeH8eFhG($8&G&40eG&MCgGcq(qG&wavG&nRhG(t5wG(t2rG(j~%G($8uG&MChG&3|aG(j{$G(t2qG%+<cH8V9ZG(j^pG&D3fH90dhH8V9qG&eLkH90jkGd49fH8V6eG(j{$H90gkG(s~oH8eCtG(|HtH8M3eG)6TxG($B(G(j~%G(t5uH90jkG&40bH83<mG($8sH8(XjGcz<rG)6TtH8wOiG&eOeG(j~sG)6Q<G(t5uH8nLfH8V9dG(j~sH8wRgG&wXxH8V9dH83<mG&D3fGd49fGcq(bG)6QsGcq+cH8nLdH8eCtG(|K;G($8tG)6T!H9<8oG($8&G&3|cG&3|sG($8rG&wavG&VFeG(t5tGcz<pG&eOiG(j{qGcq$XG(t5qG(j{rG(j~qG%+<nG&D6hG(j{(H9<5rGcq$ZGcq+nG&eLkH90jmH8(XhG($8)G($8&Gc+|eG(s~oH8eCtG(<EuG&eOgG&3_ZG&40hG(<HvG&40fH8C|eH8eCfG($8pG&waiG&walG(j~nG(t5&H8wOiG&MCgG(j~sG&wakG&walGcq$YG&40cG(<HvG($BvG&eLwG&40eG&eLdH8nIhG&40dGcq(bG)6TtG&3|dG(t5tG&40bG(|K;H8C|bG&MCeH8eFeG(t2)H9<8uH90dgGcq+eG(|NsG&MCiH8V9fG&D3uG(|KrG&eLgGcq$XG&3|pG(j{rG(j~tGcq(qG($8)G(<EuG&D6eG(s~qGcq$WH83<mG(j{rG)6T!G($8*G)6QsH9<8tG(s~oH8eCtG(<EuH8M0cG(<HuG($B(G(<EuG&40fH8C|eH8V6tG&eLdG($8vG(<HvGcq+eG)6TtH8wOiG&eOeG(j~sG)6Q<G(t5uH8nLcH8V9dG(<HvG($8uH8(RgGcq+bG(t5tH8V6fG&40dGcq(bG)6TtG&MCgG(t5tG&3|eG(|K)G(j{rG)6TvH8eFhG(t2*H8wRiG&M6bH8eCdG(t5&G&VFeG(t5wG(t2rG(|KrG(t2tG(s~oH8V9cG(j{$G(t2qG%+<cH8V9ZG(j^pG&D3fH90dhH8V9qG&eLkH90jlG(t5tH8V9fG&eOiH9<8tG(t2)G&40bG(|HtH8M0cG(<HsH8eFfG(<EuG&40fH8C|bG&40cG&wavG&40gH8C|eH8V6eG(t5&H8wOiG&MCgG(j~sG&wakG&walGcq$aG&40cG(<HvG($BvG&eLwG&40eG(s~pGcq+bG)6TwGcq(cG(|K;Gc`0eG&MCgH9<8&G(|K)H8C|bG&MCeH8eFhG($8&G&40eG&MCgH8eCcG(t5&G&VFeG(t5tGcz<pG&eOiG(j{qGcq$XG($BxG(j{$G(t2qG%+<dH8V3ZG(j~%G($8vG%+(YH8V9qG&eLkH90jlG&eOhH8V6eG&eOhGcq(bG(s~oH8eCtG(|N*H8C|bG%++rG(t2rG(s~qH8wRjH8C|aGcz<ZG(|NwG(j{sGd49hG(t5vG)6TtH8wRjG&3_ZG(t2+G(t5pG(t5uH90dgG&40cG(<HvG($BvG)6NuGcq+bG(|NsH8nIfG)6TwGcq(bG)6TtG&M9gG&eOeG&D3dG(|K)H8C|bG&MCeH8eFhG($8tG($BsG&wXxG($8tG&wavG&VFeG(t5tH8V9iG(j{$G&wakG&M9tG&D6aG(j{$G(t2qG%+<cG($BwG(<HvH8(UkG%+<YH8V9qG&eLkGc+|fH8(XiH8V6eG(|NsH9<8tG(t2)G&40bG(|HtG&eOgG&40eH8eFfG(<HrG&40fH8C|aGcz<ZG(|NwG(j{sGd49gGcz<oG&wXuH8?aiGc+|aH8V3ZG)6QwH8M0cH8C?XG&40cG(<HvG($8vG%+(YGcq+dG&wakH8V6cG%+<bGcq+cG&nRiG(t5tG&3_ZH8V6fG(|KrG&eOhG)6TwH8eFdG(t5pH8wRiG&M6cGcz<ZG(t5&G&nRhG(t5wG(t2tG(<HrG&nUkG&MCgH8V3ZG(j{rG(j~qG%+<nG&D6hG(j~vH90gmG%+<YH8V3ZG&wUhH90glH8nLhG(j~pG(|KrH90gkG(s~oH8eCtG(|HtG&eOhG(t2)G($BpG(<E(G&40fH8C|aGcz<YG(|NsG&D3cG&eOiGcq+eG)6TtH8wOiG&eOeG(j~sG)6Q<G(j{rH8C|ZH8V9eG(t2%G&D6gH8C|eG&40dG(|NvH90jkGd49fGcq(bG)6QsH9<5rGcq+cG(t5qG($8&G&eOhG)6T!H9<8oG(s~qH8(UiG(<HyG($8qG(t5&G&VFeG(t5uH8e9aG(|KrG(j~sG)6TtH8V3ZG(j{rG(j~tGcq$YG&40bG(<HqH90jnG%+(YH8V3ZH83<mG($8sGc+|dH8M3cG&wXuGc+|eG(s~oH8eCtG($8&G&eOhG(t2)G(t2vG(t2*H8wRjH8C|bG&40cG(j{nH8nIgG%+<dG($5oG&wXuH8?aiGc+|aGcq+YH83<XG(j~tGcq(qG(t5rG(<HvG($8uH8(RgGcq+bG(t5tH8V6eG)6TwGcq(cG(|K;Gc`0fG&M6eH8eCiG(|K)H8C|bG&MCeH8eFiG(t5pH8(XlH8C|cGcq(qG&wavG&nRhG(t5wG(t2rG(j~%G(t5sGcq$XG($BxG(j{rG(j~tGcq$YGcz?fG(j~%G($BuG&MCcH8V3ZH83<mG(j{rG)6T!G($8)G&eOiH8nIgG(s~oH8eCtG(<EuG&eOgG&3_ZG&40pG(s~qH8wRjH8C|aGcz<ZG(t5pG($8tG&walG(t5tG(t5&H8?aiGc+|aH8V6eH83<mH8V9eG)6TtH8V9eG(t2%G&D6gH8C|eG&40dG&eLhH8V6eG)6TwGcq(bG)6TtG&MCgG(t5uG&D3sG(j{)G($8tG)6TvH8eFfG(t5tH8wRiG&MCjG($8qG(|NsG&VFeG(t5tGcz<oG(j~%G($BuG(<E+H8eCiG(j{$G(t2qG%+<dH8V3ZG(j~%G($8uGd43dGcq+nG&eLkGc+|fGcq+bH8V9eG(t5wGcz<cG(t2)G&40bG(|HtG($8rG%++qG($BtG(s~qH8wRjH90jkG&40aG&eLsH8nIgH8nLiG(t5uG(t5&H8wRjG&3_ZG(t2+G(t5pH8C|cG)6NsG&40cG(<HvG($BwG&eIgG(t5uG(t5&H8nIfGd49fGcq(cG(|K;Gc`0eG&MCgH9<8&G($8&H8C|bG&MCeH8eFhG(t5tG&40eG(<HsGcz<cG&wavG&VFeG(t5tGcq+fG)6QsH8(XjG&M9tG&3_YG(j{rG(j~qG%+<bH8M3dG(t2%H8(XjG&MCgH8V9qG&eLkH90jmG&40eH8V9eG(|NsGcz<cG(s~oH8eCtG)6Q*G&eOjH90jmH8V6dG(t2%H8wRjH90jkG&40fG(j{nH8M3cG%+<dG($8(G&wXuH8wOiG&M9tH8V6tH83<mG&nRiH8C?XG&40dG(t2%G&D6gG&wUhH8V9gG(|NsH8V6gG&eOhGcq(bG)6TtG&40fG(t5pG($8*G(|K;G(j{rG)6TwH8eFcG($8sH90jkGc+?ZGcz<cG&wavG&VFeG(t5wG(t2rG&wXuG&nUjG(t2)G($BpG(j{rG(j~tGcq(pG%__ZG(t5sH9<5rG(<HrH8V9qG&eLkGc+|fH8(XiH8V6fG($8tGc+_dG(t2)G&40bG(|HtG(t2tH8(UwG&D6qG(t5pH8wRjH8C|bG&40fG&wavH90gkG&eOjG($5oG&wXuH8wOiG&MCgGcq+YH83<bG(j{sGc+|bH8V9dG(<HvG($8vG%+<aGcq+bG(|NvH90jkH8(XiGcq(bG)6TtG&3|dG(t5tG&40bG(|K;G&eOhG)6TvH8eFhG($8tG($BsG(s~rH8eCbG&eLhG&VFeG(t5wG(t2rG&wXuG&nRjG&M6aGcq$WG(j{rG(j~tH90jjH8e9aG(j^pG&D3fH90dhH8V9qG&eLkGc+|fH8C|gH8eCrG(t5wGcz<cG(s~oH8eCtG(|N*G&nUiG(<HsH8V9qG(t5tH8wRjH90jkG&40fG(j{nH8M3gH8C|eG(j~pG)6TtH8wOiG&M9tH8V6tH83<mG&nRiH8C?XG&40cG(j~sH8wRgG(t2*G&40cG(|K;G(|KwH8(XiGcq+cG&nRiG&40eG&wakG&D3hG(|KvG($8tG)6TvH8eFhG($8tG($BsG(t2)G&D3eG(t5&G&VFeG(t5wG($5oG(j{$G($BuG&3|rG&3_YG(j{rG(j~qG%+<aH8V9cG(j~%G&40gG&wakH8V9qG&eLkH90jmG&40eH8V9eG(|NsGcz?dG(t2)G&40bG(|N*G&eLfG&3_aG&3|gG(<HrG&40fH8C|bG&40cG&wajGcq(dG&MChG($8(G&wXuH8?aiGc+|aH8eFbG(t5&G(t2tH8nLcH8V9dG(<HvG($BvG)6Q<G&40fG&wUhH8(UkG)6TwGcq+cG&nRiG&D3eG&wUeH8eCiG($8&H8C|bG&MCeH8eFeG(t2)H9<8uH90gyG&D3eG(t5&G&VFeG(t5wG(t2rG&wXuG&nRjG&M6aGcz?YG(j{rG(j~qG%+<bH8M3dG(t2%H8wRkG&wagH8V9qG&eLkH90jkGd49fH8V6eG(j{$Gcq(bG(t2)G&40bG(|HtG(j{qG)6TyH8V6hG(t2%H8wRjH8C|eH8V6tG&eLkGc+_bG&wakH8M3bG)6TtH8wOiG&M9tH8V9cG&wakG($8tG)6Q;G(t5rG(<HvG($BvG)6Q<G&40eH83<mG&nRiG)6TwGcq(cG(|NrGcq+dG&wagG&D3hG(<EuG($8tG)6TwH8eFcG($8&G($BwG%++qG&D3dG&eLhG&VFeG(t5wG(t2rG&wXuG&nUjG(t2)G($BpG(j{$G(t2qG%+(WG&D3rG(t5tG&D6eG(<HvH8V9qG&eLkH90jlG(t5tH8V6gG)6NuGcz?dG(t2)G&40bG(|HtG($8rG%++pG&D6iG(<E-G&40fH8C|aGcz<ZG(|NwG(j{sGd49hH8V6gG)6TtH8?aiGc+|aH8V3ZG)6QwG($BvGcq$ZG&40cG(<HvG($8uGd43eH8V9hG(t5&H8V6fG&40dGcq+cG&nRiG&D6fG)6TxG&40fG(<EuG(j{rG)6TvH8eFhG(t5tG&40eG(<BqGcq(qG(|NsG&VFeG(t5uH8M3bG)6TtG&wXjG&eOeH8V3ZG(j{$G(t2qG%+<aH8eFaG(t5sH90jmGd43dGcq$WG&wUhH90glH8nLhG(j~qG(t2%H90gkG(s~oH8eCtG(|HtG&eOhG(t2*G(t5&G(t5tH8wRjH90jkG&40bG(|NsH8wRkH8V9fGcz<pG(t5&H8wOiG&eOeG(j~sG)6Q<G(t5uH8nLfH8V9dG(j~sH8wRgG(t2*G&40cH83<mG&VFfGd49fGcq(bG)6QsGcq(aGc+|eH8V6uG(|KrG($8tG)6TvH8eFfG(t5tH8wRiG&MCjG($8qG(t5&G&VFeG(t5wG($5oG(j{$G($BuG&eOeGcz<fG(j{rG(j~tGcq$YG&40bG(<HqH90jnG%+(YH8V9qG&eLkGc+|fGcq+bH8V9iG(t2vGcq+cG(s~oH8eCtG(|N*H8C|bG%++rG(t2%G(t5tH8wRjH8C|bG&40fG&wavH90gkG(<HwH8V6gG)6TtH8?aiGc+|aH8eFbG(t5&G($BvGcq(rG(t5rG(<HvG($BvG)6NuGcq+bG(|NsH8nIgG&eOhGcq(bG)6QsH90jlG(t5uG&D3dG(<EuG($8tG)6TvH8eFhG(t5tG&40eG(<HsGcz<cG&wavG&MCiH8V9fG&D3uG(|KrG&eLhG&eOeG(s~nG(j{rG(j~qG%+(WG%__cG(t5oH9<5rGcq$ZGcq+nG&eLkH90jlG)6T!G(j~oG)6QsH9<8tG(s~oH8eCtG(|HtG&eOhG(t2*G(t5&G(t5tH8wRjH8C|eH8V6tG&eLkGc+_bG&walG(j~nG(t5&H8wOiG&MCgH8eFbG(t5&G&nUjH8C|YH8V9dG(<HvG($8uGd43eH8V9gG&eLdH8V6gG)6TwGcq(bG)6TtG&40fG(t5pG(s~nG(j~oG&eOhG)6TvH8eFhG($8tGc`0dGcq(pG($8sG(t5&G&VFeG(t5wG(t2vG&wavH8(UhGcq(pG&D6aG(j{rG(j~qG%+<aH8V9dG(t2rH9<5sG&MCgH8V3ZH83<mG(j{rG&MCrG($8(G(|NsH8C|dG(s~oH8eCtG(s~qG(|KwH90jwGcz?gG(<E(G&40fH8C|bG&40bG&eLwG%_?dH90jmG(j~nG(t5&H8wOiG&MCgH8V6qG&wakG(t2tGcq(pG(t5sG(t2%G&D6hG&wXxGcq+eG(|K;H8V6fGd49fGcq+cG&nRiG&D6fG)6TyG&D6aG($8pH8C|bG&MCjH9<8oG(t5pG(<EwG%++qG&D3dG&wavG&VFeG(t5wG(t2vG&wavH8(UhGcq(pG&D6aG(j{rG(j~qG&40dH8eCbG(t5&G(t5uH90jlH8V9qG&eLkGc+|dH8(XiH8V6gG(<HrGc+|eG(t2)G&40bG(|N*H8V9gH90jgH8V6gG(<EuG&40fH90jkG&40fG(j{nH8M3gH8C|eG($5oG&wXuH8wOiG&M9tH8V6tH83<mG&nRiH8C|eH8V9eG(t2%G&D6gH8C?ZGcq+cG(t5pG&nRiG&eOhGcq(bG)6TtG&40fG(t5pG(s~nG(|K;G($8tG)6TvH8eFfG(s~qH8(UiG(t2*G($8qG(|NsG&VFeG(t5tGcq+fG)6QsG(<HuGcq+dG&3|aG(j{rG(j~tGcq$YG&40bG(<HqH9<5rG(<HrH8V9qG&eLkGc+|eG&40dH8V9hG(|KqGcq+cG(s~oH8eCtG($8&G&eOhG(t2)G(t2vG(s~qH8wRjH90jkG&40fG&wakG&VFiH8C|eG(t5sG&wXuH8wOiG&MCgG(j~sG&wakG&walGcq(pG(t5rG(<HvG($8uGd43eH8V9hG(t5&H8V6cG%+<bGcq(bG)6QsH9<8tG)6NrGcz<bG(|KrG($8tG)6TvH8eFhG($8&G&40eG&MCgGcq(qG(t5&G&VFeG(t5uH8M3bG)6TtG&wXjG&3|rGcq(YG(j{rG(j~qG%+(WG&40bG(j~sG(t5vG%+(YH8V3ZH83<mG(j{sH8(XhG(t2rG(|NsGcz?dG(s~oH8eCtG(<EuH8M0cG(<HuG($B(G(t5&H8wRjH8C|bG&40bG&eLwG%+<eG&MChG($5oG&wXuH8wOiG&eOeG(j~sG)6Q<G(j{rG&wUeG&40cG(<HvG($BvG)6NuGcq+bG(|NsH8nIgG)6TwGcq+cG&nRiG&M9eGc+|eG(j~oG(<EuG&eOhG)6T!H9<8oG(t5&H8(XlG%+(YGcz<YG&eLhG&VFeG(t5wG(t2vG&wavH8(XkG&M6aH9<8tG(j{$G(t2qG%+(WG&D3rG(t5sH90jmGd43dGcq+nG&eLkH90jmH8(XhG(t5vG(<BrH90gkG(t2)G&40bG(|HtG($8rG%++rG(t5wG(s~qH8wRjH8C|aGcz<ZG(|NwG(j{sGd49hG(t5sG&wXuH8?aiGc+|aH8V9cG(t5tG(t2tGcq$YG&40cG(<HvG($BvG)6NuGcq+bG(|NsH8nIfGd49fGcq(cG(|K;Gc`0eG&MCgH9<8&G($8&H8C|bG&MCeH8eFiG(t5pH8(XlH8C|cGcq(qG&wavG&VFeG(t5tGcz<pG&eOiG&wXjG(<E+H8V9cG(j{rG(j~tGcq(pG(t5vG(t5tG&D3gG%+<cH8V9qG&eLkH90jlG&eOhH8V6eG&eOiH9<5sG(s~oH8eCtG(|HtH8M3eG)6TxH8M3eG(<E(G&40fH8C|bG&40bG&eLwG%+<aG&eOjG(j~pG)6TtH8wOiG&eOeG(j~sG)6Q<G(t5tG)6NrG&40dG(t2%G&D6hG&eLwG&40dG&eLdH8M3cG(t5sGcq(bG)6TtG&MCgG(t5tG&3|eG(|K;G(j{rG)6TvH8eFfG(t5pG(t2rGc+_sG&D3aG(|NsG&nRhG(t5wG(t2vG(t5&G(t5tG&M9tH8V9cG(j{rG($BuG&waiH8eFhG(j^pG&D3fH90jlH8V9qG&eLkGc+|fH8(XiH8V6fG(t5&Gcq(bG(s~oH8eCtG(<EuG(t2tH90jhG($B(G(<E(G&40fH90jkG&40bG(|NsH8wRgG&40eGcz<rG)6TtH8wOiG&MCgH8V6qG&wakG(t2tH8nLdH8V9dG(<HvG($BvG)6Q<G&40eH83<mG&nRhH8(XiGcq(bG)6QsGcq(bG(<BpH9<8pG(<EuG&eOhG)6TwH8eFcG($8sH90jkGc+_rG&D3aG(|NsG&MCiH8V9fG&D3qG($8&G&wajGcq$XG(t5qG(j{rG(j~qG%+<nG&D6hG(j~vH9<5rGc+?aH8V9qG&eLkGc+|dH8(XiH8V9fG(|HtGc+_dG(s~oH8eCtG(<EuG&eOgG&3_ZG&40hG(<E(G&40fH90jkG&40bG(|NsH8wRkH8V9fGcz<rG)6TtH8wOiG&M9tG(t2pG&wavG($8uH8nLgH8V9eG(t2%G&D6hG&eLwG&40dG(|NsH8nIfH8(XiGcq(cG(|NrGcq+dG&eIgG(j~%G($8&G($8tG)6T!H9<8oG(t5&H8(XlG%+(YGcz<cG&wavG&VFeG(t5tGcz<rH83<XG(t5tG&M9tGcq+ZG(j{$G(t2qG&40dH8V6cG(<E-G($BtH8nLhH8V9qG&eLkH90jkGd49fH8V6eG(j{$H9<8tG(t2)G&40bG(|HtG($8rG%++rG(t5wG(t5&H8wRjH8C|bG&40cG(j{nH8nIgG%+<dG($5oG&wXuH8wRjG&3_ZG(t5uG)6QwG&nUjG)6NuG&40cG(<HvG($BvH8C_rH8V3ZG(|NvH90giG(t5sGcq+cG&nRiG&M9fG(<BpGcq+ZG(|K;G(j{rG)6TvH8eFhG(t5tG&40eG(<HvGcq(qG(t5&G&VFeG(t5tGcz<rH83<XG(t5sGcq$XG(t5qG(j{rG(j~tGcq$YG&40YG($8&H8(UjG&wUgH8V9qG&eLkH90jkGd49fH8V6eG(j{$Gcz<cG(s~oH8eCtG(|N*G&nUiG(<HtH8V6pG(s~qH8wRjH8C|aGcz<YG(|NsG&D3cG&eOiGcz<rG)6TtH8?aiGc+|aH8V6eH83<mH8V9eG)6NvG&40dG(t2%G&D6gH8C?ZGcq+cG(t5pG&VFhG&40dGcq(bG)6TtG&3|dG(t5tG&40bG(|K)G(j{rG)6TvH8eFfG(s~qH8(UiG(t2*G($8rG(|NsG&VFeG(t5uH8e9aG(|KrG(t2sG&eOeH8eFbG(j{$G(t2qG%+<cG($BwG(<HvH8(UjH90dhH8V9qG&eLwG%_?bGd49jH8V6fG(j{rGcz?dG(t2)G&40bG(|HtG&eOgG&40dG($B(G(<E(G&40fH8C|aGcz<YH83<mG&D3dG(t5tGcz<oG&wXuH8?aiGc+|aH8V3ZG)6QwG($BvGc+?YG&40cG(<HvG($8uGd43eH8V9hG(t5&H8V6cG%+<bGcq(bG)6TtG&MCgG(t5uG&D3sG(|K;G(j{rG)6TwH8eFcG($8sH90jkGc+|dGcq+eG&wavG&VFeG(t5tGcq+bG&wXuG&nRiG&M9tG%__dG(j{rG(j~qG%+<bH8M3dG(t2*G($BuG&M6cH8V9qG&eLkGc+|dH8(XiH8V9fG(|HtGc+|eG(t2)G&40bG(|HtG(j{qG(<H)Gcz+XG(t2*H8wRjH90jkG&40bG(|NsH8(UgG(<HvH8M3bG)6TtH8wOiG&M9tH8V3ZG&wavG&nRiG&wahH8V9dG(j~sH8wRgG(t2*G&40cH83<mG&VFfH8(XiGcq(bG)6TtG(t5tG)6NsG&40fG(|K;G&eOhG)6TwH8eFcG($8sH90jkGc+?ZGcz<YG(t5&G&VFeG(t5wG($5oG(j{$G($8tG)6TtG(j~sG(j{$G(t2qG&40dH8V6cG(<E-G($BtH8nLdH8V9qG&eLkGc+|fH8(XiH8V6fG($8tGc+_dG(s~oH8eCtG(<EuG(j{rG(t2)G&D6qG(t5tH8wRjH8C|bG&40aG&eLhG&40cG%+<bGcz<rG)6TtH8wOiG&MCgH8eFbG(t5&G&nUjG)6Q=G(t5rG(<HvG($BwG&eIgG(t5uG(|K;H8nIhG&40dGcq+cG&nRiG&M9fG(<BpGcz<bG(|KrG(j{rG)6TvH8eFhG(t2*H8wRiG&M6bGcq(qG&wavG&MCiH8V9fG&D3tG(<HrG&nRiG&M9tG(t2&G(j{rG($BuG&waiH8V6fG(<ExH9<5rGc+|aH8V9qG&eLkGc+|dH8(XiH8V6gG(|KqGcz<cG(s~oH8eCtG(<EuH8M0cG(<HuH8V6hG(<EuG&40fH8C|aGcz<YH83<mG&D3dG(t5uG(t5uG(t5&H8?aiGc+|aH8V3ZG)6QwH8M0cG)6Q;G(t5rG(<HvG($8vG%+<YH8V9eG(t5pG&nRiG)6TwGcq(bG)6TtG&MChG(t5pG($BxG(|K)H8C|bG&MCeH8eFfG(s~qH8(UiG(<E-G&D3bG(|NsG&MCiH8V9fG&D3uG(|KrG&VIhG&M6bG(t5qG(j{$G(t2qG%+<dH8V3ZG(j~%G($8uGd43dGcq+nG&eLkGc+|fH8C|gH8eCvG(t2vGcq+cG(s~oH8eCtG(|HtH8M3eG)6TyH8eFgG(t5tH8wRjH8C|eH8V6tG&eLdG($8vG(<HwG(j~nG(t5&H8wOiG&M9tH8V9cG&wakG($8uH8nLeH8V9dG(<HvG($BvG)6NuGcq+bG(|NsH8nIfG&eOhGcq(bG)6TtG&3|dG(s~nGcq(rG(|K;G(j{rG)6TvH8eFhG($8tGc`0dGcq(pG($8tG&wavG&MCiH8V9fG&D3uG(|KrG&VIhG&M6bG(t5qG(j{rG(j~tGcq(qG($8)G(t5&H8(XiG(<HrH8V3ZH83<mG($8sGc+|dH8M3bG(t2%Gc`0eG(t2)G&40bG(|HtH8V6eG(<HuH8V6hG(<EuG&40fH8C|bG&40bG&eLwG%+<eG&MChG(j~oG(t5&H8wOiG&M9tH8V9cG&wakG(j~sG)6NvG&40dG(t2%G&D6hG&eLwG&40dG(|NsH8nIfGd49fGcq(bG)6TtG&MCgG&wUeG($BtG(|KvG&eOhG)6T!H9<8oG(s~qH8(UiG(<HtGcq(qG&wavG&VFeG(t5uH8M3bG)6TtG&wXjG&3|rG($BpG(j{rG(j~tGcq(pG(t5vG(t5tG&D6eG(<HrH8V9qG&eLkGc+|fH8(XiH8V6eG(|NsGcz?dG(s~oH8eCtG(|HtG&eOhG(t2)G($BuG(s~qH8wRjH8C|bG&40bG(j{nH8nIfG)6TyH8V6fG(t5&H8wOiG&MCgG(j~sG&wakG&walGcq(pG(t5sG(t2%G&D6hG&wXxGcq+nG(s~pH90jjG%+<bGcq(bG)6QsH90jlG(t5uG&D3dG($8&H8C|bG&MCeH8eFhG($8&H8wRiG(t2)G($8tG(|NsG&nRhG(t5wG(t2rG(j~%G($8uG&MChG&40bG(j{$G(t2qG%+<dH8V3ZG(j~%G($8vG%+(YH8V3ZG&wUhH90glH90joG($8-G(|KqGcq+cG(s~oH8eCtG)6Q*G&eOjH90jmH8V6pG(t5tH8wRjH90jkG&40cG&wUhG(j{rG&40fG(t5uG(t5&H8wOiG&MCgH8eFbG(t5&G&nUjG)6NvG&40cG(<HvG($BvH8C?bG&3_YG(|NvGcq+bGd49fGcq(bG)6TtG(t5tG)6NsG&3|pG(t2sG(j{rG)6TvH8eFhG($8tG($BsG(t2)G&D3eG(|NsG&MCiH8V9fG&40hG(j{$G&wajGcq$WGcq$WG(j{rG(j~tGcq$YG&40bG(<HqH90jmH8(RgGcq+nG&eLkGc+|eG&40dH8V9hG(<BsGc+|eG(s~oH8eCtG(|N*H8C|bG%++rG(t2%G(t5&H8wRjH90jkG&40fG&wakG&VFiG(t5uH8V9hG)6TtH8?aiGc+|aH8V3ZG)6QwG(t2tGcq+YH8V9dG(<HvG($BvG)6Q<G&40eG&eLwH90giG%+<bGcq+cG&nRiG&D6fG)6TxG&3|pG(<EuG(j{rG)6TwH8eFdG(t5pH8wRiG&M6cGcz<ZG(t5&G&MCiH8V9fG&D3uG(|KrG&eLhG&M9tG%__dG(j{rG(j~qG%+(WG%__cG(t5oH9<5rGc+?aH8V3ZG&wUhH90glH8nLhG(j~qG(t2%H9<5sG(s~oH8eCtG(<EuG&eOgG&3_ZG&40hG($8&G&40fH8C|aGcz<YG&eLhG&D3cG(<HwG(t5tG(t5&H8wOiG&M9tG&D6aG&wakG(|KtG&M9tG(t5rG(<HvG($BvG&wUgH8V9eG&eLdH8nIgG&eOhGcq(bG)6TtG(t5tG)6NsG&40fG(|K;H8C|bG&MCjH9<8oG(s~qH8(UiG(<HyG($8qG&eLhG&VFeG(t5uH8M3bG)6TtG&wXjG&eOeH8V6qG(j{rG(j~qG%+<aH8V9dG(t2rH9<5rGcq$ZGcq+nG&eLkH90jmH8(XhG(t5vG(<BrH90gkG(s~oH8eCtG(|N*H8C|bG%++rG(t2%G(t5tH8wRjH8C|bG&40cG(j{nH8nIgG%+<dG($5oG&wXuH8wOiG&MCgH8V3ZG)6Q*G($BvGcq$aG&40cG(<HvG($BvG)6NuGcq+bG(|NsH8nIgG&eOhGcq(cG(|K;Gc`0fG&M6eH8eCiG(|KvG&eOhG)6TvH8eFhG($8tG($BsG&wXxG&D3bG&wavG&VFeG(t5wG(t2rG(|KrG(t2rGcq(pG($BpG(j{rG(j~qG%+<bH8M3dG(t2%H8wRkG&eIfGcq$WH83<mG(j{rG)6T!G($8+H83<XH90jlG(s~oH8eCtG(|HtH8M3eG)6TxH8M3eG(t5tH8wRjH8C|bG&40cG&wavG&D3cG(t5uG(j~oG(t5&H8wOiG&MCcG($BtG&eOtH8V9eG)6NtG&40dG(t2%G&D6gH8C|eG&40dG&eLhG(|KxG)6TwGcq(bG)6TtG&M9gG&eOeGcq+dG(|K)G(j{rG)6TvH8eFfG(t5tH8wRiG&MCeGcz<ZG(t5&G&nRhG(t5wG(j~qG(<HrH8C|dG&M9tH8eCiG(j{$G(t2qG%+<dH8V3ZG(j~%G($BtGc+|eH8V9qG&eLkH90jmG&40eH8V9iG(|KqGcz<cG(s~nH8V6qG(j~%H8M3fH90jwGcz?oG(t5pH8wRjH90jkG&40fG&wakG&VFiH8C|eH8V6dG&wXuH8wOiG&M9tG&D6aG&wakG(|KtG&eOhH8V9dG(<HvG($BvG)6Q<G&40eH83<mG&nRhH8(XiGcq+cG&nRiG(t5uG&wUiH8V6fG(|K)G&eOhG)6TvH8eFhG($8&G&40eG&MCdH8eCdG&wavG&VFeG(t5tGcq+bG&wXuG&nRiG&M9tG&D6aG(j{rG(j~qG%+(WG%__cG(t2*G($BuG&MCcH8V9qG&eLkGc+|fH8(XiH8V6eG(|HtGcz?dG(t2)G&40bG(|N*H8M0bG&40fH8V9qG($8&G&40fH8C|aGcz<YG&eLhG&40gH8V9gG(j~oG(t5&H8wOiG&M9tH8V9cG&wakG(j~sG)6NvG&40dG(t2%G&D6gG)6NvH8V9gG(s~pH90jnG)6TwGcq+cG&nRiG&D3eG&wUeH8eCiG($8&H8C|bG&MCeH8eFfG(t5pH8wRiG&MCbGcz<YG&wavG&VFeG(t5tGcz<rH83<XG(t5tG&M9tH8eCiG(j{rG(j~tGcq$YG&40bG(<HqH90jmH8(RgGcq+nG&eLsGc+_cH90jwG($8-G(|KrH90gkG(s~nH8V6qG(j^pG&nRjH90jgH8V6pG(t2*H8wRjH8C|bG&40fG&wavH90gkG(<HwH8V6eG(t5&H8?aiGc+|aGcq+YG)6NuG&nUjH8C|YH8V9dG(<HvG($8vG%+<aGcq+bG&eLhH8nIgG&eOhGcq(bG)6QsH9<5sG(t5tG&3|pG($8&G($8tG)6TvH8eFfG($8&G&3|cH8nLdGcz<aG(|NsG&nRhG(t5wG(t2sG(t2%H8(XjG&M9tG%__dG(j{$G(t2qG%+<cH8V6uG(j~nH90jmG&wUgH8V9qG&eLkH90jkGd49fH8V6eG(j{$H90jlG(s~oH8eCtG(|HtH8M3eG)6TyH8eFgG(t5pH8wRjH90jkG&40cG&wUhG(j{rG&wakGcz<oG&wXuH8wOiG&MCgG(j~nH83<XG&nUjG)6NtG&40cG(<HvG($BvH8C_rH8V3ZG(|NvH90giG&40dGcq(bG)6TtG&MChG(t5pG($BxG(t2oG&eOhG)6TvH8eFhG($8&H8wRiG(<E+G&3|tG&wavG&VFeG(t5wG($5oG(j{$G($BuG&eOeGcq+ZG(j{rG($BuG&waiH8V6fG(<ExH90jmH8(RgGcq+nG&eLkGc+|fGcq+bH8V9iG(j~rH9<8tG(s~nH8V6qG(j^pG(|KtG%++pG(t2vG(s~qH8wRjH8C|aGcz<YH83<mG%+<eH8V9fGcz<qG(t5&H8?aiGc+|aH8eFbG(t5&G(t2tGc+|ZH8V9dG(<HvG($BvG&wUgH8V9eG&eLdH8nIfG&eOhGcq(bG)6TtG&3|dG(t5tG&40bG(|K;G(j{rG)6TvH8eFiG(t5pH8(XlH8C|cGcq(qG(|NsG&nRhG(t5wG(t2uH83<XG(j~tG&MCgH8eFbG(j{rG(j~qG%+(WG&40YG(j{(H9<5rGc+|eH8V3ZH83<mG(j{qH90jkH8eCtG($8&Gcz?dG(s~oH8eCtG(|N*G&nUiG(<HsH8V9eG(j~sG(t5uH8C|aGcz<YG&eLhG&D3cG(<HvGcz<qG(t5&H8wOiG&M9tH8V3ZG&wavG&nRiH8C?ZG&40cG(<HvG($8vG%+<dG&40eG(|NvH90jlG)6TwGcq(bG)6TtG&MCgG(t5tG&3|eG(|K;G(j{rG)6TwH8eFcG($8&G($BwG%++qG&D3dG&eLhG&VFeG(t5wG(t2rG&wXuG&nUjG(t2)G($BpG(j{rG(j~tGcq(pG%__ZG(t5sH9<5rG(<HrH8V3ZG&wUhH90glH8nLhG(j~oG(j{$G(|KvG(s~oH8eCtG($8&H8V9gH90jwGcz?gG(<E(G&40fH8C|bG&40bG&eLwG%+<aG&eOhGcz<pG(t5&H8wOiG&M9tH8V9cG&wakG(j~tGc+?YG&40cG(<HvG($8tG(<BtG(t5tG&wakH8V6eG&eOhGcq+cG&nRiG&D6fG)6TyG&D6aG($8pH8C|bG&MCeH8eFhG($8tG($BsG&wXxG&D3bG&wavG&VFeG(t5uH8M3bG)6TtG&wXjG&eOeH8eFbG(j{rG(j~tH90jjH8e9aG(<ExH90jmG&wakH8V3ZH83<mG(j{rG)6T!G($8+H83<WGcq(bG(s~oH8eCtG(<EuH8M0cG(<HuH8V6hG(<HrG&40fH90jkG&40fG&wakG&VFiH8C|eG($8)G(t5&H8wOiG&MCgH8eFbG(t5&G&nUjG)6Q=G(t5sG(t2%G&D6gH8C|eG&40dG(|NvH90jlG)6TwGcq(bG)6QsGcq(bG(<BqG&3|aG(|KrG(j{rG)6TwH8eFcG($8sH90jkGc+?ZGcz<YG(t5&G&VFeG(t5wG(t2vG)6QsH8(XkG&MCgG&D3sG(j{$G(t2qG%+<nG&40gG(t2%G&D6fG&MCcH8V9qG&eLkGc+|eG&40dH8V9gG($8tGc+_dG(s~oH8eCtG(<EuH8M0cG(<HuG($B(G($8&G&40fH8C|aGcz<YG(|NsG&D3cG&eOjG(j~nG(t5&H8wOiG&MCgG(j~nH83<mH8V9eH8C|eH8V9dG(<HvG($BvG)6NuGcq+bG(|NsG&nRjG&40dGcq+cG&nRiG&MCgH8nLdH8V6uG(|KrH8C|bG&MCjH9<8pG(t5pG(t5uG&wUhGcz<aG(|NsG&VFeG(t5tGcq+bG&wXuG&nRiG&M9tG%__dG(j{rG(j~tGcq(qG($8)G(t5&H8(XiG(<HrH8V9qG&eLkGc+|fH8C|gH8eCvG(t2vGcq+cG(s~oH8eCtG($8&G&eOhG(t2)G(t2vG(s~qH8wRjH8C|bG&40cG&wavG&40gH8C|eH8V6fG(t5&H8wOiG&M9tH8V9cG&wakG($8tG)6Q;G(t5sG(t2%G&D6gG)6NvH8V9gG&wagG&VFiG&eOhGcq(bG)6QsH9<5rGcq+cG(t5qG(<EuG&eOhG)6T!H9<8oG(t5&H8(XlG%+(YGcz<YG(|NsG&VFeG(t5wG(t2rG&wXuG&nUjG(t2)G($BpG(j{rG(j~qG%+(WG&40bG(<HvG($BuG&MCcH8V3ZG&wUhH90glH8nLhG(j~pG(|KqGcq(bG(s~oH8eCtG(|HtG&eOhG(t2*G(t5&G(t2*H8wRjH8C|bG&40bG&eLwG%+<eG&MChG($5oG&wXuH8?aiGc+|aGcq+YH83<XG(j~tGcq(qG(t5rG(<HvG($8uGd43eH8V9gG&eLdH8nIhGd49fGcq+cG&nRiG&D6fG)6TxG&40fG(<EuH8C|bG&MCeH8eFfG($8&G&3|cH8nLdGcz<ZG(|NsG&VFeG(t5tGcz<qG(<HrG(j~tG&MCgGcz<fG(j{$G(t2qG%+<aH8eFaG(s~qG($BtG(<HvH8V3ZG&wUhH90glH8nLhG(j~pG(|KrH90gkG(s~oH8eCtG)6Q*G&eOjH90jmH8V6pG(t5tH8wRjH8C|bG&40cG&wavG&40gH8C|eH8V6eG(t5&H8wOiG&eOeG(j~sG)6Q*G&nRiH8C?ZG&40cG(<HvG($8uH90gzH8V3ZG(|K;H8nIfG&eOhGcq(bG)6TtG&MChG(t5pG($BxG(j~oG($8tG)6TvH8eFfG(s~qH8(UiG(t2*G($8qG&eLhG&VFeG(t5wG($5oG(j{$G($BuG&eOeH8eFbG(j{$G(t2qG%+<nG&40gG(t2vH9<5rG(<HrH8V9qG&eLkGc+|dH8(XiH8V6gG(<HrGcq(bG(t2)G&40bG(|HtG&eOgG&40eH8eFfG(<E(G&40fH8C|bG&40bG(j{nH8nIfG)6TwGcz+XG&wXuH8wOiG&MCgG(j~nH83<mH8V9eH8C?ZG&40cG(<HvG($BvG)6NuGcq+bG(|NsG&nRjG&40dGcq(bG)6QsH9<8tG)6NrGcz<bG(<EuG($8tG)6TvH8eFhG($8&G&40eG&MCgGcq(qG(t5&G&nRhG(t5wG(t2uH83<XG&wXjG(<E+G&3_YG(j{rG(j~qG%+(WG%__cG(t5pG&D6eGc+?aH8V9qG&eLkGc+|fH8C|gH8eCvG(t2vGcz<cG(s~oH8eCtG(<EuG(t2tH8(UxG($BtG(t2%H8wRjH8C|eH8V6tG&eLdG($8vG(<HwG($8+G)6TtH8wOiG&M9tH8V6fG)6TxH8V6dH8C?YG&40cG(<HvG($BvH8C?bG&3_YG(|NvGcq+cG&eOhGcq(cG(|K;Gc`0eG&MCgGcz?cG($8pG($8tG)6TvH8eFfG(t5pH8wRiG&MCbGcz<YG(t5&G&VFeG(t5uH8e9aG(|KrG(t2sG&eOeG(s~nG(j{$G(t2qG&40dH8V6cG(<E-G($BtH8nLhH8V3ZH83<mG(j{qH90jkH8eCsG)6QsGcq+cG(s~nH8V6qG(j^pH8V9eG(s~pGcz?oG(j~%G(t5uH8C|aGcz<ZG(t5&G(|KuGc+|fG(t5sG&wXuH8wRjG&3_YGcz?bH83<mH8V9eG)6NvG&40cG(<HvG($8uH8(RgGcq+bG(t5tH8V6eG&eOhGcq+cG&nRiG&D6fG)6TxG&40fG(<EuG&eOhG)6TvH8eFhG($8&G&40eG&MCgGcq(qG&eLhG&nRhG(t5wG(j~qG(<HrH8C|cGcq$XH8V9cG(j{rG(j~qG%+(WG&40YG(j{(H9<5rH8V3cGcq$WH83<mG(j{sG&40eH8V9fG&eOeGcz?dG(s~oH8eCtG(|N*G&nUiG(<HsH8V9qG(t5&H8wRjH8C|bG&40bG&eLwG%+<aG&eOjG(j~pG)6TtH8wOiG&M9tH8V9cG&wakG(j~sH8C|ZH8V9dG(<HvG($BvG&wUgH8V9fG(s~pGcq+cG&eOhGcq(bG)6TtG&MCgG(t5tG&3|eG(j{)H8C|bG&MCjH9<8oG($8&G&3|cG(<HsGcz<aG(t5&G&nRhG(t5wG(j~qG(<HrH8nIhG&MChG&40bG(j{rG(j~tGcq$YG&40bG(<HqH90jmH90dhH8V9qG&eLkGc+|fGcq+bH8V9eG(t5wGcz<cG(t2)G&40bG(|N*H8M0bG&40fH8V9iG($8&G&40fH8C|bG&40bG(j{nH8nIfH8nLiH8V6gG)6TtH8wRjG&3_ZG(t5uG)6QwH8V9eH8C|oG&40cG(<HvG($BvG)6NuGcq+bG(|NsG&nRjG&40dGcq+cG&nRiG&MCgH8nLdH8V6bG(|KrG($8tG)6TvH8eFfG(t5&G&D3eG&M6cGcq(qG&wavG&nRhG(t5wG(t2tG(<HrG&wXjG(<E+G%__dG(j{rG(j~tGcq(qG($8)G(<EuG&D6eG(s~qGcq+nG&eLkGc+|fH8C|gH8eCrG(t5wGcz<cG(t2)G&40bG(|HtG(j{qG)6TyH8V6hG(t2%H8wRjH90jkG&40bG(|NsH8wRgG&40eGcz<pG(t5&H8wOiG&M9tG(t2pG&wavH8C|cG&wahH8V9dG(<HvG($BvG&wUgH8V9fG(s~pGcq+dG&40dGcq+cG&nRiG&D3eG&wajH9<8&G($8&H8C|bG&MCeH8eFfG(t5pG(t2rG(t2*G(t5vG(|NsG&VFeG(t5wG(t2rG&wXuG&nUjG)6TtG(t2&G(j{rG(j~tGcq$YGcz?gG(t2%G&D3gG%+<cH8V9qG&eLkH90jkGd49fH8V6eG(j{$H9<5sG(s~nH8V6qG(j^pH8V9eG(s~qG&3|gG(t2*H8wRjH8C|bG&40fG&wavH90gkG&eOjG($5oG&wXuH8wRjG&3_ZG(t2+G(t5pH8C|cG)6NrG&40cG(j~sH8wRgG&3_cG(s~nG(|K;H8V6eG)6TwGcq+cG&nRiG&D6fG)6TxG&3|pG(|K;G($8tG)6TvH8eFhG($8&H8wRiG(<E+G&D3eG(t5&G&VFeG(t5wG(t2vG&wavH8(UhGcq(pG&D6aG(j{rG(j~qG&40dH8eCbG(t5&G(t5uH90jlH8V3ZH83<mG($8tG&40dH8V6gG(|KqH9<5sG(s~oH8eCtG(|N*H8C|bG%++rG(t2%G(t5tH8wRjH90jkG&40aG&eLsH8nIgH8nLiG($8)G(t5&H8wOiG&MCgGcq+YH83<XH8C|cG&wakH8V9dG(<HvG($8vG%+<YH8V9eG(t5pG&VFfH8(XiGcq(bG)6TtG&MChG(t5pG(j~%G(|K)G&eOhG)6TvH8eFfG($8tH8(XlH8C|aGcz<ZG&eLhG&VFeG(t5wG(t2rG&wXuG&nUjG)6TtGcq+ZG(j{rG(j~qG%+(WG&40bG(<HvG($BuG&MCgH8V3ZH83<mG(j{qGc+|pG($8-G(|KrG(|KvG(s~oH8eCtG(<EuG&eOgG&40pG&3|gG(<E-G&40fH8C|bG&40bG(j{nH8nIfG)6TwGcz+XG&wXuH8wOiG&MCgG(j~nH83<XG&nUjG(<BrG&40cG(<HvG($BvH8C?bG&3_YG(t5pG&nRhH8(XiGcq(bG)6TtG&M9gG&eOdGcz?cG(|K;G(j{rG)6TwH8eFcG($8sH90jkGc+?ZGcz<cG&wavG&VFeG(t5uH8M3bG)6TtG&wXjG&3|rH8eFjG(j{rG(j~qG%+<bH8M3dG(t2%H8(XjG&MCgH8V9qG&eLkH90jlG&eOhH8V6fG)6QsH9<8tG(t2)G&40bG(|HtH8V6eG(<HsH8eFfG(t5tH8wRjH90jkG&40bG(|NsH8(UgG(<HvH8M3bG)6TtH8?aiGc+|aG(j~oG&eOtH8V9eH8C|cH8V9dG(<HvG($BvG&wUgH8V9eG&eLdH8nIgG&eOhGcq(bG)6QsH90jlG(t5uG&D3dG(<EuG(j{rG)6T!H9<8oG(t5&H8(XlG%+<fG($8qG(t5&G&VFeG(t5uH8M3bG)6TtG&wXjG&eOeGcq+ZG(j{rG($BuG&waiH8eFhG(j^pG&D3fH8(RgGcq+nG&eLkGc+|fH8nLfG($5oG(t5wH9<5sG(t2)G&40bG(|HtH8M0cG(<HrG($5oG(t5tH8wRjH8C|bG&40fG&wavH90gkG&eOhH9<8qG)6TtH8wOiG&MCgH8eFbG(t5&G&nUjH8C|ZH8V9eG(t2%G&D6hG&wXxGcq+nG(s~pH90jjG%+<bGcq+cG&nRiG&M9fG(<BpGcz<bG(<EuG&eOhG)6TvH8eFhG($8&G&40eG&MCdH8eCdG(t5&G&nRhG(t5wG(t2rG(j~%G($8uG&MChG&3|aG(j{$G(t2qG%+<cH8V9ZG(j^pG&D3gG%+<cH8V3ZH83<mG(j{rG)6T!G($8*G(|HtGcz?dG(s~oH8eCtG(<EuH8M0cG(<HuH8V6hG(<HrG&40fH8C|eH8eCfG($8pG(j{sGcq+cGcq+eG)6TtH8wOiG&MCgGcq+YH83<bG(j{sGc+|bH8V9dG(j~sH8wRgG(t2*G&40cH83<mG&VFgG)6TwGcq(bG)6TtG(t5tG)6NsG&40fG(|K;G(j{rG)6T!H9<8oG($8&G&3|cG&3|sG($8rG&wavG&VFeG(t5tGcz<rH83<XG(t5sGcq$XG&3_YG(j{rG(j~qG%+<nG&D6hG(j{(H9<5rGcq$ZGcq+nG&eLwG%_?bGd49jH8V6eG(t5sGcq(bG(s~oH8eCtG(|HtH8M3eG)6TxG($5oG(t2*H8wRjH8C|aGcz<ZG(|NwG(j{rG)6TxGcz<qG(t5&H8wOiG&MCgG(j~sG&wakG&walGcq$ZG&40cG(<HvG($BvG)6NuGcq+bG(s~qH8(UiG)6TwGcq(bG)6QsH9<5sG(t5tG&3|pG(<EuG&eOhG)6T!H9<8oG(t5tG(t2rGc+_sG&D3aG(t5&G&MCiH8V9fG&D3uG(|KrG&eLgGcq$WGcz?YG(j{rG(j~qG%+(WG&40bG(j~sG($BuG&MCcH8V3ZH83<mG(j{rG)6T!G($8*G)6QsH9<8tG(s~oH8eCtG(<EuH8M0cG(<HuG($B(G(<EuG&40fH8C|eH8V6tG&eLdG($8vG(<HvGcq+eG)6TtH8wOiG&eOeG(j~sG)6Q<G(t5uH8nLcH8V9dG(<HvG($BvG)6NuGcq+bG(|NsH8nIgG&eOhGcq(bG)6TtG(t5tG)6NrH9<8&G(|K)G&eOhG)6TvH8eFfG(t5pH8wRiG&MCbGcz<ZG(t5&G&VFeG(t5wG(t2rG(|KrG(t2tG(s~oH8V9cG(j{rG(j~qG%+<nG&D6hG(j~vH9<5rGc+?aH8V9qG&eLwG%_?bGd49jH8V6fG&wavH8?dkG(t2)G&40bG)6Q*G&nUiG(t2+G(t2vG(j^pG(t5uH8C|bG&40cG&wavG&40gH8C|cGcz<rG)6TtH8?aiGc+|aG($BtG&wUhH8C|cH8C|bH8V9dG(<HvG($8tG(<BtG(t5rG&eLdG(|KxG&eOhGcq(cG(|K;Gc`0fG&M6eH8eCiG($8&G($8tG)6TvH8eFfG($8&G&3|cH8nLdGcq(qG(|NsG&VFeG(t5tGcz<qG(<HrG(j~tG&MCgH8V3ZG(j{rG(j~qG%+(WG&40bG(j~sG($BuG&3_bGcq+nG&eLkGc+|fH8(XiH8V6eG(|HtGc+|eG(s~oH8eCtG(<EuG&eOgG&3_ZG&40pG(s~qH8wRjH90jkG&40aG&eLsH8nIgG)6TyG(t5vG)6TtH8wOiG&M9tH8V9cG&wakG($8uH8nLcH8V9eG(t2%G&D6gH8C|eG&40dG(|NvGcq+bG)6TwGcq(bG)6TtG&M9gG&eOeG&D3dG(|K)H8C|bG&MCeH8eFhG(t2*H8wRiG(<HsGcq(qG(t5&G&VFeG(t5tGcz<oG(j~%G(|KvG(<E+H8eFjG(j{$G(t2qG%+<nG&40gG(t2vH9<5rG(<HrH8V9qG&eLkGc+|fH8C|gH8eCrG(t5wH90jlG(t2)G&40bG)6Q*H8V6cG&MCcH8eFfG(j~sG(t5uH90jkG&40fG&wakG&VFiG&MChG(t5tG(t5&H8?aiGc+|aH8V3ZG)6QwH8M0cH8C?XG&40cG(<HvG($8vG%+(YGcq+dG&wakH8nIfGd49fGcq(cG(|NrGcq+dG&wagGcq$WG($8&G&eOhG)6T!H9<8pG(t5pG(t5uG&wUhGcq(qG&eLhG&VFeG(t5uH8M3bG)6TtG&wXjG&3_cH8V6fG(j{rG(j~qG%+(WG%__cG(t5pG&D6eGc+?aH8V3ZH83<mG(j{sH8V9iG(j~pH83<XGcq+cG(s~oH8eCtG(|HtH8V9gGcq+dH8eFfG(j~%G(t5uH90jkG&40bG(|NsH8wRkH8V9gG(j~oG(t5&H8wOiG&M9tH8V6fG)6Q<G&nRiH8C|oG&40dG(t2%G&D6gH8C|eG&40dG&eLhH8V6eG)6TwGcq(bG)6TtG&MCgG&wUeG($BtG(|K)G(j{rG)6TvH8eFfG(t5pG(t2rGc+_sG&D3bG(t5&G&VFeG(t5uH8M3bG)6TtG&wXjG&3|rG($BpG(j{rG(j~tGcq$YG&40bG(<HqH90jnG%+(YH8V3ZH83<mG(j{rG&MCeG(j~qG(|KrH8?dkG(s~nH8V6qG(j^pG&nRjH90jgH8V6gG(<E-G&40fH8C|bG&40cG(j{nH8nIgG%+<dH8V6dG&wXuH8wOiG&M9tH8V6fG)6TxH8V6dH8C?YG&40cG(<HvG($BwG&eIgG(t5uG(|K;H8nIiG&eOhGcq(bG)6TtG&MCgG(t5tG&3|eG(|K;G(j{rG)6TvH8eFhG($8&G&40eG&MCgH8eCcG(t5&G&nRhG(t5wG(t2rG(j~%G(t5sGcq$XG($BxG(j{rG(j~tGcq$YGcz?fG(j~%G($BuG&MCcH8V9qG&eLkH90jlG&eOhH8V6fG)6QsH8?dkG(s~oH8eCtG(<EuG&eOgG&3_ZG&40hG(<HrG&40fH90jkG&40bG(t5sGcq(ZG&wakGcq+bG&wXuH8wOiG&MCgGcq+YH83<bG(j{sGcq(rG(t5sG(t2%G&D6gH8C|eG&40dG&eLhH8V6eG)6TwGcq(bG)6TtG&MCgG(t5uG&D3sG(j{)G($8tG)6TvH8eFfG(t5tH8wRiG&MCjG($8qG(|NsG&nRhG(t5wG(t2sG(t2%G(<HuGcq(pG&3_YG(j{rG(j~qG%+(WG&40bG(j~sG($BuG&MCgH8V9qG&eLkH90jmH8(XhG($8)G($8&Gc+|eG(t2)G&40bG(|HtH8V6eG(<HtH8V9iG(s~qH8wRjH8C|gG(t5qG&wavG&40cG&40eGcz<rG)6TtH8wRjG&3_ZG(t2+G(t5pH8C|cG)6NsG&40cG(<HvG($BwG&eIgG(t5uG(t5&H8nIfGd49fGcq+cG&nRiG(t5tG&3_ZH8V6fG(|KvG(j{rG)6TvH8eFfG($8&G&3|cG(<HvGcz<ZG&wavG&nRhG(t5wG(t2uH83<XG(j{qGcq$XG($BxG(j{rG(j~qG%+<bH8M3dG(t2%H8(XjG&MCgH8V3ZH83<mG(j{rG&MCeG(j~qG(|KrH90gkG(s~oH8eCtG(<EuG(t2tH90jhG($B(G(t5&H8wRjH90jkG&40bG&eLhG(|KuH8C|eG(t5tG(t5&H8wOiG&M9tG&D6aG&wakG(|KtG&M9tG(t5sG(t2%G&D6gG)6NvH8V9gG(s~pH90jnG&eOhGcq(bG)6TtG&MCgG(t5uG&D3sG(j~oG($8tG)6TvH8eFhG(t2*H8wRiG&M6bGcq(qG&wavG&VFeG(t5wG(t2rG(|KrG(t5uG&M6aH9<8tG(j{rG(j~tGcq$YGcz?gG(t2%G&D6eG(<HvH8V3ZH83<mG(j{rG)6T!G($8+H83<XGcq(bG(s~oH8eCtG(<EuG(j{rG(t2)G&D0ZG(t5&H8wRjH8C|bG&40cG(j{nH8nIfGcq+dG(j~pG)6TtH8wOiG&MCgH8eFbG(t5&H8V9eG)6Q<G(t5rG(j~sH8wRgG(t2*G&40cG(|K;G(|KwGd49fGcq(bG)6QsH90jlG&wUeH8eCiG(|K)G(j{rG)6TvH8eFhG($8tG($BsG(t2)G&D3eG(t5&G&VFeG(t5wG(t2vG&wavH8(XkG&M6aGcq$WG(j{rG(j~tH90jjH8e9aG(<ExH90jlH8V3cGcq+nG&eLkH90jkGd49fH8V6eG(j{$H90gkG(s~oH8eCtG(|HtH8M3eG)6TyH8eFgG(t5pH8wRjH8C|bG&40aG&eLhG&VFfG&walH8V6eG(t5&H8wRjG&3_ZG(t2+G(t5pG(t5uGcq+YH8V9dG(j~sH8wRgG(t2*G&40cG(|K;G(|KwH8(XiGcq(bG)6QsGcq+cH8nLdH8V3ZG(|KrG(j{rG)6T!H9<8pG(t5pG(t5uG&wUeGcz<aG&eLhG&nRhG(t5wG(t2vG(t5&G(t5tG&M9tH8eCiG(j{rG(j~qG%+<nG&D6hG(j{(H9<5rGc+|aH8V9qG&eLkGc+|fGcq+bH8V9iG(t2vGcq+cG(s~oH8eCtG(|HtG&nUiG(<HtG($5oG(s~qH8wRjH8C|bG&40cG&wajGcq(dG&MChG($8(G&wXuH8?aiGc+|aH8eFbG(t5&G(t2tH8nLcH8V9dG(<HvG($BvG&eLwG&40eG(|NsH8nIgG)6TwGcq+cG&nRiG&D6fG)6TxG&3|pG(<EuG($8tG)6TvH8eFhG(t5tG&40eG(<BqGcq(qG(|NsG&nRhG(t5wG(t2uH83<XG(j~tG&MCgH8eFbG(j{rG(j~qG%+<bH8M3dG(t2%H8wRkG&wagH8V9qG&eLkH90jkGd49fH8V6eG(j{$Gcq(bG(t2)G&40bG(|HtG(j{qG)6TyH8V6hG(t2%H8wRjH8C|eH8V6tG&eLkGc+_bG&wakH8M3aG(t5&H8?aiGc+|aG(j~oG&eOtH8V9eH8C|cH8V9dG(<HvG($8vG%+<YH8V9eG(t5pG&VFgG&eOhGcq(bG)6TtG&MCgG(t5tG&3|eG(|K;G(j{rG)6TwH8eFcG($8&G($BwG%++qG&D3eG(t5&G&VFeG(t5wG($5oG(j{$G($BuG&eOeH8V6qG(j{$G(t2qG%+(WG&D3rG(t5tG&D6eG(<HvH8V9qG&eLkH90jlG(t5tH8V9fG&eOiGcq+cG(t2)G&40bG(|HtH8M0cG(<HsH8eFfG(t2*H8wRjH8C|bG&40cG&wavG&40gH8C|cGcz<rG)6TtH8wOiG&MCgGcq(nG)6Q<G($8uGc+|aH8V9dG(<HvG($8uGd43eH8V9hG(t5&H8V6fG&40dGcq+cG&nRiG&D6fG)6TxG&40fG(<EuG(j{rG)6TvH8eFhG(t5tG&40eG(<BqGcq(qG(|NsG&VFeG(t5uH8M3bG)6TtG&wXjG&eOeH8V3ZG(j{$G(t2qG&40dH8V6cG(<E(H8(XjG(<BrH8V3ZH83<mG(j{rG)6T!G($8)G&eOiH8nIgG(s~oH8eCtG(|HtG&nUiG(<HtH8M3fG(<HrG&40fH90jkG&40bG(|NsH8wRkH8V9fGcz<pG(t5&H8wOiG&eOeG(j~sG)6Q<G(t5uH8nLfH8V9dG(j~sH8wRgG(t2*G&40cG&eLdH8V6dH8(XiGcq(bG)6TtG(t5tG)6NsG&40fG(|K;G(j{rG)6TvH8eFfG(t5pH8wRiG&MCbGcz<ZG(t5&G&VFeG(t5wG(t2rG&wXuG&nUjG)6TtG(t2&G(j{rG(j~qG%+<aH8V9cG(j~%G&40gG&wUgH8V9qG&eLkGc+|fGcq+bH8V9iG(j~%Gcz?dG(t2)G&40bG(|HtG(j{qG)6TyH8V6hG(t2*H8wRjH8C|aGcz<YH83<mG&D3dG(t5tGcz<qG(t5&H8?aiGc+|aH8eFbG(t5&G($BvGcq(rG(t5rG(<HvG($BvG)6NuGcq+bG(|NsH8nIgG&eOhGcq(bG)6QsH90jlG(t5uG&D3dG(<EuG($8tG)6TvH8eFhG(t5tG&40eG(<BqGcq(qG(|NsG&MCiH8V9fG&D3uG(|KrG&eLhG&eOeG(s~nG(j{rG(j~tGcq(qG($8)G(<EuG&D6fG&M6cH8V9qG&eLkH90jlG)6T!G(j~oG)6QsH9<8tG(s~oH8eCtG(|HtG&eOhG(t2*G(t5&G(t5&H8wRjH90jkG&40bG&eLhG(t5rG&40eGcq+dG(t5&H8wOiG&M9tH8V3ZG&wavH8V6dH8C?YG&40cG(<HvG($BvG)6NuGcq+bG(s~pGcq+bGd49fGcq(bG)6QsGcq(bG(<BqG&3|aG(<EuG($8tG)6T!H9<8oG(s~qH8(UiG(<HyG($8pG(t5&G&VFeG(t5wG(t2vG&wavH8(UhGcq(pG&D6aG(j{rG(j~qG%+<nG&D6hG(j{(H9<5rGc+|eH8V9qG&eLsGc+_cH90jwG($8-G(|KrH8?dkG(t2)G&40bG(|HtG($8rG%++rG(t5wG(t5pH8wRjH8C|bG&40bG&eLwG%+<eG&MCfGcz<qG(t5&H8wOiG&MCgH8V6qG&wakG($BvGcq(pG(t5rG(<HvG($8vG%+<aGcq+cG(t5pG&VFfGd49fGcq+cG&nRiG&D6fG)6TxG&40fG(|K)G($8tG)6TvH8eFfG(s~qH8(UiG(<E-G&D3cG(|NsG&MCiH8V9fG&40hG(j{$H8(XjG&M9tG($BpG(j{$G(t2qG%+<fH9<8pG(t5pG($8vG%+(YH8V9qG&eLkGc+|dH8(XiH8V6fG($8wH9<5sG(s~oH8eCtG(|HtG&eOhG(t2*G(t5&G($8&G&40fH8C|eH8V6tG&eLdG($8vG(<HvGcq+eG)6TtH8wOiG&M9tH8V9cG&wakG(j~sH8C|YH8V9dG(<HvG($8uH8(RgGcq+bG(t5tH8V6dH8(XiGcq(bG)6TtG&MChG(t5pG(j~%G(j~oH8C|bG&MCjH9<8oG(t5&G&D3eG&MCbGcz<YG(t5&G&VFeG(t5tGcq+bG&wXuG&nRiG&M9tG($BpG(j{$G(t2qG%+<dH8V3ZG(j~%G($BtG(<HvH8V9qG&eLkGc+|eG&40dH8V9hG(|KqGcq+cG(s~oH8eCtG($8&G&eOhG(t2)G(t2vG(s~qH8wRjH90jkG&40bG(t5sGcq(ZG&wakGcq+eG)6TtH8wOiG&MCgG(j~sG&wakG&walGcq$XG&40cG(<HvG($BvH8C?bG&3_YG(t5pG&MCeG&40dGcq+cG&nRiG&M9eGc+|eG($BpG(<EuH8C|bG&MCjH9<8oG($8tH8(XlG&wXyG&D3bG(|NsG&nRhG(t5wG($5oG(|KrG&wXjG&eOeG(t2&G(j{rG(j~qG%+(WG&40bG(j~sG(t5vG%+(YH8V3ZH83<mG(j{sH8(XhG(t2rG(|NsGcz?dG(s~oH8eCtG(<EuG(t2tH90jhG($B(G($8&G&40fH90jkG&40bG(|NsH8wRkH8V9gG(j~oG(t5&H8wOiG&MCgGcq+YH83<bG(j{sGc+|bH8V9dG(<HvG($BvG)6NuGcq+bG(s~pGcq+cG&eOhGcq(cG(|NrGcq+dG&eIgG(j~%G($8pH8C|bG&MCeH8eFfG(t5pH8wRiG&MCbGcz<YG(|NsG&VFeG(t5uH8e9aG(|KrG(t2sG&eOeH8eFbG(j{rG(j~qG%+<aH8V9cG(j~%G&D6fG&M6cH8V9qG&eLsGc+_cH90jwG(t5wG(t2vH9<8tG(s~oH8eCtG(|HtG&eOhG(t2*G(t5&G(t5&H8wRjH8C|bG&40cG&wajGcq(dG&MChG(j~nG(t5&H8?aiGc+|eG(j~oG(j{nH8M3dH8C|dH8V9dG(<HvG($8vG%+(YGcq+dG&wagG&VFhGd49fGcq(cG(|K;Gc`0eG&MChG&3|pG($8&G&eOhG)6TvH8eFfG($8tH8(XlH8C|aGcz<aG&wavG&VFeG(t5wG(t2rG&wXuG&nUjG)6TtH8V6qG(j{rG(j~tGcq$YG&40YG($8&H8(UjG&wUgH8V9qG&eLkGc+|fH8C|gH8eCrG(t5wGcz<cG(s~oH8eCtG(|HtG&nUiG(<HtG($5oG(s~qH8wRjH8C|bG&40bG&eLwG%+<aG&eOjG(j~pG)6TtH8wOiG&eOeG(j~sG)6Q<G(t5uH8nLeH8V9eG(t2%G&D6gH8C?ZGcq+cG(|NvH90jmG&40dGcq(bG)6TtG&MCgG&wUeG($BtG(|K)G($8tG)6T!H9<8oG(t2)H90gkH8nLhGcz<aG&wavG&VFeG(t5wG(t2rG&wXuG&nRjG&40fG&3|aG(j{rG(j~qG%+<aH8V9cG(j~%G&D6eGc+|eH8V9qG&eLkGc+|fH8(XiH8V6fG(t5&Gcq(bG(s~oH8eCtG(<EuG($8rG&40bH8eFfG(t5&H8wRjH8C|bG&40cG&wavG&40gH8C|eH8V6eG(t5&H8wRjG&3_ZG(t2+G(t5pH8V6dG)6Q;G(t5rG(<HvG($BwG&eIgG(t5uG(t5&H8nIfGd49fGcq(bG)6TtG&40fG(t5pG($8*G(|K;G($8tG)6TwH8eFcG($8sH90jkGc+_rG&D3aG(|NsG&MCiH8V9fG&D3qG($8&G&wajGcq$XG(t5qG(j{rG(j~qG%+<nG&D6hG(j~vH9<5rGc+?aH8V9qG&eLkGc+|fH8C|gH8eCrG(t5wGcq(bG(s~oH8eCtG(t5&H8M3fH8(RgG&3|fG($8&G&40fH8C|aGcz<YG(|NsG&D3cG&eOiGcq+eG)6TtH8wOiG&M9tG(t2pG&wavH8C|cG&wahH8V9dG(<HvG($BvG&wUgH8V9fG(s~pGcq+cG&eOhGcq+cG&nRiG&D6fG)6TyG&D6aG($8&G&eOhG)6TwH8eFcG($8sH90jkGc+|dGcq+eG&wavG&nRhG(t5uH8M3cG)6QsG&wakG&M6eH8V6fG(j{rG(j~qG%+<nG&D6hG(j~vH9<5rGc+?aH8V9qG&eLwG%_?bGd49jH8V6fG&wavH8?dkG(s~oH8eCtG(|N*H8C|bG%++rG(t2rG(<E-G&40fH8C|bG&40fG&wavH90gkG&eOjG($5oG&wXuH8?aiGc+|eG(j~oG(j{nH8M3dH8C|bH8V9dG(<HvG($BvH8C_rH8V3ZG(|NvH90giG(t5sGcq+cG&nRiG&M9fG(<BpGcq+ZG(|K;G(j{rG)6TvH8eFhG(t5tG&40eG(<HvGcq(qG(t5&G&VFeG(t5wG(t2rG&wXuG&nRjG&M6bG&3|pG(j{$G(t2qG%+<aH8eFaG(t5&H8(XjG(<HvH8V9qG&eLkGc+|fH8(XiH8V6fG(t5&Gcq(bG(s~oH8eCtG(|HtH8V9gGcq+dH8eFgG(t2%H8wRjH90jkG&40cG&wUhG(j{rG&walG(t5vG)6TtH8?aiGc+|aH8V6eH83<mH8V9eG)6NrG&40cG(j~sH8wRgG&wXxH8V9fG&wakG(|KxG&eOhGcq(bG)6QsGcq(bG(<BpH9<8pG(|KrG(j{rG)6TvH8eFfG(t5pH8wRiG&MCbGcz<ZG(|NsG&nRhG(t5wG(t2tG(<HrG&wXjG(<E+H8V9cG(j{rG(j~qG%+<nG&D6hG(j{(H9<5rH8V3cGcq+nG&eLkGc+|fH8(XiH8V6fG(t5&Gcq(bG(t2)G&40bG(|HtG&eOgG&40dG($B(G(<E(G&40fH8C|aGcz<YH83<mG%+<aG&40fH8V6eG(t5&H8?aiGc+|aH8V3ZG)6QwG($BvGcq(pG(t5rG(<HvG($BwG&eIgG(t5uG(|K;H8nIhGd49fGcq(bG)6QsGcq(aGc+|eH8V6uG(|KrG($8tG)6T!H9<8oG(t5tG(<EvGd46uG(t5&G(t5&G&VFeG(t5tGcq+bG&wXuG&nRiG&M9tG%__dG(j{rG(j~qG%+<bH8M3dG(t2*G($BuG&M6cH8V9qG&eLkGc+|dH8(XiH8V9fG(|HtGc+|eG(s~oH8eCtG(<EuG&eOgG&40fH8V9iG($8&G&40fH90jkG&40bG(|NsH8wRgG&40eGcz<rG)6TtH8wOiG&M9tH8V6tH83<mG&nRiH8C|oG&40cG(j~sH8wRgG(t2*G&40cH83<mG&VFgG&eOhGcq(bG)6QsH90jlG(t5uG&D3dG(<EuG(j{rG)6TwH8eFcG($8sH90jkGc+?ZGcz<YG(t5&G&VFeG(t5wG($5oG(j{$G($8tG)6TtG(j~sG(j{rG($BuG&waiH8V6fG(<E-H8(UjH8(RgGcq$WH83<mG(j{sH8V9iG(j~qG(|KrH9<5sG(s~nH8V6qG(j^pG&nRjH90jgH8V6hG(s~qH8wRjH8C|bG&40cG(j{nH8nIfGcq+dG(j~pG)6TtH8wOiG&M9tG&D6aG&wakH8C|cG&wafH8V9dG(<HvG($BwG&eIgG(t5uG(|K;G&nRhG)6TwGcq+cG&nRiG(t5uG&wUiH8V9cG(|KvG&eOhG)6TvH8eFhG($8&G&40eG&MCgH8eCcG(t5&G&nRhG(t5uH8M3bG&nRiG(<EuG&M9tGcz<fG(j{rG(j~tH90jjH8e9aG(<ExH90jmG&wakH8V3ZG&wUhH90glH90joG($8-G(|KrH8C|dG(s~oH8eCtG(<EuH8M0cG(<HuH8V6hG(<EuG&40fH8C|aGcz<ZG&wavH90gjH8C|dGcz<qG(t5&H8wOiG&M9tH8V9cG&wakG($8uH8nLcH8V9dG(j~sH8wRgG&wXxH8V9fG&wakH8nIfH8(XiGcq+cG&nRiG&40eG&wakG&D3hG($8pG(j{rG)6TvH8eFhG($8&G&40eG&MCgGcq(qG&wavG&VFeG(t5tGcz<pG&eOiG&wXjG)6TtH8V6qG(j{$G(t2qG%+<nG&40gG(t2%G&D6eG(<HvH8V9qG&eLkGc+|fH8C|gH8eCvG(j~%H9<5sG(s~oH8eCtG(|HtG&eOhG(t2)G($BuG(t2%H8wRjH8C|aGcq+cG&eLwG&eOgG&wakGcz<pG(t5&H8?aiGc+|aH8V3ZG)6QwG(t2tGcq+YH8V9dG(<HvG($BvH8C?bG&3_YG(|NvGcq+bGd49fGcq+cG&nRiG&3|eG&40aH8V3ZG(|KrH8C|bG&MCjH9<8oG(t2)H90gkH8nLeGcz<ZG(|NsG&MCiH8V9fG&D3uG(|KrG&eLgGcq$WH8V9gG(j{rG(j~tGcq(pG(t5vG(t5pG($BtG(s~qGcq$WH83<mG($8sGc+|dH8M3cG&wXmH90gkG(s~oH8eCtG($8&G&eOhG(t2)G(t2vG(t5&H8wRjH90jkG&40bG(|NsH8wRgG&40eGcz<qG(t5&H8wOiG&M9tH8V3ZG&wavG&nRiH8C?ZG&40cG(j~sH8wRgG(s~oH8V9eG(t5tH8V6eG)6TwGcq(bG)6TtG&MCgG(t5uG&D3sG(j~oG($8tG)6TvH8eFfG(t5pH8wRiG&MCbGcz<YG(t5&G&VFeG(t5wG(t2rG(|KrG(t2sG&eOeH8V6qG(j{$G(t2qG%+<cG($BwG(<HqH90jmH8(RgGcq+nG&eLkGc+|eG&40dH8V9hG(|KqGcq+cG(s~oH8eCtG(|N*H8C|bG%++qG(t5wG(j^pG(t5uH8C|bG&40cG&wavG&40gH8C|eG(j~nG(t5&H8?aiGc+|aGcq+YH83<XG(j~tGc+|aH8V9eG(t2%G&D6gH8C|ZG(s~nG(|K;H8V6dH8(XiGcq(bG)6QsH90jlG(t5uG&D3dG(<EuH8C|bG&MCeH8eFfG($8&G&3|cH8nLdGcq(qG(|NsG&nRhG(t5wG(j~qG(<HrH8C|cGcq$XH8V9cG(j{rG(j~tGcq(pG(t5vG(t5tG&D6eG(<BrH8V9qG&eLkGc+|dH8(XiH8V6fG($8wH9<5sG(s~oH8eCtG(<EuG&eOgG&40pG&3|oG(t5&H8wRjH90jkG&40cG&wUhG(j{rG&40fG(t5uG(t5&H8wOiG&MCgH8V9cG(t5tH8M0cG&wafH8V9eG(t2%G&D6gH8C|eG&40dG&eLhH8V6dGd49fGcq(bG)6QsGcq+cH8nLdGcz<fG(|KrG&eOhG)6TvH8eFhG($8tG($BsG&wXxG(t2*G&wavG&MCiH8V9fG&40hG(j{$G&wajGcq$WGcq$WG(j{rG(j~tGcq$YG&40bG(<HqH90jnG%+<YH8V9qG&eLkGc+|fH8(XiH8V6eG(|NsH9<8tG(s~oH8eCtG(<EuG(j{rG(t2*G($BtG($8&G&40fH90jkG&40bG(t5sGcq+dGcq+dG(j~oG(t5&H8wOiG&M9tH8V9cG&wakG($8uH8nLcH8V9dG(<HvG($BvG)6Q<G&40fG&wUgGcq+dG&40dGcq+cG&nRiG(t5tG&3_ZH8V6fG(|KrG&eOhG)6TwH8eFdG(t5pH8wRiG&M6cGcz<ZG(t5&G&MCiH8V9fG&D3uG(|KrG&eLhG&M9tG&D6aG(j{rG(j~qG&40dH8eCbG(t5tH8(XiGcq$ZGcq$WH83<mG($8sGc+|dH8M3cG&wXuGc`0eG(s~oH8eCtG(<EuG&eOgG&40fH8V9iG(s~qH8wRjH8C|bG&40cG&wajGcq(dG&MChG($8+G)6TtH8wOiG&M9tG&D6aG&wakH8C|cH8C|oG&40cG(<HvG($BvG&wUgH8V9eG&eLdH8nIgG&eOhGcq(bG)6TtG(t5tG)6NsG&40fG(|K;H8C|bG&MCjH9<8oG(s~qH8(UiG(<HyG($8qG&eLhG&VFeG(t5uH8M3bG)6TtG&wXjG&3|rG($BpG(j{rG(j~tGcq$YG&40bG(<HqH90jnG%+<cH8V9qG&eLkH90jlG(t5tH8V9fG&eOiGcq+cG(t2)G&40bG(|HtH8M0cG(<HrG($B(G(t5pH8wRjH8C|bG&40cG&wavG&40gH8C|cGcz<rG)6TtH8wOiG&MCgH8V3ZG)6Q*G($BvGcq$aG&40cG(<HvG($BvG)6NuGcq+bG(|NsH8nIhH8(XiGcq(bG)6TtG&MCgG(t5uG&D3sG(|K;H8C|bG&MCeH8eFfG($8&G&3|cH8nLdGcq(qG(|NsG&nRhG(t5uH8M3bG&nRiG(<EuG&M9tGcq+ZG(j{rG(j~tGcq$YGcz?fG(j~sH8(UjH90jlH8V3ZH83<mG($8tG&40dH8V6gG(<BsGcz?dG(s~oH8eCtG(|HtH8M3eG)6TxG($5oG(t2*H8wRjH8C|bG&40bG&eLwG%+<eG&MChG(j~oG(t5&H8wOiG&MCgG(j~sG&wakG&walGcq$ZG&40dG(t2%G&D6gH8C?ZGcq+cG(t5pG&VFfH8(XiGcq(bG)6TtG&MCgG(t5tG&3|eG(|K;G(j{rG)6T!H9<8oG($8&G&3|cG(<HsGcz<ZG(|NsG&nRhG(t5wG(t2sG(t2%G&wajGcq$WGcq$WG(j{rG($BuG&waiH8V6fG(<E-H8(XiH8nFdH8V9qG&eLkH90jmG&40eH8V9iG(|KrGc+|eG(s~nH8V6qG(j~%H8M3fGcq+dH8V6hG(s~qH8wRjH90jkG&40aG&eLsH8nIgH8nLiG(t5uG(t5&H8?aiGc+|aH8V3ZG)6QwG($BvGcq$aG&40cG(<HvG($BvG)6Q<G&40fG&wUgGcq+bGd49fGcq(cG(|NrGcq+dG&wagG&D3hG(<EuG($8tG)6TvH8eFhG($8tGc`0dGcq(pG($8sG(|NsG&nRhG(t5wG(t2uH83<XG(j{qGcq(pG(t2&G(j{rG(j~qG%+(WG%__cG(t2*G($BuG&MCcH8V9qG&eLkH90jmG&40eH8V9eG(|NsGcz<cG(s~oH8eCtG(|HtG&eOhG(t2)G($BpG(<E(G&40fH8C|bG&40aG&eLhG&VFfG&walG(j~nG(t5&H8wOiG&M9tH8V9cG&wakG($8tG)6Q;G(t5sG(t2%G&D6gG)6NvH8V9gG(s~pH90jnG)6TwGcq+cG&nRiG(t5tG&3_ZH8V6fG(|KrG&eOhG)6TvH8eFfG(t5pH8wRiG&MCbGcz<YG(|NsG&VFeG(t5tGcz<oG(j~%G($BuG(<E+H8eCiG(j{rG(j~qG%+<nG&D6hG(j~vH9<5rGc+?aH8V9qG&eLkH90jmH8(XhG($8)G($8&Gc+|eG(s~nH8V6qG(j^pG&nRjH90jgH8V6hG(j^pG(t5uH8C|aGcz<ZG(|NwG(j{rH8nLiH8V6fG(t5&H8?aiGc+|aH8V6aH83<bG(j{sGc+|ZH8V9dG(j~sH8wRgG&3_cG(s~nG(|K;H8V6dG)6TwGcq+cG&nRiG&D6fG)6TyG&D6aG($8pH8C|bG&MCeH8eFiG(t5pH8(XlH8C|ZGcq(qG&eLhG&VFeG(t5wG(t2rG&wXuG&nRjG&M6bG&3|pG(j{rG($BuG&waiH8V6fG(<E-H8(UjG&wakH8V3ZH83<mG(j{rG)6T!G($8+H83<XH9<8tG(s~oH8eCtG(|HtG&eOhG(t2)G($BpG(t5&H8wRjH8C|aGcz<YG&eLhG&40gH8V9fGcz<oG&wXuH8?aiGc+|aH8V6fG&eOtG&nUjG)6TtH8V9dG(j~sH8wRgG(t2*G&40cH83<mG&VFfGd49fGcq(bG)6TtG&MCgG(t5tG&3|eG(|K)G(j{rG)6TvH8eFfG(t5&H8(XlG&wanG($8qG(|NsG&VFeG(t5tGcz<rH83<XG(t5sGcq$XG($8wG(j{rG($BuG&waiH8V6fG(<ExH90jmH90dhH8V9qG&eLwG%_?bGd49jH8V6eG($8wGcz<cG(s~nH8V6qG(j^pH8V9eG(s~pGcz?oG(t5pH8wRjH90jkG&40bH83<mG($8sGc+|eGcz<pG(t5&H8?aiGc+|aH8V3ZG)6QwG(t2tGcq+YH8V9dG(<HvG($BvG)6Q<G&40eH83<mG&nRhH8(XiGcq(bG)6TtG&M9gG&eOeG&D3dG(|K)H8C|bG&MCeH8eFiG(t5pH8(XlH8C|cGcq(qG&eLhG&nRhG(t5wG(t2uH83<XG(j~tG&MCgG(j~sG(j{rG(j~qG%+(WG&40bG(<HvG(t5vG&wUgH8V3ZG&wUhH90gkH8nLgH8V6eG(j{$H9<5sG(s~oH8eCtG(|HtG&eOhG(t2)G($BpG(<E-G&40fH8C|bG&40aG&eLhG&40cG%+<dG(j~nG(t5&H8wOiG&MCgH8eFbG(t5&H8V9eG)6Q=G(t5rG(<HvG($8vG%+<dG&40eG(|NvH90jlG)6TwGcq(bG)6TtG&MCgG(t5tG&3|eG(|K;G(j{rG)6T!H9<8oG(t5&H8(XlG%+(YGcz<aG&wavG&VFeG(t5wG(t2vG&wavH8(UjG(t5tH8V6qG(j{rG(j~tGcq(qG($8)G(<EuG&D6eG(s~qGcq+nG&eLkH90jlG(t5tH8V6gG)6NuGcz?dG(s~oH8eCtG(|N*H8C|bG&40aH8eFgG(t2sH8wRjH8C|bG&40bG&eLwG%+<aG&eOhGcz<pG(t5&H8wOiG&M9tH8V9cG&wakG(j~tGc+?YG&40cG(<HvG($8tG(<BtG(t5tG&wakH8V6eG&eOhGcq+cG&nRiG&D6fG)6TyG&D6aG($8pH8C|bG&MCeH8eFhG($8tG($BsG&wXxG&D3bG&wavG&VFeG(t5uH8M3bG)6TtG(j{sG&M6bG&3|pG(j{rG(j~qG%+<bH8M3dG(t2*G($BuG&M6cH8V3ZH83<mG(j{rG)6T!G($8+H83<WGcq(bG(s~oH8eCtG(<EuH8M0cG(<HuH8V6hG(<HrG&40fH90jkG&40fG&wakG&VFiH8C|eG($8*G(t5&H8?aiGc+|aG($BtG&wUhH8C|cG)6Q=G(t5rG(<HvG($BvG&wUgH8V9eG&eLdG&nRkG&eOhGcq(bG)6TtG&3|dG(t5tG&40bG(|K;G(j{rG)6TwH8eFcG(t2*Gc`0dGc+_sG&D3bG&wavG&VFeG(t5wG(t2vG)6QsH8(XkG&MCgG&D3sG(j{$G(t2qG%+<nG&40gG(t2%G&D6fG&MCcH8V9qG&eLkGc+|fGcq+bH8V9eG(t2%Gc+_dG(t2)G&40bG(|HtG(j{qG)6TyH8V6hG(t2*H8wRjH8C|aGcq+cG&eLwG&nRkH8V9gG(j~pG)6TtH8wOiG&M9tH8V9cG&wakG(j~sG)6NvG&40cG(<HvG($BvG)6NuGcq+bG(|NsH8nIgG&eOhGcq+cG&nRiG&MCgH8nLdH8V6uG(|KrH8C|bG&MCjH9<8oG(t5tG(t2rGc+_sG&D3aG(t5&G&VFeG(t5tGcq+bG&wXuG&nRiG&M9tG&D6aG(j{rG(j~qG%+<nG&D6hG(j~vH9<5rH8nFdH8V3ZH83<mG(j{sH8V9iG(j~pH83<XGcq(bG(s~oH8eCtG)6Q*G&eOjH90jmH8V6pG($8&G&40fH8C|eH8V6tG&eLkGc+|gH8V9fH8M3ZG(t5&H8wOiG&MCgGcq+YH83<XH8C|cG&wagH8V9eG(t2%G&D6gG&eIfH8V9hG(t5&H8V6gG&eOhGcq(cG(|NrGcq+dG&wagG&D3hG($8&G($8tG)6T!H9<8oG(t5&H8(XlG%+<aGcq+nG(t5&G&VFeG(t5wG($5oG(j{$G($8tG)6TtGcq+ZG(j{rG(j~qG%+<aH8V9dG(t2rH9<5sG&M6cH8V3ZH83<mG(j{sH8V9iG(j~qG(|KrH9<5sG(t2)G&40bG(|HtG($8rG%++rG(t5wG(t5tH8wRjH8C|bG&40bG(j{nH8nIfH8nLiH8V6gG)6TtH8wOiG&M9tG&D6aG&wavG(j~tH8nLeH8V9eG(t2%G&D6gH8C|ZG(t5tG&wagG&VFfH8(XiGcq(bG)6QsH90jlG&wUfG(s~nG($8pG($8tG)6TvH8eFhG($8&H8wRiG(t2)G(t2*G(|NsG&MCiH8V9fG&D3uG(|KrG&eLgGcq$WGcz?YG(j{rG($BvH8(XiH8V9cG(j~%G($8vG%+(YH8V3ZG&wUhH90glH8nLhG(j~pG(|KrH90gkG(s~oH8eCtG)6Q*G&eOjH90jlH8V9qG(t5pH8wRjH8C|eH8V6tG&eLdG($8vG(<HvGcq+eG)6TtH8wOiG&M9tG(t2pG&wavG(j~tGc+?YG&40cG(<HvG($8uH90gzH8V3ZG(|K;H8V6dG)6TwGcq(bG)6TtG&40fG(t5pG(s~nG(|K;G($8tG)6TvH8eFfG(s~qH8(UiG(t2*G($8qG&eLhG&VFeG(t5wG($5oG(j{$G($BuG&eOeH8eFbG(j{$G(t2qG%+<nG&40gG(t2vH90jnG%+<cH8V9qG&eLkGc+|fH8(XiH8V6eG(|NsGcz?dG(t2)G&40bG)6Q*G&nUiG(t2+G(t2%G(s~qH8wRjH8C|aGcq+cG&eLwG&nRkH8V9gG(j~oG(t5&H8wOiG&MCgH8V6qG&wakG(t2tGcq$WG&40cG(<HvG($BvG)6Q<G&40fG&wUgGcq+bGd49fGcq(bG)6QsGcq(aGc+|eH8V6uG(|KrG(j{rG)6TvH8eFhG($8&G&40eG&MCgGcq(qG&eLhG&VFeG(t5wG(t2rG&wXuG&nRjG&M6bG&3_YG(j{$G(t2qG%+<bH8V6uG(j^pG&D3fG&wagH8V9qG&eLkGc+|fH8C|gH8eCvG(t2vGcq(bG(s~nH8V6qG(j^pH8V9eG(s~qG&3|oG(t2sH8wRjH8C|bG&40cG&wajGcq(dG&MChG($8+G)6TtH8wOiG&M9tH8V6fG)6TxH8V6dH8C?YG&40cG(<HvG($BvH8C?bG&3_YG(|NvGcq+bG)6TwGcq(bG)6QsG(t2tG&eIgH8eCiG($8&H8C|bG&MCjH9<8oG(t5&G&D3eG&MCeGcz<YG&eLhG&VFeG(t5wG(t2rG&wXuG&nRjG&40eH8V3ZG(j{$G(t2qG%+(WG&D3rG(t5sH9<5rG(s~qGcq$WH83<mG(j{rG&MCeG(j~qG(|KrH9<5sG(t2)G&40bG(|HtG($8rG%++pG&D6iG(<E-G&40fH90jkG&40bG&wajH90giG&walG($8*G(t5&H8wOiG&M9tH8V6fG)6TxH8V6dH8C?ZG&40dG(t2%G&D6gG&wUhH8V9gG&eLdH8V6fGd49fGcq(bG)6TtG&MCgG(t5tG&3|eG(|K;G(j{rG)6TvH8eFiG(t5pH8(XlH8C|ZGcz<cG(|NsG&MCiH8V9fG&D3qG($8&G&wajGcq$XG&3|pG(j{rG(j~qG%+(WG&40bG(<HvG(t5vG&wakH8V9qG&eLkH90jkGd49fH8V6eG(j{$H90gkG(s~oH8eCtG(|HtG&nUiG(<HtH8V6pG(t5tH8wRjH90jkG&40bG(|NsH8wRkH8V9fGcz<qG(t5&H8wOiG&M9tG(t2pG&wavH8C|cG&wagH8V9eG(t2%G&D6gH8C|eG&40dG(|NvH90jmGd49fGcq(bG)6TtG&3|dG(t5tG&40bG(j{)H8C|bG&MCeH8eFfG(t5pH8wRiG&MCbGcz<ZG(t5&G&nRhG(t5wG(t2sG(t2%H8(XjG&M9tG&3_YG(j{rG($BuG&waiH8eFhG(j^pG&D3fG&wakH8V9qG&eLkH90jmG&40eH8V9iG(|KrGcz<cG(s~oH8eCtG(<EuG(j{rG(t2)G&D6qG(t5pH8wRjH8C|bG&40bG(j{nH8nIfH8nLiH8V6gG)6TtH8wRjG&3_ZG(t2+G(t5pH8V6dG)6NuG&40cG(<HvG($BvG)6NuGcq+bG(|NsG&nRjG&40dGcq+cG&nRiG&MCgH8nLdH8V6bG(|KrG($8tG)6TvH8eFfG(t5&G&D3eG&M6cGcq(qG&wavG&nRhG(t5wG(t2tG(<HrG&nRhGcq+dG&3|aG(j{rG(j~tGcq(qG($8)G(<EuG&D6fG&M6cH8V9qG&eLkH90jmH8V9iH8V6eG)6QsGcz<cG(t2)G&40bG(|HtG(j{qG)6TyH8V6gG(<E-G&40fH90jkG&40bG(|NsH8wRgG&40eGcz<pG(t5&H8wOiG&M9tG(t2pG&wavH8C|cG&wahH8V9dG(<HvG($BvG&wUgH8V9eG&eLdH8nIgG&eOhGcq+cG&nRiG&M9eGc+|eG($8sG($8&G&eOhG)6TvH8eFhG($8&G&40eG&MCgGcq(qG&wavG&VFeG(t5tGcz<oG(j~%G(|KvG(<E+H8V9cG(j{rG(j~tGcq$aG&D3aG(t2vH90jnG%+(YH8V9qG&eLwG%_?bGd49jH8V6fG(j{rGc`0eG(s~nH8V6qG(j^pH8V9eG(s~qG&3|gG(t2*H8wRjH8C|bG&40fG&wavH90gkG(<HwH8V6eG(t5&H8wOiG&MCgG(j~sG&wakG&walGcq(pG(t5rG(<HvG($BvG)6NuGcq+bG(|NsH8nIfG&eOhGcq(bG)6TtG&3|dG(t5tG&40bG(j~oH8C|bG&MCeH8eFhG($8&H8wRiG(<BtH8V6uG&eLhG&VFeG(t5wG(t2vG&wavH8(UhGcq(pG&D6aG(j{rG(j~qG&40dH8eCbG(t5&G($BuG&3_bGcq$WH83<mG(j{sG&40eH8V9gG)6QsH90jlG(s~oH8eCtG(|N*H8C|bG%++rG(t2%G(t5pH8wRjH90jkG&40fG&wakG&VFiH8C|eG(t5sG&wXuH8wRjG&3_YGcz?bH83<XG&nUjH8C?YG&40cG(<HvG($8vG%+<YH8V9eG(t5pG&VFfH8(XiGcq(bG)6QsGcq+cH8nLdGcz<fG(|K;H8C|bG&MCeH8eFfG(t5&H8(XlG&wanG($8qG&wavG&VFeG(t5wG(t2rG&wXuG&nUjG)6TtGcq+ZG(j{rG(j~qG%+(WG&40bG(<HvG($BuG&M6cH8V9qG&eLkH90jmH8(XhG($8)G($8tGc+|eG(t2)G&40bG(|N*H8M0bG&40fH8V9iG(<E-G&40fH8C|bG&40cG&wavG&40gH8C|eH8V6eG(t5&H8?aiGc+|aH8V3ZG)6QwG($BvGc+?YG&40cG(<HvG($BvH8C?bG&3_YG(t5pG&nRhH8(XiGcq(bG)6TtG&3|dG(s~nGcq(rG(|K;G($8tG)6TvH8eFfG($8&G&3|cH8nLdGcz<aG&wavG&nRhG(t5wG(t2tG(<HrG&nUkG&MCgH8eFbG(j{rG(j~qG%+<bH8M3dG(t2%H8wRkH8C|dH8V3ZH83<mG(j{qH90jkH8eCtG($8&Gc+_dG(t2)G&40bG(|N*H8M0bG&40eH8eFfG($8&G&40fH8C|eH8V6tG&eLdG($8vH8V9gG($8+G)6TtH8wOiG&MCgH8eFbG(t5&H8V9eH8C|aH8V9eG(t2%G&D6hG&wXxGcq+nG(s~pH90gmH8C|cGcq(bG)6QsH90jlG(t5uG&D3dG(<EuG($8tG)6T!H9<8oG(t5&H8(XlG%+(YGcz<ZG&eLhG&nRhG(t5uH8M3cG)6QsG&wakG&M6bG($8wG(j{$G(t2qG&40dH8M3cG(j~sG($BtGcq$ZGcq+nG&eLkGc+|fH8nLfG($5oG(t5wH9<5sG(t2)G&40bG(|HtH8M0cG(<HrG($5oG(t5tH8wRjH8C|bG&40bG(j{nH8nIfG)6TyH8V6fG(t5&H8wOiG&M9tH8V6fG)6TxH8V6dH8C?YG&40cG(<HvG($BvG)6NuGcq+bG(s~qH8(UkG&eOhGcq(bG)6QsH9<5sG(t5tG&3|pG(|K)G($8tG)6TvH8eFhG($8&G&40eG&MCgGcq(qG&wavG&nRhG(t5wG(t2rG(j~%G($8uG&MChG&3|aG(j{$G(t2qG%+<cH8V9ZG(j^pG&D3fH90dhH8V9qG&eLkH90jkGd49fH8V6eG(j{$H90jlG(s~oH8eCtG(|HtH8M3eG)6TxG($B(G(j~%G(t5uH90jkG&40bH83<mG($8sH8(XjGcz<rG)6TtH8wRjG&3_ZG(t2+G(t5pH8V6dG)6NsG&40dG(t2%G&D6hG&eLwG&40dG&eLdH8nIfG&eOhGcq(bG)6TtG&MCgG(t5tG&3|eG(j{)H8C|bG&MCjH9<8oG(t5tG&3|cH8nLdGcz<aG&wavG&MCiH8V9fG&40hG(j{$H8(XjG&M9tG&3_YG(j{$G(t2qG%+<dH8V3ZG(j~%G($8uH8(RgGcq+nG&eLkGc+|fH8(XiH8V6fG($8tGcz?dG(s~oH8eCtG(|HtG&eOhG(t2)G($BuG(t5tH8wRjH8C|eH8V6tG&eLdG($8vG&MCgGcq+dG(t5&H8wOiG&MCgG(j~sG&wakG&walGcq$YG&40cG(<HvG($BvG&eLwG&40eG&eLdH8nIhG&40dGcq(bG)6TtG&3|dG(s~nGcq(rG(|K;H8C|bG&MCeH8eFfG(s~qH8(UiG(<E-G&3|sG&eLhG&VFeG(t5tGcq+bG&wXuG&nRiG&M9tG(s~nG(j{rG(j~tGcq(pG(t5vG(t5pG($8vG%+<YH8V3ZH83<mG(j{sH8V9iG(j~pH83<XGcq+cG(s~oH8eCtG)6Q*G&eOjH90jmH8V6pG($8&G&40fH8C|eH8V6tG&eLdG($8vH8V9fGcq+bG&wXuH8wOiG&MCgGcq(nG)6Q<G(j~tGc+|ZH8V9dG(<HvG($8vG%+<YH8V9eG(|NvH90jmG&40dGcq(bG)6TtG(t5tG)6NsG&40fG(|NsG(j{rG)6TvH8eFfG(t5pG(t2rGc+_sG&D3dG&eLhG&VFeG(t5wG(t2rG(|KrG(t2tG(t5tGcz?gG(j{rG(j~qG%+<aH8V9cG(j~%G&D6fG&MCcH8V9qG&eLwG%_?bGd49jH8V6fG(j{rGc+|eG(t2)G&40bG(|HtH8M0cG(<HsH8eFfG(<EuG&40fH8C|bG&40cG&wavG&40gH8C|eH8V6eG(t5&H8wOiG&MCgG(j~sG&wakG&walGcq$aG&40cG(<HvG($BvG&eLwG&40eG(s~pGcq+bG)6TwGcq(cG(|K;Gc`0eG&MCgH9<8&G(|K)G($8tG)6TvH8eFhG($8&H8wRiG(t2)G($8tG(|NsG&VFeG(t5tGcz<qG(<HrG(j~tG&MCgH8V3ZG(j{rG(j~qG%+(WG&40bG(j~sG($BuG&MCcH8V3ZG&wUhH90glH90joG($8-G(|KqH9<8tG(s~oH8eCtG(|HtG&eOhG(t2*G(t5sG(s~qH8wRjH8C|aGcz<ZG(t5pG($8tG&walG(t5tG(t5&H8wRjG&3_ZG(t2+G(t5pG(t5uH90dgG&40cG(<HvG($8vG%+<YH8V9eG(|NvH90jkG)6TwGcq(bG)6TtG&M9gG&eOeG&D3dG(j{)G(j{rG)6TvH8eFhG($8&G&40eG&MCdGcz<cG&wavG&VFeG(t5tGcq+bG&wXuG&nRiG&M9tG(t2&G(j{$G(t2qG%+<dH8V3ZG(j~sH8(UjH8(RgGcq+nG&eLkGc+|eG&40dH8V9gG(t5&Gcz<cG(t2)G&40bG(|N*H8M0bG&40pG&3|gG(<E-G&40fH8C|bG&40bG(j{nH8nIfH8nLiH8V6gG)6TtH8?aiGc+|aH8V3ZG)6QwH8M0cH8C?XG&40cG(<HvG($8vG%+(YGcq+dG&wakH8V6cG%+<bGcq+cG&nRiG(t5tG&3_ZH8V6fG(|KrG&eOhG)6TwH8eFcG(t2*Gc`0dGc+_sG&D3aG(|NsG&VFeG(t5wG(t2vG&wavH8(XkG&M6aGcq$WG(j{rG(j~qG%+(WG%__cG(t5pG&D6eGc+|eH8V3ZG&wUhH90glH90joG($8-G(|KrH90jlG(s~oH8eCtG(|HtH8V9gGcq+dH8eFfG(j^pG(t5uH90jkG&40bG&eLhG(|KuG(t5uH8V6eG(t5&H8wOiG&M9tG(t2pG&wavG($8uH8nLdH8V9dG(<HvG($8vG%+(YGcq+dG&wagG&VFhH8(XiGcq(bG)6QsH90jlG&wUfG(s~nG($8pH8C|bG&MCeH8eFfG(t5pH8wRiG&MCbGcz<bG&eLhG&VFeG(t5wG(t2vG)6QsH8(XkG&M6aGcq$WG(j{$G(t2qG%+(WG&D3rG(t5sH9<5rG(<BrH8V3ZH83<mG($8sGc+|dH8M3cG&wXuGc+|eG(s~oH8eCtG($8&G&eOhG(t2)G(t2vG(t2*H8wRjH90jkG&40bG&wajH90giG&walG($8*G(t5&H8wOiG&M9tG&D6aG&wakH8C|cH8C?ZG&40dG(t2%G&D6gG&wUhH8V9gG&eLdH8V6gG)6TwGcq(cG(|K;Gc`0fG&M6eH8eCiG(|KvG&eOhG)6TvH8eFfG($8&G&3|cG(<BqGcq(qG(t5&G&nRhG(t5wG(t2rG(j~%G(t5sGcq$XG($BxG(j{rG(j~tGcq(pG(t5vG(t5tG&D3gG%+<cH8V9qG&eLkGc+|fH8C|gH8eCrG(t5wGcz<cG(s~oH8eCtG)6Q*G&eOjH90jlH8V9fG(<HvG&40fH8C|bG&40cG&wavG&40gH8C|eH8V6eG(t5&H8?aiGc+|aH8V6eH83<mH8V9eG)6NrG&40dG(t2%G&D6gH8C|eG&40dG&eLhH8V6eG&eOhGcq(bG)6TtG&40fG(t5pG($8*G(|K;H8C|bG&MCeH8eFhG(t2*H8wRiG&M6bGcq(qG(|NsG&VFeG(t5tH8V9iG(j{$G&wakG&M6bG($BxG(j{$G(t2qG%+<dH8V3ZG(j~%G($8vG%+<cH8V9qG&eLkGc+|fH8(XiH8V6fG($8wH9<8tG(s~oH8eCtG(<EuH8V6eG(<HvH8eFfG(<EuG&40fH8C|gG(t5qG&wavG&40cG&40eGcz<rG)6TtH8wRjG&3_ZG(t2+G(t5pH8C|cG)6NsG&40cG(<HvG($BwG&eIgG(t5uG(|K;H8nIgG&eOhGcq(bG)6QsH90jlG&wUeH8eCiG(<EuG(j{rG)6TvH8eFhG($8&G&40eG&MCgGcq(qG&wavG&VFeG(t5tGcq+bG&wXuG&nRiG&M9tG&D6aG(j{rG(j~qG%+(WG%__cG(t5pG&40cH8C?aGcq+nG&eLkH90jmG&40eH8V9eG(|NsGcz<cG(s~oH8eCtG)6Q*G&eOjH90jmH8V6dG(t2%H8wRjH90jkG&40fG(j{nH8M3cG%+<dG(j~nG(t5&H8wOiG&M9tH8V9cG&wakG($8uH8nLcH8V9dG(<HvG($8uH8(RgGcq+bG(t5tH8V6eG)6TwGcq(bG)6QsH9<5rGcq+cG(t5qG(<EuG&eOhG)6TwH8eFcG($8&G($BwG%++qG&D3aG(|NsG&VFeG(t5wG(t2rG(|KrG(t5uG&M6aH9<8tG(j{rG(j~tGcq$aG&D3aG(t2vH90jnG%+<cH8V9qG&eLkGc+|fH8(XiH8V6fG($8tGc`0eG(s~oH8eCtG(|HtG&eOhG(t2)G($BuG(t2*H8wRjH8C|aGcz<ZG(|NwG(j{rH8nLiH8V6fG(t5&H8wOiG&MCgGcq(nG)6Q<G($8uGc+|aH8V9dG(<HvG($BwG&eIgG(t5uG(|K;H8nIgG&eOhGcq+cG&nRiG&D6fG)6TxG&3|pG(|K)G($8tG)6TvH8eFhG($8tG($BsG(t2)G&D3eG(t5&G&VFeG(t5wG(t2vG&wavH8(XkG&M6aGcq$WG(j{rG(j~tH90jjH8e9aG(<ExH90jlH8V3cGcq+nG&eLkH90jkGd49fH8V6eG(j{$H90gkG(s~oH8eCtG(|HtH8M3eG)6TyH8eFgG(t5pH8wRjH8C|bG&40aG&eLhG&VFfG&walH8V6eG(t5&H8wRjG&3_YGcz?bH83<mH8V9eG)6NvG&40dG(t2%G&D6gH8C|eG&40dG&eLhH8nIfG)6TwGcq(bG)6QsGcq(bG(<BpH9<8pG(|KrG&eOhG)6TwH8eFcG(t2*Gc`0dGc+_sG&D3bG(t5&G&MCiH8V9fG&D3uG(|KrG&eLgGcq$WGcz?YG(j{$G(t2qG%+<dH8V3ZG(j~%G($BtG(<HvH8V9qG&eLkGc+|fH8(XiH8V6eG)6QrGcz<cG(s~nH8V6qG(j~%H8M3fGcq+dH8V6hG(t5&H8wRjH8C|bG&40cG&wajGcq(dG&MChG($8(G&wXuH8?aiGc+|aH8eFbG(t5&G(t2tH8nLcH8V9dG(<HvG($BvG&eLwG&40eG(|NsH8nIgG)6TwGcq(bG)6QsGcq(bG(<BqG&3|aG(<EuG&eOhG)6TvH8eFfG(t5pG(t2rG(t2*G(t5&G(t5&G&VFeG(t5tGcq+bG&wXuG&nRiG&M9tH8eCiG(j{rG(j~qG%+<bH8M3dG(t2*G($BtGc+?aH8V9qG&eLkH90jkGd49fH8V6eG(j{$Gcq(bG(t2)G&40bG(|HtG(j{qG)6TyH8V6hG(t2*H8wRjH8C|aGcz<YG(|NsG&D3cG&eOiGcq+eG)6TtH8wOiG&M9tH8V6fG)6TxH8V6dH8C|dH8V9eG(t2%G&D6gH8C_qG(t5tG&eLhH8V6fG&40dGcq+cG&nRiG&M9eGc+|eG(j~oG(|KrG($8tG)6TvH8eFhG($8tG($BsG&wXxG($8sG(|NsG&VFeG(t5wG(t2rG&wXuG&nUjG(t2)G($BpG(j{$G(t2qG%+<bG(j~sG(<EuG&D6eG(<HvH8V3ZG&wUhH90gjH90jjG(j~qG(|KrH8?dkG(t2)G&40bG(|HtG($8rG%++rG(t5wG(t5pH8wRjH8C|bG&40cG&wavG&40gH8C|eH8V6eG(t5&H8wOiG&M9tH8V9cG&wakG(j~tH8nLcH8V9dG(j~sH8wRgG(t2*G&40cH83<mG&D3gG&eOhGcq+cG&nRiG&D6fG)6TxG&40fG(<EuG(j{rG)6TvH8eFhG(t5tG&40eG(<BqGcq(qG(|NsG&VFeG(t5uH8M3bG)6TtG(j{sG&M6bG&D6aG(j{$G(t2qG%+<cH8V6uG(j~nH90jmH90dhH8V9qG&eLkH90jkGc+|cG(t5sG(|NsH8C|dG(s~oH8eCtG(|HtG&nUiG(<HuH8eFgG(s~qH8wRjH8C|eH8V6tG&eLdG($8vH8V9fGcq+eG)6TtH8wRjG&3|rG%__dG&wakH8M0cG)6Q;G(t5rG(j~sH8wRgG(t2*G&40cG&eLdH8V6dH8(XiGcq(bG)6TtG(t5tG)6NsG&3|pG(|K)G&eOhG)6T!H9<8pG(t5tG&40eG&MCgGcz<cG(|NsG&VFeG(t5wG(t2rG&wXuG&nUjG)6TtH8V3ZG(j{rG(j~tGcq$ZG&40bG(j~sH8(UjH90jlH8V9qG&eLkGc+|eG&40dH8V9gG($8tGc+_dG(t2)G&40bG(|HtG(j{qG)6TyH8V6hG(t2*H8wRjH8C|aGcz<YH83<mG&D3dG(t5uG(t5vG)6TtH8?aiGc+|eH8V6bG&wakH8C|cH8C|eH8V9dG(<HvG($BvG)6NuGcq+bG(|NsH8nIgG&eOhGcq(bG)6TtG&MCgG(t5uG&D3sG(|K)H8C|bG&MCfH8eFcG(t2*Gc`0dG(t2*G($8tG(|NsG&VFeG(t5tGcz<pG(t5&G&nRhGcq$WGcq$WG(j{rG(j~tGcq(qG($8)G(<EuG&D6fG&M6cH8V9qG&eLkH90jmH8V9iH8V6eG)6QsGcz<cG(s~oH8eCtG(|HtG&eOhG(t2*G(t5&G($8&G&40fH8C|bG&40cG&wavG&D3cG(t5uH8V6fG(t5&H8?aiGc+|aG(j~oG&eOtH8V9eG(<BqG&40cG(<HvG($BvH8C?bG&3_YG(t5pG&nRhG)6TwGcq(cG(|K;Gc`0eG&MCgGcz?cG($8pG(j{rG)6TvH8eFfG(t5tH8wRiG&MCjG($8pG&wavG&VFeG(t5wG(t2vG&wavH8(UhGcq(pG&D6aG(j{rG(j~qG%+<nG&D6hG(j{(H9<5sG&MCcH8V3ZG&wUhH90glH8nLhG(j~pG(|KqGcq(bG(s~oH8eCtG(|N*H8C|bG%++rG(t2rG(<E(G&40fH8C|bG&40bG(j{nH8nIfG)6TyH8V6fG(t5&H8wOiG&MCgH8V6qG&wakG($BvGcq$aG&40cG(<HvG($BvH8C_rH8V3ZG(|NvGcq+bG)6TwGcq(cG(|K;Gc`0eG&MCgGcz?cG(s~qG&eOhG)6T!H9<8oG(t5pG(<EwG%++qG&D3dG&wavG&VFeG(t5wG(t2vG&wavH8(UhGcq(pG&3_YG(j{$G(t2qG&40dH8V6cG(<E-G($BtG(s~qGcq$WH83<mG(j{sG&40eH8V9fG&eOeGcz?dG(s~oH8eCtG(|N*H8C|bG%++rG(t2rG(s~qH8wRjH8C|eH8V6tG&eLkGc+_bG&wakGcq+bG&wXuH8wOiG&M9tH8V6tH83<mG&nRiH8C|eH8V9eG(t2%G&D6gH8C?ZGcq+cG(t5pG&nRiG&eOhGcq(bG)6TtG(t5tG)6NsG&3|pG(j~oH8C|bG&MCeH8eFfG(s~qH8(UiG(t2*G($8rG(t5&G&nRhG(t5wG(j~qG(<HrH8nIhG&MCgG&3|eG(j{$G(t2qG%+<dH8V3ZG(j~sH8(XiGc+|aH8V9qG&eLkGc+|dH8(XiH8V6gG(<HrGcq(bG(s~oH8eCtG($8&G&eOhG(t2)G(t2vG(s~qH8wRjH90jkG&40bG(t5sGcq(ZG&wakGcz<qG(t5&H8?aiGc+|aH8V3ZG)6QwG($BvH8nLcH8V9dG(<HvG($8vG%+(YGcq+dG&wakH8V6eG&eOhGcq(bG)6TtG&3|dG(t5tG&40bG(|K;H8C|bG&MCeH8eFhG(t5tG&40eG(<BqGcq(qG(|NsG&MCiH8V9fG&D3uG(|KrG&eLgGcq$XG&3|pG(j{rG(j~qG%+(WG&40bG(j~sG(t5vG%+(YH8V3ZH83<mG(j{sH8(XhG(t2rG(|NsGcz?dG(s~oH8eCtG(<EuG(t2tH90jhG($B(G($8&G&40fH8C|eH8V6tG&eLdG($8vH8V9fH8M3aG(t5&H8?aiGc+|aG(j~oG&eOtH8V9eG(<BqG&40dG(t2%G&D6gH8C|ZG(s~nG(|K;H8V6dGd49fGcq+cG&nRiG&D3eG&wUeH8eCiG($8&G&eOhG)6T!H9<8oG(t5&H8(XlG%+(YGcz<YG&eLhG&VFeG(t5wG(t2vG&wavH8(XkG&M6aH9<8tG(j{$G(t2qG%+(WG&D3rG(t5sH90jmGd43dGcq+nG&eLkGc+|fH8(XiH8V6eG(|NsGc+_dG(s~oH8eCtG($8&G&eOhG(t2)G(t2vG(t5pH8wRjH90jkG&40bG&wajH90giG&walG($8*G(t5&H8wOiG&MCgH8V3ZG)6Q*G($BvGcq(pG(t5rG(j~sH8(UhG(s~qGcq+bG&eLhH8V6fG&40dGcq(cG(|K;Gc`0eG&MCgH9<8&G($8&H8C|bG&MCeH8eFiG(t5pH8(XlH8C|ZGcz<cG(|NsG&nRhG(t5wG(j~qG(<HrH8nIhG&MChG&D3hG(j{rG(j~tGcq(qG($8)G(t5&H8(UkG%+<cH8V3ZH83<mG(j{sG&40eH8V9fG&eOiGcz?dG(s~oH8eCtG(|HtG&nUiG(<HtH8M3eG(<E(G&40fH90jkG&40bG(t5sGcq(ZG&wakGcq+eG)6TtH8wOiG&MCgH8V9cG(t5&G(t2tGcq$aG&40dG(t2%G&D6gH8C?ZGcq+cG(|NvH90jmG&40dGcq(bG)6TtG&MCgG(t5tG&3|eG(|K;G(j{rG)6T!H9<8oG($8&G&3|cG(<HsGcz<aG&wavG&VFeG(t5tGcz<pG&eOiG(j{qGcq$XG&3_YG(j{rG($BuG&waiH8eFhG(j^pG&D3fG&wakH8V9qG&eLkH90jmG&40eH8V9iG(|KrGcz<cG(s~oH8eCtG(<EuG($8rG&40bH8eFfG(t5&H8wRjH8C|bG&40cG&wavG&40gH8C|eH8V6eG(t5&H8wRjG&3_ZG(t5uG)6QwH8V9eH8C?YG&40dG(t2%G&D6gG&wXyH8V9fG&wakG(|KwGd49fGcq(bG)6TtG&MCgG(t5tG&3|eG(|K;G(j{rG)6TvH8eFfG(s~qH8(UiG(t2*G($8qG&wavG&VFeG(t5wG(t2vG&wavH8(XkG&M6aH9<8tG(j{rG(j~qG%+<nG&D6hG(j~vH9<5rGc+?aH8V9qG&eLkGc+|fH8C|gH8eCrG(t5wGcq(bG(s~oH8eCtG(t5&H8M3fH8(RgG&3|fG($8&G&40fH8C|aGcz<YG(|NsG&D3cG&eOiGcq+eG)6TtH8wOiG&M9tG(t2pG&wavH8C|cG&wahH8V9dG(<HvG($BvG&wUgH8V9fG(s~pGcq+cG)6TwGcq(bG)6QsH9<5rGcq+cG(t5qG($8&G&eOhG)6T!H9<8oG(t5&H8(XlG%+<aGcq+nG(t5&G&nRhG(t5uH8M3cG)6QsG&wakG&M6eH8V6fG(j{rG(j~qG%+<nG&D6hG(j~vH9<5rGcq$ZGcq$WH83<mG(j{rG)6T!G($8+H83<XGcz?dG(s~oH8eCtG(|HtH8M3eG)6TyH8eFfG(j^pG(t5uH8C|bG&40fG&wavH90gkG&eOjG($5oG&wXuH8?aiGc+|eG(j~oG(j{nH8M3dH8C|bH8V9dG(<HvG($BvH8C_rH8V3ZG(|NvH90giG(t5sGcq+cG&nRiG&M9fG(<BpGcq+ZG(|K;G(j{rG)6TvH8eFhG(t2*H8wRiG&M6bH8eCcG(t5&G&VFeG(t5tGcz<rH83<XG(t5sGcq$XG($8wG(j{rG(j~qG%+(WG&40bG(<HvG(t5vG&wakH8V9qG&eLkGc+|fH8(XiH8V6eG(|HtGc+|eG(s~oH8eCtG(|N*H8C|bG%++rG(t2rG(s~qH8wRjH8C|aGcz<YG(|NsG&D3cG&eOiGcz<rG)6TtH8?aiGc+|aH8V6eH83<mH8V9eG)6NsG&40cG(<HvG($8uH8(RgGcq+bG(t5tH8V6dGd49fGcq(bG)6QsGcq+cH8nLdGcz<fG(|K;H8C|bG&MCeH8eFfG(t5pH8wRiG&MCbGcz<ZG(|NsG&nRhG(t5wG(t2sG(t2%H8(XjG&M9tG(s~nG(j{$G(t2qG%+<dH8V3ZG(j~sH8(UkG%+<cH8V9qG&eLkGc+|fH8(XiH8V6fG(t5&Gcq(bG(t2)G&40bG(|HtG&eOgG&40dG($B(G(<E(G&40fH8C|aGcz<YH83<mG&D3dG(t5tGcz<oG&wXuH8?aiGc+|aH8V3ZG)6QwH8M0cG)6NtG&40cG(<HvG($BvG)6NuGcq+bG(|NsH8nIgG&eOhGcq+cG&nRiG&D3dGcq+ZG&D3dG($8&G&eOhG)6TvH8eFiG(t5pH8(XlG&eLvG(t2*G(|NsG&VFeG(t5tGcq+bG&wXuG&nRiG&M9tG%__dG(j{rG(j~qG%+<bH8M3dG(t2*G($BuG&M6cH8V9qG&eLkGc+|dH8(XiH8V6gG(<BsGc+|eG(s~oH8eCtG(t5&H8M3fH90jgH8V6hG(t2%H8wRjH8C|eH8V6tG&eLdG($8vH8V9fGcq+eG)6TtH8wOiG&M9tH8V3ZG&wavG&nRiG&wahH8V9eG(t2%G&D6hG&wXxGcq+nG(s~pH90jjG%+<bGcq(cG)6QsG&40eG(t5tG&40fG(<EuH8C|bG&MCfH8eFcG($8sH90jkGc+_rG&D3aG(|NsG&VFeG(t5tGcz<sG(t5&G($8uG&MCgGcz?gG(j{rG(j~tGcq$ZG&40bG(j~sH8(UkG%+(YH8V9qG&eLwG%_?bGd49jH8V6fG(j{qH90gkG(s~oH8eCtG($8&G&eOhG(t2)G(t2vG(s~qH8wRjH8C|bG&40cG(j{nH8nIfGcq+dG(j~pG)6TtH8wOiG&M9tH8V6fG)6TxH8V6dH8C?YG&40cG(<HvG($BwG&eIgG(t5uG(|K;H8nIhG&40dGcq+cG&nRiG&M9fG(<BpGcz<bG(|KrG(j{rG)6TvH8eFhG($8&G&40eG&MCdH8eCdG(t5&G&nRhG(t5wG(t2rG(j~%G($8uG&MCgGcz?gG(j{rG(j~tGcq$YGcz?fG(j~sH8(UjH90dhH8V3ZG&wUhH90glH90joG($8-G(|KrH90gkG(s~oH8eCtG(<EuH8M0cG(<HuH8V6hG(<EuG&40fH8C|aGcz<ZG(t5pG($8tG&walG(t5tG(t5&H8wOiG&M9tH8V9cG&wakG($8uH8nLfH8V9dG(<HvG($BvG)6NuGcq+bG(s~pGcq+cG&eOhGcq(bG)6TtG&40fG(t5pG($8*G(|K)H8C|bG&MCeH8eFfG($8tH8(XlH8C|dGcz<aG(|NsG&VFeG(t5tGcz<pG&eOiG(j{qGcq$XG(t5qG(j{rG(j~qG%+<nG&D6hG(j{(H9<5rGcq$ZGcq+nG&eLkGc+|fH8C|gH8eCvG(t2vGcq+cG(s~oH8eCtG(|HtH8M3eG)6TyH8eFgG(t5tH8wRjH8C|eH8V6tG&eLdG($8vG(<HwG(j~oG(t5&H8wOiG&M9tG&D6aG&wakG(|KtG&eOdH8V9dG(<HvG($BvG&eLwG&40eG(|NsH8nIgG)6TwGcq(bG)6QsH9<5sG(t5tG&3|pG(<EuG($8tG)6T!H9<8oG($8tH8(XlG&wanG($8pG&eLhG&nRhG(t5wG(t2tG(<HrG&wXjG)6TtG(s~nG(j{rG(j~tGcq(pG(t5vG(t5pG($BtG(s~qGcq$WG&wUhH90gjH90jjG(j~qG(|KrGcq(bG(t2)G&40bG(|N*H8M0bG&40pG&3|gG(<E(G&40fH90jkG&40bG(|NsH8wRkH8V9fGcz<qG(t5&H8wOiG&eOeG(j~sG)6Q<G(j{sGc+?ZG&40cG(j~sH8wRgG&wXxH8V9fG&wakH8V6dGd49fGcq(bG)6TtG&MCgG&wUeG($BtG(|KvG&eOhG)6T!H9<8oG(s~qH8(UiG(<HtGcq(qG&wavG&VFeG(t5uH8e9aG(|KrG(j~sG)6TtH8V3ZG(j{rG(j~tGcq(pG(t5vG(t5tG&D3fGd43dGcq+nG&eLkH90jkGc+|cG(t5sG(|NsH8nIgG(s~oH8eCtG($8&G&eOhG(t2)G(t2%G(t2sH8wRjH8C|bG&40cG&wajGcq(dG&MChG(j~oG(t5&H8?aiGc+|aGcq+YH83<XG(j~tGc+|aH8V9eG(t2%G&D6gH8C|ZG(s~nG(|K;H8V6dG)6TwGcq(cG(|K;Gc`0fG&M6eH8eCiG($8pG($8tG)6TvH8eFfG(s~qH8(UiG(<E-G&D3bG&eLhG&VFeG(t5tGcq+bG&wXuG&nRiG&M9tH8V9cG(j{$G(t2qG%+<dH8V3ZG(j~%G($8vG%+(YH8V3ZG&wUhH90glH90joG($8-G(|KqH9<5sG(s~oH8eCtG(<EuG&eOgG&40pG&3|oG(t5&H8wRjH90jkG&40cG&wUhG(j{rG&40fG(t5uG(t5&H8wOiG&MCgH8V9cG(t5&G(t2tGcq(qG(t5sG(t2%G&D6gH8C?ZGcq+cG(|NvH90jkH8(XiGcq(bG)6TtG&MCgG(t5tG&3|eG(j{)H8C|bG&MCeH8eFfG($8tH8(XlH8C|dGcz<aG(t5&G&VFeG(t5wG($5oG(j{$G(t5uG&M6bG&D6aG(j{rG(j~tGcq$YG&40bG(<HqH90jmH8(RgGcq+nG&eLkGc+|eG&40dH8V9hG(<BsGc+|eG(s~oH8eCtG(|N*H8C|bG&40aH8eFgG(s~qH8wRjH8C|bG&40fG&wavH90gkG%+<dH8V6fG(t5&H8wRjG&3_ZG(t2+G(t5pH8V6dG)6NsG&40cG(<HvG($BvH8C_rH8V3ZG(|NvGcq+bG&eOhGcq(cG(|K;Gc`0eG&MChG&3|pG($8&G&eOhG)6TvH8eFfG(s~qH8(UiG(t2*G($8qG&eLhG&MCiH8V9fG&D3uG(|KrG&eLhG&M9tG&D6aG(j{rG(j~qG&40dH8eCbG(t5&G($BuG&MCcH8V9qG&eLkH90jlG(t5tH8V9fG&eOiGcq+cG(s~oH8eCtG(|HtG&eOhG(t2*G(t5&G(t5&H8wRjH8C|aGcz<YG&eLhG&D3cG(<HwG($5oG&wXuH8wOiG&M9tH8V3ZG&wavH8M3cG&eOdH8V9dG(<HvG($8vG%+(YGcq+dG&wagG&VFhGd49fGcq(bG)6TtG(t5tG)6NsG&40fG(j{$G($8tG)6T!H9<8pG(t5tG&40eG&M6bGcz<bG(|NsG&VFeG(t5wG(t2rG&wXuG&nUjG(t2)G($BpG(j{$G(t2qG%+<aH8eFaG(s~qG($BtH8nLdH8V9qG&eLsGc+_cH90jwG($8-G(|KrGcq(bG(s~oH8eCtG(|N*H8C|bG%++rG(t2%G(t2sH8wRjH8C|aGcz<ZG(t5&G(|KuGc+|fG(t5tG(t5&H8wOiG&MCgH8V3ZG)6Q*G($BvGcq$aG&40cG(<HvG($BvG)6NuGcq+bG(|NsH8nIgG&eOhGcq(cG(|K;Gc`0fG&M6eH8eCiG(|KvG&eOhG)6TvH8eFhG($8tG($BsG&wXxG&D3bG&wavG&VFeG(t5uH8e9aG(|KrG(j~sG)6TtH8V3ZG(j{rG(j~tGcq(pG(t5vG(t5tG&D3gG%+<cH8V3ZG&wUhH90glH90joG($8-G(|KrGcq(bG(s~oH8eCtG(|HtH8M3eG)6TxG($5oG(t2*H8wRjH8C|bG&40bG&eLwG%+<eG&MChH8V6eG(t5&H8?aiGc+|eG(j~oG(j{nH8M3dH8C|cH8V9dG(<HvG($BvH8C?bG&3_YG(|NvGcq+bGd49fGcq(bG)6TtG&3|dG(t5tG&40bG(j{)H8C|bG&MCjH9<8oG(t2)H90gkH8nFcGcz<aG&wavG&nRhG(t5wG(t2tG(<HrG&nRhGcq$WH9<8tG(j{rG($BuG&waiH8V6fG(<E-H8(XiH8nFdH8V9qG&eLkH90jmG&40eH8V9iG(|KrGc+|eG(s~nH8V6qG(j~%H8M3fGcq+dH8V6hG(s~qH8wRjH90jkG&40bG(t5sGcq(ZG&wakGcz<oG&wXuH8?aiGc+|aH8eFbG(t5&G(t2tH8nLeH8V9dG(<HvG($BvH8C?bG&3_YG(|NwH8(UiG)6TwGcq+cG&nRiG(t5uG&wUiH8V6fG(|K)G&eOhG)6TvH8eFhG($8tGc`0dGcq(pG($8sG(t5&G&nRhG(t5wG(t2tG(<HrG&nUkG&M6aGcq$WG(j{rG(j~qG%+<nG&D6hG($8&G($BtGc+|aH8V9qG&eLkH90jmH8V9iH8V6eG)6QsGc+_dG(t2)G&40bG)6Q*H8V6cG&MCcH8eFfG($8&G&40fH8C|bG&40aG&eLhG&VFfG&wajH9<8oG(t5&H8wOiG&M9tH8V9cG&wakG(j~sH8C|ZH8V9eG(t2%G&D6gG)6NvH8V9gG(s~pH90jnG)6TwGcq+cG&nRiG&D3eG&wUeH8eCiG($8&G($8tG)6TwH8eFcG($8sH90jkGc+_rG&D3aG(|NsG&VFeG(t5tGcz<rH83<XG(t5tG&eOeGcq+ZG(j{rG(j~tGcq(pG(t5vG(t5tG&D3fGd43dGcq+nG&eLkH90jmH8(XhG($8)G($8&Gc+|eG(t2)G&40bG(|HtG(t2tH8(UwG&D6qG(t2*H8wRjH8C|bG&40fG&wavH90gkG(<HwH8V6eG(t5&H8?aiGc+|aGcq+YH83<XG(j~tGc+|aH8V9dG(<HvG($8uH90gzH8V9hG&wagG&D3gG)6TwGcq(bG)6TtG&MCgG(t5tG&3|eG(|K;G($8tG)6TvH8eFiG(t5pH8(XlH8C|ZGcq(qG&eLhG&nRhG(t5wG(t2tG(<HrG&wXjG(<E+G(s~nG(j{rG(j~qG%+<bH8M3dG(t2rH9<5rGc+?aH8V9qG&eLkH90jkGd49fH8V6eG(j{$H90jlG(s~oH8eCtG(|N*G&nUiG(<HtH8V6pG(s~qH8wRjH8C|bG&40aG&eLhG&VFfG&walH8V6gG)6TtH8wOiG&eOeG(j~sG)6Q<G(j{rG&wUeG&40cG(<HvG($8uH8(RgGcq+bG(t5tH8V6fG&40dGcq(bG)6QsGcq+cH8nLdH8V3ZG(<EuG&eOhG)6TwH8eFcG($8sH90jkGc+_rG&D3aG&eLhG&VFeG(t5tGcq+bG&wXuG&nRiG&M9tG(t2&G(j{rG($BuG&waiH8V6fG(<ExH90jmH8(RgGcq+nG&eLkGc+|fGcq+bH8V9eG(t5wGcq+cG(s~nH8V6qG(j^pH8V9eG(s~pGcz?oG(t5tH8wRjH8C|aGcz<ZG(|NwG(j{sGd49gGcz<oG&wXuH8wOiG&MCgH8V6qG&wakG(t2tGcq(rG(t5rG(<HvG($BvG&wUgH8V9eG&eLdG&nRjG&40dGcq(bG)6QsGcq(bG(<BqG&3|aG(|KrG(j{rG)6TvH8eFiG(t5pH8(XlH8C|cGcq(qG(|NsG&nRhG(t5wG(t2uH83<XG(j~tG&MCgGcz<fG(j{rG(j~qG%+<aH8V9cG(j~%G&40gG%+(YH8V9qG&eLkH90jkGd49fH8V6eG(j{$H9<8tG(s~oH8eCtG(<EuG(t2tH90jhG($B(G($8&G&40fH8C|eH8V6tG&eLkGc+_bG&wakGcq+bG&wXuH8wOiG&MCgGcq+YH83<bG(j{sH8nLeH8V9dG(<HvG($8vG%+<dG&40eG(|NvH90jlG)6TwGcq(bG)6TtG&MCgG(t5tG&3|eG(|K;G&eOhG)6TvH8eFhG($8&G&40eG&MCdGcz<cG(t5&G&VFeG(t5tGcz<oG(j~%G(<EuG&eOeH8V3ZG(j{rG(j~tGcq(pG%__ZG(t5sH9<5rG(<BrH8V9qG&eLkH90jlG(t5tH8V6fG)6QsH8?dkG(s~nH8V6qG(j^pG&nRjH90jgG($BxG(<E(G&40fH8C|bG&40bG&eLwG%+<aG&eOjG(j~pG)6TtH8wOiG&M9tH8V6fG)6TxG&nRiG&wafH8V9dG(j~sH8wRgG(t2*G&40cG&eLdH8nIfG&eOhGcq(bG)6TtG&MCgG(t5tG&3|eG(|K;H8C|bG&MCeH8eFhG($8&G&40eG&MCgGcz<bG&eLhG&VFeG(t5uH8M3bG)6TtG&wXjG&eOeH8eFbG(j{rG(j~tH90jjH8e9aG(j^pG&D3fG&wakH8V3ZH83<mG(j{rG)6T!G($8)G&eOiH8nIgG(t2)G&40bG(|N*H8V9gH90jgH8V6hG(j~sG(t5uH8C|bG&40bG&eLwG%+<aG&eOjG($5oG&wXuH8wOiG&MCgG(j~sG&wakG&walGcq$aG&40dG(t2%G&D6gH8C|eG&40dG&eLhH8V6fH8(XiGcq(bG)6TtG(t5tG)6NsG&3|pG(|K)G&eOhG)6TwH8eFcG($8sH90jkGc+?ZGcz<YG(t5&G&VFeG(t5wG(t2rG&wXuG&nRjG&40eGcz?gG(j{rG(j~tGcq$YG&40bG(<HqH90jmH90dhH8V9qG&eLkGc+|fGcq+bH8V9hG(<BsGcz?dG(t2)G&40bG(|HtG($8rG%++qG($BtG(t5&H8wRjH8C|bG&40bG(j{nH8nIfH8nLiH8V6eG(t5&H8?aiGc+|aH8V3ZG)6QwH8M0cH8C?XG&40cG(<HvG($BvG)6NuGcq+bG(|NsG&nRjG&40dGcq+cG&nRiG&MCgH8nLdH8V6uG(|KrH8C|bG&MCjH9<8oG(t5tG(t2rGc+_sG&D3aG(t5&G&VFeG(t5tGcq+bG&wXuG&nRiG&M9tG&3_YG(j{rG(j~tGcq(pG(t5vG(t5pG($BtG(<HrH8V9qG&eLkH90jlG)6T!G(j~oG)6QsGcq(bG(s~oH8eCtG(<EuG&eOgG&3_ZG&40hG(<HvG&40fH90jkG&40bG(|NsH8wRgG&40eGcz<rG)6TtH8wOiG&M9tH8V9cG&wakG($8tG)6Q;G(t5sG(t2%G&D6gG)6NvH8V9gG&wagG&VFiG&eOhGcq(bG)6QsH9<5rGcq+cG(t5qG(<EuG&eOhG)6T!H9<8oG(s~qH8(UiG(<HyG($8pG(t5&G&VFeG(t5wG(t2rG&wXuG&nUjG(t2)G($BpG(j{rG(j~tGcq(pG%__ZG(t5&H8(XiG(<BrH8V9qG&eLwG%_?bGd49jG($5oG(t5tGc+|eG(s~oH8eCtG($8&G&eOhG(t2)G(t2vG(t5pH8wRjH8C|bG&40bG(j{nH8nIfH8nLiH8V6gG)6TtH8wOiG&M9tG&D6aG&wakH8C|cG&wahH8V9dG(<HvG($8tG(<BtG(t5rH83<mG&nRhG&eOhGcq(bG)6TtG&MCgG(t5tG&3|eG(|K;G($8tG)6TvH8eFhG($8tGc`0dGcq(pG($8sG&eLhG&nRhG(t5wG(j~qG(<HrH8nIhG&MChG&3|aG(j{rG(j~tH90jjH8e9aG(j^pG&D3fH90dhH8V3ZG&wUhH90glH8nLhG(j~qG(t2%H90jlG(s~oH8eCtG(<EuH8V6eG(<HvH8eFfG(<E(G&40fH8C|aGcz<YH83<mG%+<aG&40eGcz<qG(t5&H8wRjG&3_YGcz?bH83<mH8V9eG)6NvG&40cG(<HvG($BvH8C?bG&3_YG(|NvH90giG(t5sGcq(bG)6TtG&40fG(t5pG(s~nG(|K;G($8tG)6TvH8eFhG(t2*H8wRiG&M6bGcq(qG&wavG&VFeG(t5wG($5oG(j{$G($BuG&3|rG&3_YG(j{$G(t2qG&40dH8M3cG(j~%G&D6eH8V3cGcq+nG&eLkGc+|fH8nLfG($5oG(t5wGcq(bG(t2)G&40bG(|N*H8M0bG&40fH8V9iG(<E(G&40fH8C|bG&40bG(j{nH8nIfH8nLiH8V6eG(t5&H8wRjG&3_ZG(t5uG)6QwH8V9eG(<BrG&40cG(<HvG($8vG%+(YGcq+dG&wakH8V6fGd49fGcq(bG)6QsH9<8tG)6NrGcz<bG(<EuG($8tG)6TvH8eFhG($8&G&40eG&MCgGcq(qG(t5&G&nRhG(t5wG(t2uH83<XG&wXjG(<E+G&3_YG(j{rG(j~qG%+(WG%__cG(t5pG&D6eGc+?aH8V9qG&eLkGc+|fH8(XiH8V6eG)6QrGcz<cG(s~oH8eCtG(<EuH8M0cG(<HuG($B(G(t5&H8wRjH90jkG&40bG&eLhG(|KuH8C|dGcq+eG)6TtH8wOiG&M9tH8V6fG)6TxH8V6dH8C?YG&40cG(<HvG($BvH8C?bG&3_YG(|NvGcq+cG&eOhGcq(cG(|K;Gc`0eG&MCgGcz?cG($8pG($8tG)6TvH8eFfG(t5pH8wRiG&MCbGcq+eG(|NsG&VFeG(t5wG(t2vG&wavG(<HwG&M6aGcq(nG(j{rG(j~tGcq$ZG&40bG(<HvH8(UjGd43dGcq+nG&eLsGc+_cH90jwG($8-G(|KrH8C|dG(t2)G&40bG(|HtG($8rG%++pG&D6iG(<E-G&40fH90jkG&40bG&wajH90giG&walG($8*G(t5&H8wOiG&M9tH8V6fG)6TxH8V6dH8C?ZG&40dG(t2%G&D6gH8C|eG&40dG&eLhH8V6gG&eOhGcq(bG)6TtG&M9gG&eOdGcz?cG(|KvG&eOhG)6TvH8eFiG(t5pH8(XlH8C|ZGcz<cG(|NsG&nRhG(t5wG(j~qG(<HrH8nIhG&MChG&D3hG(j{rG(j~qG%+(WG&40YG(j{(H9<5rH8V3cGcq$WH83<mG(j{sG&40eH8V9fG&eOeGcz?dG(s~oH8eCtG(|HtG&nUiG(<HtH8V6pG(t5tH8wRjH8C|aGcz<ZG(t5&G(|KvG&40fG(t5tG(t5&H8wOiG&M9tH8V9cG&wakG(j~sH8C|ZH8V9dG(<HvG($BvG)6NuGcq+bG(|NsG&nRjG&40dGcq(bG)6TtG&3|dG(t5tG&40bG(j{)H8C|bG&MCeH8eFfG(t5pH8wRiG&MCbGcz<ZG(t5&G&nRhG(t5wG(t2sG(t2%H8(XjG&M9tG&D6aG(j{rG(j~tGcq$YG&40bG(<HqH90jmH90dhH8V9qG&eLkH90jmG&40eH8V9iG(<BsGc`0eG(s~oH8eCtG(t5&H8M3fH90jgH8V6hG(t2%H8wRjH8C|aGcz<ZG(t5&G(|KvG&40fG(t5vG)6TtH8wOiG&M9tG&D6aG&wakG(|KtG&eOfH8V9dG(<HvG($BwG&eIgG(t5uG(|K;H8nIgG&eOhGcq+cG&nRiG&40dGd49gGcz<fG(|KrG($8tG)6TwH8eFcG(t2*Gc`0dGc+_sG&D3aG&wavG&nRhG(t5wG(t2uH83<XG(j~tG&MCgG($BpG(j{rG(j~qG%+(WG&40bG(j~sG(t5vG%+(YH8V9qG&eLkGc+|dH8(XiH8V9fG(|HtGc+|eG(s~nH8V6qG(j^pH8V9eG(s~pG&3|gG(t2%H8wRjH8C|aGcz<YG(|NsG&D3cG&eOiGcq+bG&wXuH8wOiG&M9tG(t2pG&wavH8C|cG&wahH8V9dG(<HvG($BvG&wUgH8V9eG&eLdH8nIhG&40dGcq(bG)6QsG(t2tG&eLvH8M3pG($8pG($8tG)6TwH8eFcG($8sH90jkGc+_rG&D3aG&eLhG&VFeG(t5tGcz<oG(j~%G(|KvG(<E+H8V9cG(j{rG(j~tGcq$aG&D3aG(t2vH9<5rG(<HrH8V3ZH83<mG(j{qH90jkH8eCuG(|KrGcz?dG(s~nH8V6qG(j^pH8V9eG(s~pGcz?oG(t5pH8wRjH8C|aGcz<ZG(t5pG($8tG&walG(t5uG(t5&H8wOiG&MCgH8V6qG&wakG($BvGcq(pG(t5rG(<HvG($BwG&eIgG(t5uG(|K;H8nIhGd49fGcq(bG)6QsH90jlG&wUeH8eCiG(|K)G(j{rG)6TvH8eFhG(t5tG&40eG(<HvGcq(qG(t5&G&nRhG(t5wG(t2sG(t2%H8(XjG&M9tG&D6aG(j{rG(j~tGcq$YGcz?gG(t2%G&D6eG(<BrH8V3ZH83<mG($8tG&40dH8V6gG(|KqH9<5sG(s~oH8eCtG(|HtG&eOhG(t2*G(t5&G(t2sH8wRjH8C|bG&40bG(j{nH8nIfG)6TyH8V6dG&wXuH8wOiG&MCcG($BtG&eOiH8V6dH8C?XG&40cG(<HvG($8uH8(RgGcq+bG(t5tH8V6fH8(XiGcq(bG)6QsGcq+cH8nLdGcz<fG(|K;H8C|bG&MCeH8eFfG(t5&G&D3eG(<HtGcz<aG&wavG&nRhG(t5wG(t2tG(<HrG&wXjG(<E+G($BpG(j{rG(j~tGcq$ZG&40bG(<HvH8(XjG&MCgH8V9qG&eLkGc+|fGcq+bH8V9iG(t2vGcq+cG(s~oH8eCtG(<EuH8M0cG(<HuH8V6hG(<EuG&40fH8C|aGcz<YH83<mG%+<aG&40fH8V6eG(t5&H8wOiG&MCgG(j~nH83<XG&nUjG(<BrG&40cG(<HvG($BvH8C?bG&3_YG(t5pG&nRhH8(XiGcq(bG)6TtG&3|dG(s~nGcq(rG(|K;G($8tG)6TvH8eFfG($8&G&3|cH8nLdGcz<aG&wavG&nRhG(t5wG(t2tG(<HrG&nUkG&MCgH8eFbG(j{rG(j~qG%+<bH8M3dG(t2%H8(XjG&MCcH8V3ZH83<mG($8sGc+|dH8M3cG&wXmH90gkG(t2)G&40bG)6Q*H8V6cG&MCcH8eFfG(<HvG&40fH90jkG&40bG(|NsH8(UgG(<HvH8M3bG)6TtH8?aiGc+|aG(j~oG&eOtH8V9eH8C|cH8V9dG(<HvG($BvH8C?bG&3_YG(t5pG&nRhH8(XiGcq(bG)6TtG(t5tG)6NsG&40fG(j{$G($8tG)6TvH8eFhG(t2*H8wRiG&M6bH8eCdG(t5&G&VFeG(t5wG($5oG(j{$G($8tG)6TtG(j~sG(j{rG($BuG&waiH8V6fG(<ExH90jmH90dhH8V9qG&eLkGc+|fH8nLfG($5oG(t5wH9<5sG(t2)G&40bG(|HtH8M0cG(<HrG($5oG(t5tH8wRjH8C|bG&40cG(j{nH8nIgG%+<bH9<8qG)6TtH8wOiG&MCgGcq(nG)6Q<G($8uGc+|ZH8V9dG(<HvG($BvG&eLwG&40eG&eLdH8nIfGd49fGcq+cG&nRiG&D6fG)6TxG&40fG(<EuG($8tG)6TvH8eFhG($8tG($BsG&wXxG($8tG(|NsG&VFeG(t5wG(t2rG&wXuG&nUjG)6TtH8V3ZG(j{$G(t2qG&40dH8V6cG(<E-G($BtG(s~qGcq+nG&eLkH90jkGd49fH8V6eG(j{$H90gkG(s~oH8eCtG(|HtG&nUiG(<HuH8eFgG(t5pH8wRjH90jkG&40cG&wUhG(j{rG&wakGcz<oG&wXuH8wOiG&MCgG(j~sG&wakG&walGcq$aG&40cG(j~sH8wRgG&wXxH8V9fG&wakH8nIfG)6TwGcq(bG)6TtG&MCgG(t5tG&3|eG(j{)H8C|bG&MCjH9<8oG($8&G&3|cG&3|sG($8rG&wavG&VFeG(t5tGcz<pG&eOiG(j{qGcq$XG(t5qG(j{rG($BuG&waiH8V6fG(<E-H8(UjG&wakH8V3ZH83<mG(j{qGc+|pG($8-G(|KrH90gkG(s~oH8eCtG(|HtH8M3eG)6TxG($5oG(t5pH8wRjH8C|eH8eCfG($8pG&waiG&wakH8M3bG)6TtH8?aiGc+|aH8V3ZG)6QwH8M0cG)6NuG&40cG(<HvG($BvG&eLwG&40eG&eLdH8nIhG&40dGcq(bG)6TtG&3|dG(s~nGcq(rG(|K;H8C|bG&MCeH8eFfG($8&G&3|cG(<HvGcz<ZG(|NsG&nRhG(t5wG(t2tG(<HrG&wXjG(<E+G(s~nG(j{rG(j~qG%+(WG%__cG(t5oH9<5rGcq$ZGcq$WH83<mG(j{rG(t5tH8V6eG&eOiH90jlG(s~oH8eCtG(|HtG&eOhG(t2*G(t5&G(t5pH8wRjH8C|eH8V6tG&eLdG($8vG(<HvGcq+eG)6TtH8wOiG&eOeG(j~sG)6Q<G(t5uH8nLcH8V9dG(<HvG($8vG%+<aGcq+bG&eLhH8V6fH8(XiGcq(bG)6QsGcq(bG(<BqG&3|aG(<EuG($8tG)6TvH8eFfG(t5tH8wRiG&MCeGcz<YG&eLhG&VFeG(t5wG(t2vG&wavH8(UjG(t5tGcz?gG(j{rG(j~qG%+<nG&D6hG(j~vH9<5rGc+?aH8V9qG&eLwG%_?bGd49jH8V6fG(j{rGc`0eG(t2)G&40bG(|HtH8M0cG(<HsH8eFfG(t5pH8wRjH8C|bG&40aG&eLhG&40cG%+<bGcz<rG)6TtH8wOiG&M9tG&D6aG&wavG(j~tH8nLeH8V9dG(j~sH8(UhG(s~qGcq+bG(|NvGcq+cG)6TwGcq(bG)6TtG&3|dG(t5tG&40bG(|K)G(j{rG)6TvH8eFhG($8&G&40eG&MCgH8eCcG(t5&G&VFeG(t5tGcz<qG(<HrG(j~tG&MCgH8V3ZG(j{rG(j~qG%+(WG&40bG(j~sG($BuG&MCcH8V3ZH83<mG(j{rG)6T!G($8+H83<XGcz?dG(s~oH8eCtG(|HtH8M3eG)6TxH8M3eG(t5tH8wRjH8C|aGcz<ZG(|NwG(j{sGd49hG(t5sG&wXuH8wOiG&MCgH8V9cG(t5tG($BvGcq$XG&40dG(t2%G&D6gH8C|eG&40dG(|NvH90jkH8(XiGcq(bG)6TtG&M9gG&eOeG&D3dG(|K)H8C|bG&MCeH8eFhG(t2*H8wRiG(<HsGcq(qG(t5&G&VFeG(t5tGcz<oG(j~%G(|KvG(<E+H8eFjG(j{$G(t2qG%+<nG&40gG(t2vH9<5rG(<HrH8V9qG&eLkGc+|fH8C|gH8V6dG(t5wH9<8tG(s~oH8eCtG(<EuG(j{rG(t2)G&D6qG(s~qH8wRjH90jkG&40fG&wakG&VFiG&MChG(t5tG(t5&H8?aiGc+|aH8V3ZG)6QwH8M0cH8C?XG&40cG(<HvG($8vG%+(YGcq+dG&wakH8V6cG%+<bGcq(cG(|NrGcq+dG&wagG&D3hG(<EuH8C|bG&MCjH9<8oG(t5tG(t2rGc+_sG&D3bG(|NsG&nRhG(t5wG(t2uH83<XG(j{qGcq(pG($BpG(j{rG(j~qG%+(WG&40bG(<HvG($BuG&M6cH8V3ZH83<mG($8sGc+|dH8M3cG&wXuGc`0eG(s~oH8eCtG(|HtH8V9gGcq+dH8eFfG(j^pG(t5uH90jkG&40bG&eLhG(|KuG(t5uH8V6eG(t5&H8wOiG&M9tG(t2pG&wavG($8uH8nLdH8V9dG(<HvG($BvG&wUgH8V9eG&eLdH8nIfH8(XiGcq(bG)6QsH90jlG(t5uG&D3dG($8&H8C|bG&MCjH9<8oG(s~qH8(UiG(<HyG($8qG(t5&G&VFeG(t5wG(t2rG&wXuG&nUjG(t2)G($BpG(j{$G(t2qG%+(WG&D3rG(t5sH9<5rG(<BrH8V3ZH83<mG(j{rG&MCeG(j~qG(|KrH8?dkG(s~nH8V6qG(j^pG&nRjH90jgH8V6gG(<E(G&40fH8C|bG&40cG(j{nH8nIgG%+<dG($5oG&wXuH8wOiG&MCgH8V6qG&wakG(t2tGcq$YG&40cG(<HvG($8vG%+(YGcq+dG&wagG&VFiG)6TwGcq(bG)6TtG&MCgG(t5tG&3|eG(|K;G(j{rG)6TvH8eFhG($8&G&40eG&MCgH8eCcG(t5&G&nRhG(t5uH8eFrG&nRiG(|KvG(<E+H8eFjG(j{rG($BuH8C?YG%__YG(j^pG&D3gG%+<cH8V3ZH83<mG(j{rG)6T!G($8*G)6QsH90gkG(s~oH8eCtG(<EuG&eOgG&3_ZG&40hG(<HrG&40fH90jkG&40bG(t5sGcq(ZG&wakGcq+bG&wXuH8?aiGc+|aH8V6fG&eOtG&nUjG(<BrG&40cG(<HvG($8uH8(RgGcq+bG(t5tH8V6dGd49fGcq(bG)6TtG&40fG(t5pG($8*G(|K;H8C|bG&MCeH8eFhG(t2*H8wRiG(<HsGcq(qG(|NsG&VFeG(t5wG($5oG(j{$G(t5uG&M6bG&3_YG(j{rG($BuG&waiH8V6fG(<E-H8(UjH90dhH8V9qG&eLkGc+|fH8nLfG($5oG(t5wH9<8tG(s~nH8V6qG(j^pH8V9eG(s~pGcz?oG(t2*H8wRjH8C|gG(t5qG&wavG&40cG&40eGcz<rG)6TtH8wRjG&3_ZG(t2+G(t5pH8V6dG)6NtG&40cG(<HvG($8vG%++pG(t5uG(s~pH90jnG&eOhGcq(bG)6QsH9<5rGcq+YG&40fG(<EuH8C|bG&MCeH8eFhG(t5tG&40eG(<HsGcz<bG&eLhG&MCiH8V9fG&D3qG($8&G&wakG&M9tG&D6aG(j{rG(j~qG%+<bH8M3dG(t2%H8(XjG&MCgH8V9qG&eLkH90jmG&40eH8V9eG(|NsGcz<cG(s~oH8eCtG)6Q*G&eOjH90jmH8V6pG(s~qH8wRjH90jkG&40bG&eLhG(|KuH8C|dGcz<qG(t5&H8wOiG&M9tH8V9cG&wakG(j~sH8C|YH8V9eG(t2%G&D6hG&eLwG&40dG&eLdH8nIhG&40dGcq(bG)6QsG(t2tG&eLvGcq(nG(|K)G($8tG)6TvH8eFfG(t5tH8wRiG&MCeGcz<YG&wavG&VFeG(t5wG(t2rG&wXuG&nUjG(t2)G($BpG(j{rG(j~tGcq$YGcz?gG(t2%G&D6eG(<HvH8V3ZH83<mG(j{rG)6T!G($8+H83<XGcq(bG(s~oH8eCtG(<EuG(j{rG(t2)G&D0ZG(t5&H8wRjH8C|bG&40cG(j{nH8nIfGcq+dG(j~pG)6TtH8wOiG&MCgH8eFbG(t5&H8V9eG)6Q=G(t5rG(<HvG($8vG%+<aGcq+bG(|NvH90jkH8(XiGcq(bG)6TtG&3|dG(s~nGcq(rG(|NsG(j{rG)6TvH8eFhG($8tG($BsG(t2)G&D3eG(t5&G&VFeG(t5wG(t2vG&wavH8(XkG&M6aGcq$WG(j{rG(j~tH90jjH8e9aG(<ExH90jlH8V3cGcq+nG&eLsGc+_dH8V9dG(t5sG(|NsH90jlG(s~oH8eCtG(|HtG&eOhG(t2*G(t5wG(j^pG(t5uH90jkG&40fG(j{nH8M3gH8C|eG(j~pG)6TtH8wRjG&3_ZG(t2+G(t5pG(t5uGcq+YH8V9dG(j~sH8wRgG(t2*G&40cG(|K;G(|KwH8(XiGcq+cG&nRiG&40eG&wakG&D3hG(|KvG($8tG)6TvH8eFhG($8tG($BsG(t2)G&D3eG(t5&G&VFeG(t5wG($5oG(j{$G($BuG&3|rG&3_YG(j{rG(j~qG%+<aH8V9cG(j~%G&40gG&wUgH8V9qG&eLwG%_?bGd49jH8V6eG($8wGcz<cG(s~nH8V6qG(j^pH8V9eG(s~qG&3|gG(t2*H8wRjH8C|bG&40cG&wajGcq(dG&MChG($8+G)6TtH8?aiGc+|aH8V3ZG)6QwG($BvGc+?YG&40cG(<HvG($BvH8C?bG&40gG&wUgGcq+bG&eOhGcq+cG&nRiG&D6fG)6TxG&40fG(<EuG($8tG)6TvH8eFhG($8tGc`0dGcq(pG($8sG&eLhG&MCiH8V9fG&D3qG($8&G&wajGcq$XG(t5qG(j{rG(j~qG%+<bH8M3dG(t2%H8wRkG&wagH8V9qG&eLkH90jkGd49fH8V6eG(j{$Gcq(bG(t2)G&40bG)6Q*H8V6cG&MCcH8eFfG(<HrG&40fH8C|aGcz<YG(|NsG&D3cG&eOiGcq+eG)6TtH8wOiG&MCgH8eFbG(t5&H8V9eG)6Q=G(t5rG(<HvG($BvG)6Q<G&40eH83<mG&nRiG)6TwGcq+cG&nRiG&D3eG&wUeH8eCiG(<EuG(j{rG)6TwH8eFcG($8&G($BwG%++qG&D3eG&wavG&VFeG(t5wG(t2rG&wXuG&nUjG(t2)G($BpG(j{$G(t2qG%+(WG&D3rG(t5tG&D6eG(<HvH8V9qG&eLkH90jlG(t5tH8V6gG)6NuGcz?dG(t2)G&40bG(|HtG($8rG%++qG($BtG(s~qH8wRjH8C|bG&40fG&wavH90gkG(<HwH8V9fG(t5&H8?aiGc+|aH8V9cG(t5tG(t2tGcq$YG&40cG(<HvG($8vG%+(YGcq+dG&wagG&VFgG&eOhGcq+cG&nRiG&D6fG)6TxG&40fG(<EuG(j{rG)6TvH8eFhG(t5tG&40eG(<BqGcq(qG(|NsG&VFeG(t5uH8M3bG)6TtG&wXjG&eOeH8V6qG(j{$G(t2qG%+<fH9<8pG(t2vH90jmH8(RgGcq+nG&eLkGc+|fH8(XiH8V6fG($8tGc+|eG(s~oH8eCtG(<EuG&eOgG&3_ZG&40hG($8&G&40fH8C|aGcz<ZG&wavH90gjH8C|dGcz<oG&wXuH8wOiG&eOeG(j~sG)6Q<G(t5uH8nLfH8V9dG(j~sH8wRgG(t2*G&40cG&eLdH8V6dH8(XiGcq(bG)6TtG(t5tG)6NsG&3|pG(|K)G&eOhG)6TwH8eFcG($8sH90jkGc+_rG&D3aG(|NsG&nRhG(t5wG(t2vG(t5&G(t5tG&M9tG(t2&G(j{rG($BuG&waiH8eFhG(j^pG&D3gG%+(YH8V9qG&eLkGc+|fGcq+bH8V9iG(t2sGc+|eG(t2)G&40bG(|HtG(j{qG)6TyH8V6hG(t2*H8wRjH8C|aGcz<YH83<mG&D3dG(t5tGcz<rG)6TtH8?aiGc+|aH8eFbG(t5&G($BvGcq$YG&40cG(<HvG($BvG&wUgH8V9eG&eLdG&nRjG&40dGcq(bG)6TtG&3|dG(s~nGcq(rG(|K;G&eOhG)6TvH8eFeG(t2)H9<8uH90gyG&D3eG&wavG&VFeG(t5tGcz<pG(t5&G&nRhGcq$WGcq$WG(j{rG(j~qG%+(WG%__cG(t5oH9<5rGcq$ZGcq+nG&eLkH90jlG)6T!G(j~oG)6QsH9<8tG(s~oH8eCtG(|HtG&eOhG(t2*G(t5&G(t5tH8wRjH8C|eH8V6tG&eLkGc+_bG&walG($8(G&wXuH8wOiG&M9tH8V6fG)6TxG&nRhG)6NvG&40cG(<HvG($BvG)6Q<G&40eH83<mG&nRjG&40dGcq(bG)6TtG&40fG(t5pG(s~nG(j~oG&eOhG)6T!H9<8oG(t5&H8(XlG%+(YGcz<YG(|NsG&VFeG(t5wG(t2vG&wavH8(UhGcq(pG&D6aG(j{rG(j~qG%+<nG&D6hG(j{(H9<5rGc+|eH8V9qG&eLsGc+_cH90jwG(t5vG(|KrG(<HvG(s~oH8eCtG(s~qG(|KwH90jwGcz?oG(t5pH8wRjH8C|bG&40cG&wavG&40gH8C|eG(j~nG(t5&H8wOiG&MCgH8V6qG&wakG($BvGcq(pG(t5rG(<HvG($8uH90gzH8V9hG&wagG&VFfH8(XiGcq(cG(|K;Gc`0eG&MCgGcz?cG(s~qG&eOhG)6T!H9<8oG(t5pG(<EwG%++qG&D3dG&wavG&VFeG(t5wG(t2vG&wavH8(UhGcq(pG&3_YG(j{$G(t2qG&40dH8V6cG(<E-G($BtG(s~qGcq$WH83<mG(j{sG&40eH8V9fG&eOeGc+_dG(s~oH8eCtG(|HtG&nUiG(<HtG($5oG(t2*H8wRjH8C|eH8eCfG($8pG&waiG&wakGcz<qG(t5&H8wOiG&M9tH8V6tH83<mG&nRiH8C|eH8V9eG(t2%G&D6gH8C?ZGcq+cG(t5pG&nRiG&eOhGcq(bG)6TtG&3|dG(t5tG&40bG(j{)H8C|bG&MCjH9<8oG(t5&H8(XlG%+(YGcz<ZG(|NsG&MCiH8V9fG&D3uG(|KrG&eLgGcq$XG&3|pG(j{$G(t2qG%+<dH8V3ZG(j~sH8(XiG(<HrH8V9qG&eLkGc+|dH8(XiH8V6gG(<HrGcq(bG(s~oH8eCtG($8&G&eOhG(t2)G(t2vG(s~qH8wRjH90jkG&40bG(t5sGcq(ZG&wakGcq+eG)6TtH8wOiG&MCgG(j~sG&wakG&walGcq$XG&40cG(<HvG($BvH8C?bG&3_YG(t5pG&MCeG&40dGcq+cG&nRiG&M9eGc+|eG($BpG(<EuH8C|bG&MCeH8eFfG($8&G&3|cH8nLdGcz<aG&eLhG&VFeG(t5wG(t2vG&wavH8(XkG&M6aGcq(nG(j{rG(j~qG&40dH8eCbG(t5&G($BuG&MCcH8V3ZH83<mG(j{rG&40cG($8)G($8&Gcz?dG(s~nH8V6qG(j~%H8M3fGcq+dH8V6hG(t5&H8wRjH90jkG&40bG(|NsH8wRkH8V9fGcq+eG)6TtH8wOiG&MCgGcq+YH83<bG(j{sGc+|bH8V9dG(<HvG($BvG&wUgH8V9eG&eLdH8nIgG)6TwGcq(cG(|NrGcq+dG&eIgG(j~%G($8pH8C|bG&MCeH8eFfG(t5pH8wRiG&MCbGcz<YG(|NsG&VFeG(t5wG(t2vG&wavH8(XkG&M6aH9<8tG(j{$G(t2qG%+(WG&D3rG(t5sH90jmGd43dGcq+nG&eLkGc+|fH8(XiH8V6eG(|NsGc+_dG(s~oH8eCtG($8&G&eOhG(t2)G(t2vG(t5pH8wRjH90jkG&40bG&wajH90giG&walG($8*G(t5&H8wOiG&MCgH8V3ZG)6Q*G($BvGcq(pG(t5rG(j~sH8(UhG(s~qGcq+bG&eLhH8V6fG&40dGcq(cG(|K;Gc`0eG&MChG&3|pG($8&G&eOhG)6TvH8eFfG($8tH8(XlH8C|aGcz<aG&wavG&VFeG(t5tGcz<pG&eOiG&wXjG(<E+G($BpG(j{rG(j~qG%+<bH8M3dG(t2rH9<5rGc+|aH8V3ZG&wUhH90glH90joG($8-G(|KrH90gkG(s~oH8eCtG(|HtG&nUiG(<HtG($5oG(t2*H8wRjH90jkG&40bG(t5sGcq(ZG&wakGcq+eG)6TtH8wOiG&MCgH8V9cG(t5&G(t2tGcq$aG&40dG(t2%G&D6gH8C?ZGcq+cG(|NvH90jmG&40dGcq(bG)6TtG&MCgG&wUeG($BtG(|K)G($8tG)6T!H9<8oG(t2)H90gkH8nLhGcz<aG&wavG&VFeG(t5wG(t2rG&wXuG&nRjG&40fG&3|aG(j{rG(j~qG%+<aH8V9cG(j~%G&D6eGc+|eH8V9qG&eLkH90jmH8(XhG($8)G($8tGc+|eG(s~oH8eCtG(<EuG($8rG&40bH8eFfG(t5&H8wRjH8C|bG&40cG&wavG&40gH8C|eH8V6eG(t5&H8wRjG&3_ZG(t5uG)6QwH8V9eH8C?ZG&40cG(<HvG($BvG)6NuGcq+bG(|NsG&nRjG&40dGcq(bG)6TtG&3|dG(t5tG&40bG(|K;G($8tG)6TvH8eFfG(t5&G&D3eG(<HtGcz<ZG&eLhG&VFeG(t5tGcq+fG)6QsH8(XjG&M9tG&3_YG(j{rG(j~qG%+<nG&D6hG(j~vH90gmG%+<YH8V9qG&eLkGc+|fH8(XiH8V6eG)6QrGcq(bG(s~oH8eCtG(t5&H8M3fH90jgH8V6hG(s~qH8wRjH90jkG&40fG(j{nH8M3cG%+<dG(j~nG(t5&H8wOiG&M9tH8V9cG&wakG($8uGc+|pG&40cG(<HvG($BvG&wUgH8V9fG(s~pGcq+cG&eOhGcq(cG(|K;Gc`0eG&MCgGcz?cG($8pH8C|bG&MCfH8eFcG($8sH90jkGc+_rG&D3dG(t5&G&VFeG(t5tGcz<rH83<XG(t5tG&M9tGcq+ZG(j{$G(t2qG&40dH8V6cG(<E-G($BtH8nLdH8V9qG&eLkH90jmG&40eH8V9eG(|NsGcz<cG(t2)G&40bG(|HtG($8rG%++qG($BtG(t5&H8wRjH8C|aGcz<ZG(t5&G(|KvG&40fG(t5uG(t5&H8?aiGc+|eG(j~oG(j{nH8M3dH8C|bH8V9dG(<HvG($BvH8C_rH8V3ZG(|NvH90giG(t5sGcq+cG&nRiG&M9fG(<BpGcq+ZG(|K;G(j{rG)6TvH8eFhG($8&H8wRiG(t2)G&D3cG(t5&G&VFeG(t5tGcz<sG(t5&G($BuG(<E+H8eFjG(j{rG(j~qG%+<bH8M3dG(t2*G($BuG&MCcH8V3ZH83<mG(j{rG)6T!G($8*G)6QrH9<8tG(s~oH8eCtG(|HtH8V9gGcq+dH8eFgG(t2%H8wRjH90jkG&40cG&wUhG(j{rG&walG(t5vG)6TtH8?aiGc+|aH8V6eH83<mH8V9eG)6NrG&40cG(j~sH8wRgG&wXxH8V9fG&wakG(|KxG&eOhGcq(bG)6TtG&MChG(t5pG($BxG(j~sG($8tG)6TwH8eFcG($8sH90jkGc+?ZGcq+nG(t5&G&VFeG(t5tGcz<oG(j~%G(|KvG(<E+Gcq+ZG(j{rG($BuG&waiH8eFhG(j^pG&D6eGc+|aH8V9qG&eLkGc+|fH8(XiH8V6fG(t5&Gcq(bG(t2)G&40bG(|N*G&eLfG&3_ZG&40hG(<E(G&40fH8C|eH8eCfG($8pG&waiG&wakGcq+dG(t5&H8?aiGc+|aH8V3ZG)6QwG(t2tGcq+YH8V9dG(<HvG($BwG&eIgG(t5uG(t5&H8nIhH8(XiGcq(bG)6TtG&3|dG(s~nGcq(rG(|K;H8C|bG&MCjH9<8oG($8tH8(XlG&wXyG&D3aG(|NsG&nRhG(t5wG(t2tG(<HrG&wXjG(<E+G(t2&G(j{rG(j~qG%+<bH8M3dG(t2*G($BuG&M6cH8V9qG&eLkGc+|dH8(XiH8V9fG(|HtGc+|eG(s~oH8eCtG)6Q*G&eOjH90jkH8eFgG(t5&H8wRjH8C|eH8V6tG&eLdG($8vH8V9fGcq+eG)6TtH8wOiG&M9tH8V3ZG&wavG&nRiH8C?ZG&40dG(t2%G&D6gH8C_qG(t5tG&eLhH8V6fGd49fGcq+cG&nRiG&3|eG&40aH8eCtG(|KrG($8tG)6TwH8eFcG($8sH90jkGc+?ZGcz<YG(t5&G&VFeG(t5wG($5oG(j{$G($BuG&eOeH8V6qG(j{rG(j~tGcq$YGcz?fG(j~%G($8uGd43dGcq+nG&eLkH90jmG&40eH8V9eG(|NsH9<8tG(s~oH8eCtG(<EuG(j{rG(t2)G&D6qG(t5tH8wRjH8C|bG&40cG(j{nH8nIfGcq+dH8V6gG)6TtH8?aiGc+|aH8V6eH83<mH8V9eG)6NsG&40cG(<HvG($8vG%+<aGcq+cG(t5pG&VFiG)6TwGcq+cG&nRiG(t5uG&wUiH8V9cG(|KvG&eOhG)6TvH8eFhG($8tGc`0dGcq(pG($8tG&wavG&nRhG(t5uH8M3bG&nRiG($BuG(<E+H8eFjG(j{rG(j~qG%+<bH8M3dG(t2*G($BuG(<HvH8V9qG&eLkGc+|dH8(XiH8V6gG(|KqGcq(bG(s~oH8eCtG(<EuG&eOgG&3_ZG&40pG(s~qH8wRjH8C|aGcz<ZG&wavH90gjH8C|dGcz<qG(t5&H8wOiG&M9tH8V9cG&wakG($8uH8nLcH8V9dG(j~sH8wRgG&wXxH8V9fG&wakH8nIfG&eOhGcq(bG)6QsGcq(bG(<BqG&3|aG(|KrG($8tG)6TvH8eFhG($8tG($BsG(t2)G&D3eG&wavG&MCiH8V9fG&D3uG(|KrG&VIhG&M6bG($8wG(j{rG(j~tGcq$YG&40YG($8&H8(UjG&wakH8V9qG&eLkGc+|fH8C|gH8eCvG(t2vGcq+cG(s~oH8eCtG(|HtH8M3eG)6TyH8eFgG(t2%H8wRjH8C|aGcq+cG&eLwG&eOgG&wakGcq+dG(t5&H8?aiGc+|aH8V3ZG)6QwH8M0cG)6NuG&40cG(<HvG($BvG)6NuGcq+bG(s~pGcq+bH8(XiGcq+cG&nRiG(t5tG&3_ZG(j~sG(|KvG($8tG)6TvH8eFfG($8&G&3|cH8nLdGcz<ZG(|NsG&nRhG(t5wG(t2tG(<HrG&wXjG)6TtG(s~nG(j{rG(j~tGcq(pG(t5vG(t5pG($BtG(s~qGcq$WG&wUhH90gjH90jjG(j~qG(|KrH9<8tG(s~oH8eCtG($8&G&eOhG(t2)G(t2vG(t5tH8wRjH90jkG&40bG(|NsH8wRgG&40eGcz<oG&wXuH8wOiG&M9tH8V9cG&wakG($8uH8nLfH8V9eG(t2%G&D6hG&wXxGcq+eG(|K)G&VFeG%+<bGcq(bG)6TtG&MCgG(t5uG&D3sG(j~oG($8tG)6TvH8eFfG(t5pH8wRiG&MCbGcz<YG(t5&G&VFeG(t5wG($5oG(j{$G($8tG(t2)Gcq(YG(j{$G(t2qG%+<dH8V3ZG(j~sH8(UjH8(RgGcq+nG&eLkH90jkGc+|cG(t5sG(|NsH8nIgG(s~nH8V6qG(j^pG&nRjH90jgG($B(G(j^pG(t5uH8C|bG&40bG(j{nH8nIfG)6TxG&3|eG(t5&H8wOiG&MCgG(j~sG&wakG&walGcq(pG(t5sG(t2%G&D6hG&wXxGcq+nG(s~pH90jjG%+<bGcq(bG)6QsH90jlG(t5uG&D3dG($8&H8C|bG&MCeH8eFhG($8&H8wRiG(t2)G($8tG(|NsG&nRhG(t5wG(t2rG(j~%G($8uG&MCgGcq+ZG(j{rG(j~tGcq$YG&40bG(<HqH90jnG%+<cH8V3ZG&wUhH90glH8nLhG(j~qG(t2%H9<5sG(s~oH8eCtG(|HtG&eOhG(t2*G(t5sG(s~qH8wRjH90jkG&40cG&wUhG(j{rG&walG(t5vG)6TtH8wOiG&MCgG(j~nH83<XG&nUjG)6TtH8V9dG(<HvG($BvG)6NuGcq+bG(|NsH8nIgG)6TwGcq(bG)6TtG(t5tG)6NsG&3|pG(|K;G&eOhG)6TvH8eFfG($8tH8(XlH8C|dGcz<aG(t5&G&VFeG(t5wG($5oG(j{$G(t5uG&M6aH9<8tG(j{rG(j~tGcq$YG&40bG(<HqH90jmH8(RgGcq+nG&eLkGc+|eG&40dH8V9hG(<BsGc+|eG(s~oH8eCtG(|N*H8C|bG&40aH8eFgG(s~qH8wRjH8C|aGcz<ZG(t5&G(|KuGc+|fH8V6dG&wXuH8wOiG&MCgG(j~sG&wakG&walGcq$aG&40cG(<HvG($BvH8C_rH8V3ZG(|NvGcq+bG&eOhGcq(cG(|K;Gc`0eG&MChG&3|pG($8&H8C|bG&MCfH8eFdG(t5pH8wRiG&M6cGcz<ZG(t5&G&MCiH8V9fG&D3uG(|KrG&eLhG&M9tG&D6aG(j{rG(j~qG&40dH8eCbG(t5&G($BuG&MCcH8V9qG&eLkH90jlG(t5tH8V9fG&eOiGcz<cG(s~oH8eCtG(|HtG&eOhG(t2*G(t5&G(t2sH8wRjH8C|bG&40aG&eLhG&VFfG&walH8V9fG(t5&H8wOiG&M9tH8V3ZG&wavH8M3gH8nLsG&40dG(t2%G&D6gH8C|ZG(s~nG(|K;H8V6dH8(XiGcq(bG)6QsH9<5rGcq+cG(t5qG(|KrH8C|bG&MCjH9<8pG(t5tG&40eG&M6bGcz<bG(|NsG&VFeG(t5wG(t2rG&wXuG&nUjG)6TtH8V6qG(j{rG(j~qG%+(WG&40bG(<HvG($BtGc+?aH8V3ZG&wUhH90gjH90jjG(t5sG(|NrGcz<cG(s~oH8eCtG(<EuG(j{rG(t2)G&D6qG(t2*H8wRjH8C|aGcz<ZG(|NwG(j{sGd49hH8V6gG)6TtH8wOiG&MCgGcq(nG)6Q<G(j~tGcq(rG(t5rG(<HvG($BvG)6NuGcq+bG(|NsH8nIhH8(XiGcq(bG)6TtG&MCgG(t5uG&D3sG(|K;G($8tG)6T!H9<8oG(t5pG(<EwG%++qG&40gG(t5&G&VFeG(t5wG(t2vG&wavH8(UhGcq(pG&3_YG(j{rG($BuG&waiH8V6fG(<EtH90jmG&wagH8V9qG&eLkGc+|dH8(XiH8V9fG(|HsH90gkG(s~oH8eCtG(|HtH8M3eG)6TxG($5oG(t2*H8wRjH8C|bG&40bG&eLwG%+<eG&MChG(j~oG(t5&H8wOiG&MCcG($BtG&eOtH8V9eG)6NsG&40dG(t2%G&D6gH8C|bGcq+bG(t5pG&VFgG&eOhGcq(bG)6TtG&MCgG(t5uG&D3sG(j{)G($8tG)6T!H9<8oG($8&G&3|cG(<HsGcz<aG(|NsG&VFeG(t5tGcz<oG(j~%G(|KvG(<E+H8V9cG(j{$G(t2qG%+<dH8V3ZG(j~%G($BtGc+|eH8V9qG&eLkH90jmG&40eH8V9iG(|KqGcz<cG(s~nH8V6qG(j~%H8M3fH90jwGcz?oG(t5tH8wRjH90jkG&40bG(|NsH8wRgG&40eGcz<pG(t5&H8wOiG&M9tH8V9cG&wakG($8uGc+?aG&40cG(<HvG($BvG)6Q<G&40fG&wUgGcq+bGd49fGcq+cG&nRiG(t5uG&wUiH8V9cG(|K;G(j{rG)6TvH8eFhG($8tGc`0dGcq(pG($8sG(|NsG&nRhG(t5wG(t2uH83<XG(j{qGcq(pG(t2&G(j{rG(j~qG&40dH8eCbG(t5tH8wRkG&wUgH8V9qG&eLkH90jmG&40eH8V9eG(|NsGc+_dG(t2)G&40bG)6Q*H8V6cG&MCcH8eFfG(<HrG&40fH90jkG&40bG&eLhG(|KuH8C|dGcz<oG&wXuH8wOiG&M9tH8V9cG&wakG($8uGc+|pG&40dG(t2%G&D6gG)6NvH8V9gG(s~pH90jnG)6TwGcq+cG&nRiG(t5tG&3_ZH8V6fG(|KrG&eOhG)6TvH8eFfG(t5pH8wRiG&MCbGcz<YG(t5&G&VFeG(t5wG(t2rG(|KrG(t5uG&M6aH9<8tG(j{$G(t2qG%+(WG&D3rG(t5sH90jmGd43dGcq+nG&eLkH90jkGd49fH8V6eG(j{$Gcq(bG(s~oH8eCtG(|HtG&eOhG(t2*G(t5&G(t5&H8wRjH8C|bG&40cG&wavG&40gH8C|cGcz<rG)6TtH8?aiGc+|aGcq+YG)6NuG&nUjH8C|YH8V9dG(<HvG($8vG%+<aGcq+bG&eLhH8nIgG&eOhGcq+cG&nRiG&D6fG)6TxG&3|pG(<EuH8C|bG&MCeH8eFiG(t5pH8(XlH8C|cGcq(rG&wavG&nRhG(t5wG(t2tG(<HrG&nUkG&MCgH8V6qG(j{$G(t2qG%+<cH8V9ZG(j^pG&D3gG%+<YH8V3ZH83<mG(j{rG)6T!G($8+H83<XH9<8tG(s~oH8eCtG(|HtG&eOhG(t2)G($BpG(t5&H8wRjH8C|aGcz<YG&eLhG&40gH8V9fGcz<oG&wXuH8?aiGc+|aH8V6fG&eOtG&nUjG)6TtH8V9dG(j~sH8wRgG(t2*G&40cH83<mG&VFfGd49fGcq(bG)6TtG&MChG(t5pG(j~%G(|K;H8C|bG&MCjH9<8pG(t5pG(t5uG&wUhGcz<aG&eLhG&VFeG(t5wG($5oG(j{$G($BuG&eOeGcq+ZG(j{rG($BuG&waiH8V6fG(<ExH90jmH90dhH8V9qG&eLwG%_?bGd49jH8V6eG($8wGcz<cG(t2)G&40bG)6Q*G&nUiG(t2*G(t5&G(t2*H8wRjH8C|eH8V6tG&eLdG($8vH8V9fGcq+bG&wXuH8wOiG&M9tH8V9cG&wakG($8uGc+?YG&40cG(<HvG($BvG&eLwG&40eG(|NsH8nIgG)6TwGcq(bG)6TtG&3|dG(t5tG&40bG(|K;G(j{rG)6TvH8eFiG(t5pH8(XlH8C|cGcq(qG(|NsG&nRhG(t5wG(t2uH83<XG(j~tG&MCgGcz<fG(j{rG(j~qG%+<aH8V9cG(j~%G&D6fG&MCcH8V9qG&eLkGc+|dH8(XiH8V9fG)6QrGcz<cG(s~oH8eCtG(<EuG&eOgG&40pG&3|oG(<EuG&40fH8C|bG&40aG&eLhG&40cG%+<dG($5oG&wXuH8wOiG&M9tH8V3ZG&wavG&nRiH8C?ZG&40cG(<HvG($8vG%++pG(t5uG(s~pH90jmGd49fGcq(bG)6TtG&MCgG(t5tG&3|eG(|K;G($8tG)6T!H9<8oG(t5&G&D3eG&MCeGcz<YG(|NsG&VFeG(t5wG($5oG(j{$G($8tG)6TtG(j~sG(j{rG(j~tGcq(qG($8)G(<EuG&D6eG(s~qGcq+nG&eLkH90jlG(t5tH8V6fG)6QsH90gkG(s~oH8eCtG(|HtG&eOhG(t2*G(t5&G(t2%H8wRjH8C|bG&40bG&eLwG%+<aG&eOjG(j~pG)6TtH8wOiG&M9tG&D6aG&wavG(j~tH8nLdH8V9dG(<HvG($8uGd43eH8V9hG(t5&H8V6gG&eOhGcq+cG&nRiG&D6fG)6TxG&3|pG(<EuH8C|bG&MCeH8eFhG(t5tG&40eG(<HvGcq(rG&wavG&nRhG(t5wG(j~qG(<HrH8nIhG&MCgG&3|eG(j{$G(t2qG&40dH8V6cG(<E-G($BtH8nLdH8V3ZH83<mG(j{rG)6T!G($8)G&eOiH8nIgG(s~oH8eCtG(<EuG&eOgG&40fH8V9iG(<EuG&40fH90jkG&40fG&wakG&VFiG(t5uG(t5vG)6TtH8?aiGc+|eG(j~oG(j{nH8M3dG&waiH8V9dG(<HvG($BvG&wUgH8V9eG&eLdG&nRjGd49fGcq(bG)6TtG&MChG(t5pG(j~%G(|K)G&eOhG)6T!H9<8oG($8tH8(XlG&wUgGcz<ZG(|NsG&VFeG(t5wG(t2vG)6QsH8(XkG&MCgG&D3sG(j{$G(t2qG%+<nG&40gG(t2%G&D6fG&MCcH8V9qG&eLkGc+|fGcq+bH8V9hG(<BsGcz?dG(t2)G&40bG(|HtG($8rG%++rG(t5wG($8&G&40fH8C|eH8V6tG&eLdG($8vH8V9fGcz<pG(t5&H8?aiGc+|aH8eFbG(t5&G($BvGcq(pG(t5rG(<HvG($BvH8C?bG&3_YG(|NwH8(UiG)6TwGcq(bG)6TtG&MCgG(t5tG&3|eG(|K;G($8tG)6T!H9<8oG(t5tG(t2rGc+_sG&D3aG(t5&G&VFeG(t5tGcq+bG&wXuG&nRiG&M9tG&D6aG(j{rG(j~qG%+<nG&D6hG(j~vH9<5rH8nFdH8V3ZH83<mG(j{sH8V9iG(j~pH83<XGcq(bG(s~oH8eCtG)6Q*G&eOjH90jmH8V6pG(<EuG&40fH8C|aGcz<YG(|K-Gcq(ZG&wakGcz<qG(t5&H8wOiG&M9tH8V9cG&wakG($8tG)6Q;G(t5sG(t2%G&D6gG&eIfH8V9hG(t5&H8V6gG&eOhGcq(cG(|NrGcq+dG&wagG&D3hG($8&G($8tG)6T!H9<8oG(t5&H8(XlG%+<aGcq+nG(t5&G&VFeG(t5wG($5oG(j{$G($8tG)6TtGcq+ZG(j{$G(t2qG%+<cG($BwG(<HqH90jmH8(RgGcq+nG&eLwG%_?bGd49jG($5oG(t5tGc+|eG(s~oH8eCtG($8&G&eOhG(t2)G(t2vG(t5pH8wRjH8C|bG&40bG(j{nH8nIfH8nLiH8V6gG)6TtH8wOiG&M9tG&D6aG&wakH8C|cG&wagH8V9dG(j~sH8(UhG(s~qGcq+bG(t5pG&VFgG)6TwGcq+cG&nRiG&D6fG)6TxG&40fG(|KrG(j{rG)6TvH8eFhG($8&G&40eG&MCgH8eCcG(t5&G&nRhG(t5wG(t2tG(<HrG&nUkG&MCgG(j~sG(j{rG(j~tGcq(qG($8)G(<EuG&D6eG(<BrH8V3ZG&wUhH90glH8nLhG(j~pG(|KrH90gkG(s~oH8eCtG)6Q*G&eOjH90jmH8V6pG(t5tH8wRjH8C|aGcz<YH83<mG%+<aG&40eGcz<oG&wXuH8wOiG&MCgH8eFbG(t5&G&nUjG)6NuG&40cG(j~sH8wRgG&wXxH8V9fG&wagG&VFfGd49fGcq(bG)6TtG&MChG(t5pG($BxG(|K;H8C|bG&MCjH9<8oG(t5tG(t2rGc+_sG&D3aG(t5&G&VFeG(t5tGcz<pG&eOiG(j{qGcq$XG&3_YG(j{$G(t2qG%+<nG&40gG(t2vH9<5rG(<HrH8V9qG&eLkGc+|fH8(XiH8V6eG(|NsGc+_dG(t2)G&40bG(|HtG&eOgG&40eH8eFfG(<E(G&40fH8C|aGcz<YH83<mG%+<eH8V9fGcq+eG)6TtH8wRjG&3_ZG(t5uG)6QwH8V9eG)6NsG&40cG(<HvG($8vG%+(YGcq+dG&wakH8V6fGd49fGcq(bG)6QsH9<8tG)6NrGcz<bG(<EuG($8tG)6TvH8eFhG($8&G&40eG&MCgGcq(qG&wavG&MCiH8V9fG&D3qG($8&G&wakG&eOeG(t2&G(j{rG(j~tGcq(pG(t5vG(t5tG&D6eG(<HvH8V9qG&eLkH90jmH8(XhG(t5vG(|KrGc+_dG(s~oH8eCtG(|N*G&nUiG(<HsH8V9eG(<HrG&40fH90jkG&40bG(|NsH8wRgG&40eGcq+bG&wXuH8wOiG&M9tH8V6fG)6TxH8V6dH8C?YG&40cG(<HvG($BvH8C?bG&3_YG(|NvGcq+bG)6TwGcq(bG)6QsH90jlG(t5uG&D3dG(<EuG(j{rG)6T!H9<8oG(s~qH8(UiG(<HtGcz<YG(t5&G&VFeG(t5wG(t2rG&wXuG&nUjG)6TtH8V6qG(j{$G(t2qG%+(WG&D3rG(t5sH90jmGd43dGcq$WH83<mG(j{rG&MCrG($8(G(|NsH8?dkG(s~nH8V6qG(j^pH8V9eG(s~pG&3|fG($8&G&40fH90jkG&40bG&wajH90giG&walG($8*G(t5&H8wOiG&M9tH8V6fG)6TxH8V6dH8C?YG&40cG(<HvG($BwG&eIgG(t5uG(|K;G&nRhG)6TwGcq(bG)6TtG&3|dG(t5tG&40bG(j~oH8C|bG&MCeH8eFhG($8&H8wRiG(<BqGcq(qG&wavG&MCiH8V9fG&40hG(j{$G(<HuGcq$XG&3|pG(j{rG(j~qG%+(WG&40YG(j{(H9<5rH8V3cGcq$WH83<mG(j{sG&40eH8V9fG&eOeGcz?dG(s~oH8eCtG(|HtG&nUiG(<HtH8V6pG(t5tH8wRjH8C|aGcz<ZG(t5&G(|KvG&40fG(t5tG(t5&H8wOiG&M9tH8V9cG&wakG(j~sH8C|ZH8V9dG(<HvG($BvG)6NuGcq+bG(|NsH8nIfGd49fGcq(bG)6TtG&MCgG&wUeG($BtG(|K)G($8tG)6T!H9<8oG($8&G&3|cG(<HsGcz<aG(t5&G&nRhG(t5wG(t2sG(t2%H8(XjG&M9tG(s~nG(j{$G(t2qG%+<nG&40gG(t2%G&D3gG%+(YH8V9qG&eLkGc+|dH8(XiH8V6gG(|KqH9<8tG(s~oH8eCtG(|HtH8M3eG)6TxG($5oG(t5pH8wRjH8C|eH8V6tG&eLdG($8vH8V9fGcq+bG&wXuH8wRjG&3_ZG(t2+G(t5pH8V6dG)6NvG&40cG(<HvG($BwG&eIgG(t5uG(|K;H8nIgG&eOhGcq+cG&nRiG&MCgH8nLdH8V6bG(|KrG($8tG)6TvH8eFfG(t5&G&D3eG(<HtGcz<ZG(|NsG&MCiH8V9fG&D3uG(|KrG&eLgGcq+cGcz?gG(j{$G(t2qG%+<bH8V6uG(j^pG&D3fH90dhH8V9qG&eLkGc+|fH8C|gH8eCvG(t2vGcz<cG(s~nH8V6qG(j~%H8M3fGcq+dH8V6gG(<E-G&40fH90jkG&40bG(|NsH8wRgG&40eGcz<qG(t5&H8wOiG&M9tH8V9cG&wakG(j~sG)6NvG&40cG(<HvG($8vG%+<YH8V9eG(|NvH90jmH8(XiGcq+cG&nRiG&D3eG&wajH9<8&G($8pH8C|bG&MCfH8eFcG($8sH90jkGc+_rG&D3aG(|NsG&VFeG(t5wG(t2rG&wXuG&nUjG)6TtG(t2&G(j{rG(j~tGcq(pG%__ZG(t5sH9<5rG(<HrH8V3ZH83<mG(j{qH90jkH8eCuG(|KrGcz?dG(s~nH8V6qG(j^pH8V9eG(s~qG&3|gG(t2*H8wRjH8C|bG&40fG&wavH90gkG(<HwH8V6eG(t5&H8wOiG&MCgH8V9cG(t5tH8M0cG)6Q<G(t5rG(<HvG($8vG%+(YGcq+dG&wagG&VFgG&eOhGcq(cG(|K;Gc`0fG&M6eG(j~%G($8&G&eOhG)6TvH8eFhG($8tG($BsG(s~rH8eCdG&wavG&VFeG(t5uH8M3bG)6TtG&wXjG&eOeH8V6qG(j{rG(j~qG&40dH8eCbG(t5&G(t5uH90jlH8V3ZH83<mG($8tG&40dH8V6gG(|KqH9<5sG(s~oH8eCtG(|HtG&eOhG(t2*G(t5sG(s~qH8wRjH8C|aGcz<YG&eLhG&D3cG(<HvGcz<qG(t5&H8wOiG&MCgH8V9cG(t5&G(t2tGcq$aG&40cG(j~sH8wRgG&wXxH8V9fG&wakG(|KxG)6TwGcq(bG)6TtG&MCgG(t5tG&3|eG(j{)H8C|bG&MCeH8eFfG(t5&H8(XlG&wanG($8qG&wavG&VFeG(t5wG(t2rG&wXuG&nUjG)6TtGcq+ZG(j{rG(j~qG%+(WG&40bG(<HvG($BtGc+?aH8V9qG&eLkH90jmH8(XhG(t5vG(<BsGc+_dG(s~oH8eCtG(<EuH8V6eG(<HwH8V9iG(<E-G&40fH8C|bG&40fG&wavH90gkG(<HwH8V6eG(t5&H8wOiG&M9tH8V9cG&wakG(j~sG)6Q;G(t5rG(<HvG($BvH8C?bG&3_YG(t5pG&nRhH8(XiGcq(bG)6TtG&M9gG&eOdGcz?cG(|K;G(j{rG)6TwH8eFcG($8sH90jkGc+|dGcq+nG(t5&G&VFeG(t5tGcq+bG&wXuG&nRiG&M9tG&D6aG(j{rG(j~qG%+<bH8M3dG(t2*G($BuG&M6cH8V3ZH83<mG(j{qH90jkH8eCtG($8&Gc+_dG(t2)G&40bG(|N*H8M0bG&40eH8eFfG($8&G&40fH8C|eH8V6tG&eLdG($8vG&MCgH8eCrG&wXuH8?aiGc+|aG(j~oG&eOtH8V9eH8C|cH8V9dG(<HvG($BvH8C?bG&3_YG(t5pG&nRhG)6TwGcq(cG(|NrGcq+dG&wagG&D3hG(|K)G(j{rG)6TvH8eFhG(t2*H8wRiG&M6bH8eCeG&wavG&VFeG(t5wG(t2rG(|KrG(t2rGcq(pG&3_YG(j{$G(t2qG&40dH8V6cG(<E(H8(XiG(s~qGcq+nG&eLkGc+|fH8nLfG($5oG(t5wH9<5sG(t2)G&40bG(|HtH8M0cG(<HrG($5oG(t5tH8wRjH8C|bG&40cG(j{nH8nIgG%+<bH9<8qG)6TtH8wOiG&MCgGcq(nG)6Q<G($8uGc+|ZH8V9dG(<HvG($BvG&eLwG&40eG&eLdH8nIfGd49fGcq+cG&nRiG&D6fG)6TxG&40fG(|K)G($8tG)6TvH8eFhG($8&G&40eG&MCgGcq(qG&wavG&nRhG(t5wG(t2rG(j~%G($8uG&MChG&3|aG(j{$G(t2qG&40dH8V6cG(<E-G($BtG(s~qGcq+nG&eLkH90jkGd49fH8V6eG(j{$H90gkG(s~oH8eCtG(|HtG&eOhG(t2*G(t5&G(t5pH8wRjH8C|eH8V6tG&eLdG($8vG(<HvH8M3bG)6TtH8wOiG&MCgGcq+YH83<bG(j{sGc+|cH8V9dG(<HvG($BvG&wUgH8V9eG&eLdG&nRjGd49fGcq(bG)6QsGcq+cH8nLdH8eCtG(|K;G($8tG)6T!H9<8oG($8&G&3|cG(<HsGcz<aG(t5&G&VFeG(t5tGcq+fG)6QsG(<HuGcq+dG&3|aG(j{rG(j~qG%+(WG&40bG(j~sG($BuG&MCgH8V9qG&eLwG%_?bGd49jH8V6eG($8tGc`0eG(s~oH8eCtG(<EuH8V6eG(<HwH8V9iG(<E-G&40fH90jkG&40bG(t5sGcq(ZG&wakGcz<qG(t5&H8?aiGc+|aH8V3ZG)6QwH8M0cG)6NuG&40cG(<HvG($BvG&eLwG&40eG&eLdH8nIhG&40dGcq(bG)6TtG&3|dG(s~nGcq(rG(|K;H8C|bG&MCeH8eFfG($8&G&3|cG(<HvGcz<ZG(|NsG&nRhG(t5wG(t2tG(<HrG&wXjG(<E+G(s~nG(j{rG(j~tGcq(pG(t5vG(t5pG($8vG%+<YH8V9qG&eLkH90jmH8V9iH8V6eG)6QsGc+_dG(s~oH8eCtG($8&G&eOhG(t2)G(t2vG(t5tH8wRjH8C|eH8V6tG&eLdG($8vG(<HvGcq+eG)6TtH8wOiG&eOeG(j~sG)6Q<G(t5uH8nLcH8V9dG(<HvG($8uH90gzH8V3ZG(|K;H8V6eG&eOhGcq(bG)6TtG&MCgG(t5tG&3|eG(|K;G(j{rG)6TvH8eFfG(t5pH8wRiG&MCbGcz<YG(t5&G&VFeG(t5wG(t2rG(|KrG(t2tG(s~oH8V9cG(j{$G(t2qG%+<cH8V9ZG(j^pG&D3fH90dhH8V9qG&eLkH90jlG(t5tH8V9fG&eOiGc+_dG(t2)G&40bG)6Q*G&nUiG(t2+G(t2vG(j^pG(t5uH8C|bG&40cG&wavG&40gH8C|eH8V6eG(t5&H8wOiG&M9tH8V9cG&wakG(j~tGc+?ZG&40cG(<HvG($BvG)6NuGcq+bG(s~qH8(UkG)6TwGcq(bG)6TtG&3|dG(t5tG&40bG(|K;G(j{rG)6TvH8eFhG($8&G&40eG&MCgH8eCcG(t5&G&VFeG(t5tGcz<qG(<HrG(j~tG&MCgH8V3ZG(j{rG(j~qG%+(WG&40bG(j~sG($BuG&MCcH8V3ZG&wUhH90glH8nLhG(j~qG(t2%Gcq(bG(s~oH8eCtG)6Q*G&eOjH90jlH8V9qG(t5pH8wRjH90jkG&40aG&eLsH8nIgH8nLiG(t5vG)6TtH8wOiG&MCgH8eFbG(t5&G&nUjG)6NvG&40dG(t2%G&D6gH8C|eG&40dG(|NvGcq+bG)6TwGcq(bG)6TtG&M9gG&eOeG&D3dG(|K)H8C|bG&MCeH8eFhG($8tG($BsG&wXxG($8tG&wavG&VFeG(t5tH8V9iG(j{$G&eLhG&M6bG(t5qG(j{rG(j~tH90jmG(j~sG($8&H8(UjH8(RgGcq+nG&eLkGc+|fH8(XiH8V6fG($8wH9<8tG(s~oH8eCtG($8&G&eOhG(t2)G(t2vG($8&G&40fH8C|aGcz<ZG(|NwG(j{sGd49hG(t5sG&wXuH8?aiGc+|aH8V3ZG)6QwH8M0cH8C?XG&40cG(<HvG($8vG%+(YGcq+dG&wakH8V6cG%+<bGcq(cG(|NrGcq+dG&wagG&D3hG(<EuH8C|bG&MCjH9<8oG(t5tG(t2rGc+_sG&D3bG(|NsG&nRhG(t5wG(t2uH83<XG(j{qGcq(pG($BpG(j{rG(j~qG%+(WG&40bG(<HvG($BuG&M6cH8V3ZG&wUhH90glH90joG($8-G(|KrH90jlG(s~oH8eCtG(|HtH8V9gGcq+dH8eFfG(j^pG(t5uH90jkG&40bG&eLhG(|KuG(t5uH8V6eG(t5&H8wOiG&M9tG(t2pG&wavG($8uH8nLdH8V9eG(t2%G&D6gH8C|bGcq+bG(t5tH8V6dGd49fGcq(bG)6TtG&40fG(t5pG($8*G(|K;G($8tG)6TvH8eFhG(t2*H8wRiG&MCgGcz<bG(|NsG&VFeG(t5wG(t2rG&wXuG&nUjG)6TtH8V6qG(j{$G(t2qG%+(WG&D3rG(t5sH9<5rG(<BrH8V3ZH83<mG(j{rG&MCeG(j~qG(|KrH90gkG(s~oH8eCtG($8&G&eOhG(t2)G(t2vG(t5pH8wRjH8C|aGcz<ZG(|NwG(j{sGd49hH8V6gG)6TtH8wOiG&MCgH8V6qG&wakG(t2tGcq$YG&40cG(<HvG($BvG)6NuGcq+bG(|NsH8nIgG)6TwGcq(bG)6TtG&M9gG&eOdGcz?cG(|K)G(j{rG)6TvH8eFiG(t5pH8(XlH8C|cGcq(qG&wavG&nRhG(t5wG(t2rG(j~%G(t5sGcq$XG($BxG(j{rG(j~tGcq$YGcz?fG(j~%G($BuG&MCcH8V9qG&eLkH90jlG&eOhH8V6fG)6QsH8?dkG(s~oH8eCtG(<EuG&eOgG&3_ZG&40hG(<HrG&40fH90jkG&40bG(t5sGcq(ZG&wakGcq+bG&wXuH8?aiGc+|aH8V6fG&eOtG&nUjG)6TtH8V9dG(<HvG($8uH8(RgGcq+bG(t5tH8V6eG&eOhGcq(bG)6TtG&MCgG(t5uG&D3sG(j{)G($8tG)6TvH8eFfG(t5tH8wRiG&MCjG($8qG&eLhG&VFeG(t5tGcz<oG(j~%G(<EuG&eOeGcz<fG(j{rG($BuG&waiH8V6fG(<E-H8(XiH8nFdH8V9qG&eLkGc+|fH8nLfG($5oG(t5wH9<8tG(t2)G&40bG)6Q*H8V6cG&MCcH8eFfG(<E-G&40fH8C|aGcz<ZG(|NwG(j{sGd49hG(t5vG)6TtH8wRjG&3_ZG(t2+G(t5pH8V6dG)6NtG&40cG(<HvG($8vG%++pG(t5uG(s~pH90jnG&eOhGcq(bG)6QsH9<5sG(t5uG&D6aG(<EuG($8tG)6TvH8eFfG($8&G&3|cG(<HvGcz<ZG&wavG&nRhG(t5wG(t2uH83<XG(j{qGcq$XG($BxG(j{rG(j~qG%+<aH8V9cG(j~%G&40gG%+(YH8V9qG&eLkGc+|dH8(XiH8V6gG(<BsGcz?dG(s~oH8eCtG)6Q*G&eOjH90jmH8V6pG(s~qH8wRjH90jkG&40bG&eLhG(|KuH8C|dGcz<rG)6TtH8wOiG&M9tH8V9cG&wakG($8uH8nLcH8V9eG(t2%G&D6gG)6NvH8V9gG(s~pH90jnG&eOhGcq(bG)6QsH9<5rGcq+cG(t5qG(<EuG($8tG)6TwH8eFcG($8&G($BwG%++qG&40pG(t5&G&VFeG(t5wG(t2rG(|KrG(t5uG&M6aH9<8tG(j{rG(j~tGcq$aG&D3aG(t2vH90jnG%+<cH8V9qG&eLkGc+|fH8(XiH8V6fG($8tGcz?dG(s~nH8V6qG(j^pG&nRjH90jgH8V6pG(t2*H8wRjH90jkG&40bG&wajH90giG&wakH8M3ZG(t5&H8wOiG&M9tH8V9cG&wakG($8uH8nLcH8V9dG(<HvG($8vG%+(YGcq+dG&wagG&VFgG)6TwGcq(bG)6TtG&M9gG&eOdGcz?cG(|K)G&eOhG)6TvH8eFhG($8tG($BsG(t2)G&D3eG(t5&G&VFeG(t5wG(t2vG&wavH8(XkG&M6bG&3|pG(j{rG($BuG&waiH8V6fG(<ExH9<5rGc+|aH8V9qG&eLkGc+|fH8(XiH8V6fG($8tGc+|eG(s~oH8eCtG(|HtG&eOhG(t2*G(t5&G(t5tH8wRjH8C|aGcz<YG&eLhG&D3cG(<HvGcz<rG)6TtH8wRjG&3|rG%__dG&wakG(t2tGcq$ZG&40cG(j~sH8wRgG(t2*G&40cH83<mG&MCeG&40dGcq(bG)6QsGcq(bG(<BpH9<8pG(|KrG&eOhG)6T!H9<8pG(t5pG(t5uG&wUhGcz<aG(|NsG&MCiH8V9fG&40hG(j{$H8(XjG&M9tG%__dG(j{rG(j~qG%+(WG&40bG(j~sG($BtGcq$ZGcq+nG&eLkGc+|fGcq+bH8V9eG(t5wGcz<cG(t2)G&40bG)6Q*H8V6cG&MCcH8eFfG(<HvG&40fH8C|bG&40cG&wajGcq(dG&MChG($8(G&wXuH8?aiGc+|aH8eFbG(t5&G(t2tH8nLcH8V9dG(<HvG($BvH8C_rH8V3ZG(|NvGcq+bG)6TwGcq(bG)6TtG&MChG(t5pG($BxG(|K;G&eOhG)6T!H9<8pG(t5pG(t5uG&wUhGcq(qG&eLhG&MCiH8V9fG&D3qG($8&G&wajGcq$WH8eCtG(j{rG(j~qG%+(WG&40bG(j~sG($BtGc+|aH8V3ZH83<mG(j{sH8(XhG(t5tG)6QsGc+_dG(t2)G&40bG(|HtG(j{qG)6TyH8V6hG(t2*H8wRjH8C|aGcz<YG(|NsG&D3cG&eOiGcq+eG)6TtH8wOiG&MCgH8eFbG(t5&H8V9eG&waiH8V9dG(<HvG($8tG(<BtG(t5tG&wakH8V6eG)6TwGcq(bG)6QsH9<5rGcq+cG(t5qG(<EuH8C|bG&MCfH8eFcG($8&G($BwG%++qG&D3eG&wavG&VFeG(t5wG(t2rG&wXuG&nUjG(t2)G($BpG(j{$G(t2qG%+<bG(j~sG(<EuG&D6eG(<HvH8V3ZG&wUhH90gjH90jjG(j~qG(|KrH8?dkG(s~oH8eCtG(|N*H8C|bG&40aH8eFgG(t5tH8wRjH8C|aGcz<ZG(|NwG(j{rG)6TyG(t5tG(t5&H8?aiGc+|aH8V6eH83<mH8V9eG)6NtG&40dG(t2%G&D6gH8C|ZG(s~nG(|K;G(|KxG)6TwGcq+cG&nRiG&D6fG)6TxG&40fG(<EuG($8tG)6TvH8eFhG($8&G&40eG&MCdH8eCcG&wavG&VFeG(t5tGcz<pG(t5&G&nUkG&MCgGcq+ZG(j{$G(t2qG%+<cH8V9ZG($8&H8(XiGc+|eH8V9qG&eLkGc+|fH8(XiH8V6fG($8tGc+_dG(s~oH8eCtG(<EuG&eOgG&3_ZG&40hG(<HrG&40fH90jkG&40bG(|NsH8wRkH8V9fGcq+bG&wXuH8wOiG&MCcG($BtG&eOtH8V9eG)6NsG&40cG(j~sH8wRgG(t2*G&40cG&eLdH8V6dGd49fGcq(bG)6TtG&MChG(t5pG($BxG(t2oG&eOhG)6TwH8eFcG(s~qG(t5tG&MCbGcz<ZG(t5&G&VFeG(t5tGcz<pG&eOiG&nUkG&MCgH8V3ZG(j{$G(t2qG%+<nG&40gG(t2%G&D6eG(<HvH8V9qG&eLkGc+|dH8(XiH8V6gG(<HrGcq(bG(s~oH8eCtG(<EuH8M0cG(<HuG($B(G(<EuG&40fH8C|bG&40fG&wavH90gkG(<HwH8V6gG)6TtH8?aiGc+|aH8eFbG(t5&G($BvGcq(pG(t5rG(<HvG($BvG&wUgH8V9eG&eLdG&nRjG&40dGcq(bG)6QsH90jlG&wUeH8eCiG($8&G&eOhG)6T!H9<8oG($8tH8(XlG&wXyG&D3aG&eLhG&MCiH8V9fG&D3qG($8&G&wakG&M6bH8V6bG(j{rG(j~qG%+(WG%__cG(t5oH9<5rGcq$ZGcq+nG&eLkH90jlG)6T!G(j~oG)6QsH9<8tG(s~oH8eCtG(|HtG&eOhG(t2*G(t5&G(t5&H8wRjH90jkG&40bG&eLhG(t5rG&40eGcq+dG(t5&H8wOiG&M9tH8V3ZG&wavH8V6dH8C?YG&40cG(<HvG($BvG)6NuGcq+bG(s~pGcq+bGd49fGcq(bG)6QsGcq(bG(<BqG&3|aG(<EuG($8tG)6T!H9<8oG(t5&H8(XlG%+<fG($8tG&wavG&VFeG(t5wG(t2vG&wavH8(UhGcq(pG&D6aG(j{rG(j~qG%+<nG&D6hG(j{(H9<5sG&MCcH8V3ZH83<mG($8sGc+|dH8M3cG&wXuGc+_dG(t2)G&40bG(|HtH8M0cG(t2+G(t5wG(t2%H8wRjH8C|bG&40bG&eLwG%_?dH90jmG(j~nG(t5&H8wOiG&MCgH8V6qG&wakG(t2tGcq(qG(t5rG(<HvG($8tG(<BtG(t5tG&wakG(|KxG&eOhGcq+cG&nRiG&D6fG)6TxG&40fG(|K)G($8tG)6TvH8eFfG(s~qH8(UiG(<E-G&D3cG(|NsG&nRhG(t5wG(j~qG(<HrH8nIhG&MChG&40bG(j{rG($BuH8C?YG%__YG(j^pG&D3fH8(RgGcq+nG&eLkGc+|fH8C|gH8eCrG(t5wGcq(bG(s~oH8eCtG(|HtG&nUiG(<HtG($5oG(t2*H8wRjH8C|eH8V6tG&eLdG($8vH8V9fGcq+bG&wXuH8wOiG&M9tH8V6tH83<mG&nRiH8C|eH8V9eG(t2%G&D6gH8C?ZGcq+cG(t5pG&nRiG&eOhGcq(bG)6TtG&MChG(t5pG(j~%G(j~oH8C|bG&MCeH8eFfG($8tH8(XlH8C|dGcz<aG&wavG&VFeG(t5uH8e9aG(|KrG(t2sG&eOeG($BpG(j{$G(t2qG%+<nG&40gG(t2vH90jmGd43dGcq+nG&eLkGc+|fH8(XiH8V6eG(|NsGc+_dG(t2)G&40bG(|HtG&eOgG&40eH8eFfG(<E-G&40fH90jkG&40fG&wakG&VFiH8C|eG(t5sG&wXuH8wOiG&MCgG(j~sG&wakG&walGcq(pG(t5rG(<HvG($BvH8C?bG&3_YG(t5pG&MCeG&40dGcq+cG&nRiG&D3dGcq+ZG&D6aG(<EuG&eOhG)6T!H9<8oG(t5tG(t2rGc+_sG&D3bG&wavG&VFeG(t5wG(t2vG&wavH8(XkG&M6aGcq(nG(j{rG(j~qG&40dH8eCbG(t5&G($BuG&MCcH8V3ZH83<mG(j{sH8(XhG(t5tG)6QsGc+_dG(s~oH8eCtG($8&H8V9gH90jwGcz?gG(<E(G&40fH8C|eH8V6tG&eLkGc+_fG(<HvGcq+eG)6TtH8?aiGc+|aG(j~oG&eOtH8V9eH8C|cH8V9eG(t2%G&D6gH8C|eG&40dG&eLhH8V6eG)6TwGcq(bG)6TtG(t5tG)6NrH9<8&G(|K;H8C|bG&MCeH8eFfG(t5pH8wRiG&MCbGcz<YG&eLhG&VFeG(t5wG(t2rG&wXuG&nRjG&40eH8V3ZG(j{rG(j~tGcq$ZG&40bG(j~sH8(UjGd43dGcq$WH83<mG(j{rG&MCrG($8(G(|NsH8nIgG(s~nH8V6qG(j^pH8V9eG(s~pGcz?oG(t5pH8wRjH8C|bG&40cG(j{nH8nIgG%+<dH8V6gG)6TtH8?aiGc+|eG(j~oG(j{nH8M3dH8C|dH8V9dG(<HvG($BwG&eIgG(t5uG(|K;H8nIhH8(XiGcq(cG(|K;Gc`0eG&MCgH9<8&G($8&H8C|bG&MCeH8eFiG(t5pH8(XlH8C|ZGcz<cG(|NsG&MCiH8V9fG&D3uG(|KrG&eLhG&M9tG&D6aG(j{rG(j~qG%+<bH8M3dG(t2rH9<5rGc+|eH8V9qG&eLkH90jkGc+|cG(j~qG(|KrH8?dkG(s~oH8eCtG(|N*G&nUiG(<HsH8V9qG(t5&H8wRjH8C|bG&40aG&eLhG&40cG%+<dH8V6eG(t5&H8wOiG&eOeG(j~sG)6Q<G(t5uH8nLeH8V9eG(t2%G&D6gH8C?ZGcq+cG(|NvH90jmG&40dGcq(bG)6TtG&MCgG&wUeG($BtG(|K)G($8tG)6T!H9<8oG(t2)H90gkH8nLhGcz<aG&wavG&VFeG(t5wG(t2rG&wXuG&nRjG&40fG&3|aG(j{rG(j~qG%+<aH8V9cG(j~%G&D6eGc+?aH8V9qG&eLkGc+|fH8(XiH8V6fG(t5&Gcq(bG(s~oH8eCtG(<EuH8V6eG(<HvH8eFfG(<EuG&40fH8C|bG&40cG&wavG&40gH8C|eH8V6dG&wXuH8wOiG&M9tH8V9cG&wakG(j~tH8nLeH8V9dG(<HvG($BvG)6NuGcq+bG(|NsG&nRjG&40dGcq(bG)6TtG&M9gG&eOdGcz?cG(|K;G(j{rG)6TvH8eFfG(t5&G&D3eG(<HtGcz<ZG(|NsG&VFeG(t5uH8M3bG)6TtG(j{sG&M6aGcq(nG(j{rG(j~qG%+<nG&D6hG(j~vH9<5rGc+?aH8V9qG&eLkGc+|fH8C|gH8eCrG(t5tGcz?dG(s~nH8V6qG(j^pH8V9eG(s~pG&3|fG(<E-G&40fH8C|aGcz<YG(|NsG&D3cG&eOiGcq+eG)6TtH8wOiG&M9tG(t2pG&wavH8C|cG&wahH8V9eG(t2%G&D6gG&wUhH8V9gG(|NsH8V6gG)6TwGcq+cG&nRiG&3|eG&40aH8V6uG(<EuG&eOhG)6TwH8eFcG($8sH90jkGc+_rG&D3dG(t5&G&VFeG(t5tGcz<rH83<XG(t5tG&M9tGcq+ZG(j{rG($BuH8C?YG%__YG(j^pG&D3gG%+<cH8V9qG&eLkH90jkGd49fH8V6eG(j{$H9<5sG(t2)G&40bG(|HtG($8rG%++rG(t5wG(<EuG&40fH8C|bG&40bG(j{nH8nIfG&walG($5oG&wXuH8wRjG&3_YGcz?bH83<mH8V9eG)6NvG&40cG(<HvG($BvH8C_rH8V3ZG(|NvH90giG(t5sGcq+cG&nRiG&M9fG(<BpGcq+ZG(|K;G(j{rG)6TvH8eFhG(t2*H8wRiG&M6bH8eCcG(t5&G&nRhG(t5wG(t2tG(<HrG&wXjG(<E+H8V9cG(j{rG($BuG&waiH8V6fG(<E-H8(UkG%+<YH8V3ZH83<mG(j{rG)6T!G($8*G)6QsGcz<cG(s~oH8eCtG(|HtG&eOhG(t2*G(t5&G(t5tH8wRjH90jkG&40cG&wUhG(j{rG&walG(t5vG)6TtH8?aiGc+|eG(j~oG(j{nH8M3dH8C|aH8V9dG(<HvG($8uH8(RgGcq+bG(t5tH8V6dH8(XiGcq+cG&nRiG&40eG&wakG&D3hG(|KvG($8tG)6TvH8eFhG(t2*H8wRiG&M6bGcz<cG(|NsG&nRhG(t5wG(t2sG(t2%H8(XjG&M9tG(t2&G(j{rG($BuG&waiH8V6fG(<E-H8(UkG%+<cH8V9qG&eLwG%_?bGd49jH8V6fG(j{rGcz?dG(t2)G&40bG(|N*G&eLfG&3_ZG&40hG(<E(G&40fH8C|eH8eCfG($8pG&waiG&wakGcq+dG(t5&H8?aiGc+|aH8V3ZG)6QwG(t2tGcq+YH8V9dG(<HvG($BwG&eIgG(t5uG(t5&H8nIhH8(XiGcq+cG&nRiG&D3dGcq+ZG&D3dG($8&G&eOhG)6T!H9<8oG(t5tG(t2rGc+_sG&40gG(|NsG&nRhG(t5wG(t2tG(<HrG&wXjG(<E+G(t2&G(j{rG(j~qG%+<bH8M3dG(t2*G($BuG&M6cH8V9qG&eLkGc+|dH8(XiH8V9fG(|HtGc+|eG(t2)G&40bG(|HtG(j{qG(<HqG($B(G(t2*H8wRjH8C|aGcz<YG(|K-Gcq+dGcq+cH8M3aG(t5&H8wOiG&M9tH8V9cG&wakG($8uGc+|pG&40cG(<HvG($8vG%+<aGcq+cG(t5pG&VFgG)6TwGcq(bG)6QsH90jlG(t5uG&D3dG(<EuG(j{rG)6TwH8eFcG($8sH90jkGc+_rG&D3aG(|NsG&VFeG(t5tGcz<sG(t5&G($8uG&MCgGcz?gG(j{rG(j~tGcq$YGcz?fG(j~%G($8vG%+(YH8V9qG&eLkGc+|eG&40dH8V9fG)6QrH9<8tG(s~nH8V6qG(j^pG&nRjH90jgH8V6hG(t2*H8wRjH8C|bG&40bG(j{nH8nIfG)6TyH8V6fG(t5&H8wOiG&M9tG&D6aG&wakH8C|cG&wafH8V9dG(<HvG($BwG&eIgG(t5uG(|K;H8nIhG&40dGcq+cG&nRiG&M9fG(<BpGcz<bG(<EuH8C|bG&MCeH8eFhG($8&G&40eG&MCgH8eCcG(t5&G&VFeG(t5tGcz<pG(t5&G&nRhGcq$XG&3_YG(j{rG(j~qG%+<bH8M3dG(t2*G($BuG&MCcH8V3ZG&wUhH90glH90joG($8-G(|KrH8nIgG(s~oH8eCtG(<EuH8M0cG(<HuH8V6hG(<EuG&40fH8C|aGcz<ZG(t5pG($8tG&walG(t5tG(t5&H8wOiG&M9tH8V9cG&wakG($8uH8nLfH8V9dG(<HvG($BvG)6NuGcq+bG(s~pGcq+cG)6TwGcq+cG&nRiG&40eG&wakG&D3hG($8pG(j{rG)6TvH8eFhG($8tG($BsG(t2)G&D3eG&wavG&MCiH8V9fG&D3uG(|KrG&eLhG&eOeG(t2&G(j{rG(j~qG%+(WG&40bG(<HvG(t5vG%+(YH8V9qG&eLkGc+|fH8C|gH8eCvG(j~%H9<5sG(s~oH8eCtG(|HtG&eOhG(t2)G($BuG(t2%H8wRjH8C|aGcq+cG&eLwG&eOgG&wakGcq+eG)6TtH8?aiGc+|aH8V3ZG)6QwG($BvH8nLdH8V9dG(<HvG($BvH8C?bG&40gG&wUgGcq+bG&eOhGcq(bG)6QsH9<5sG(t5uG&D6aG(<EuG($8tG)6T!H9<8oG(t5&H8(XlG%+<aGcz<YG(|NsG&MCiH8V9fG&D3uG(|KrG&VIhG&M6bG(t5qG(j{rG(j~tGcq(qG($8)G(t5&H8(XiG(<HrH8V3ZH83<mG($8sGc+|dH8M3bG(t2%Gc`0eG(t2)G&40bG(|HtH8V6eG(<HuH8V6hG(<EuG&40fH8C|bG&40bG&eLwG%+<eG&MChG(j~nG(t5&H8wOiG&M9tH8V3ZG&wavH8V6dH8C?YG&40dG(t2%G&D6gG&eIfH8V9hG(|K;H8V6cG%+<bGcq(bG)6TtG&MCgG&wUeG($BtG(|KvH8C|bG&MCjH9<8oG(t5&H8(XlG%+<fG($8tG&wavG&VFeG(t5wG(t2vG&wavH8(XkG&40eH8V3ZG(j{$G(t2qG%+<cG($BwG(<HvH8(UkG%+(YH8V3ZH83<mG($8sGc+|dH8M3cG&wXuGcq+cG(s~oH8eCtG(|N*H8C|bG&40aH8eFbG(<EuG&40fH8C|bG&40cG&wavG&40gH8C|eG(j~nG(t5&H8?aiGc+|aGcq+YH83<XG(j~tGc+|aH8V9eG(t2%G&D6hG&wXxGcq+nG(s~pH90jjG%+<bGcq(bG)6QsH90jlG(t5uG&D3dG($8&H8C|bG&MCeH8eFhG($8&H8wRiG(t2)G($8tG(|NsG&nRhG(t5uH8M3bG&nRiG($BuG(<E+H8V9cG(j{rG(j~qG%+<bH8M3dG(t2*G($BuG&M6cH8V3ZH83<mG(j{rG(t5tH8V6eG&eOiH90gkG(s~oH8eCtG)6Q*G&eOjH90jmH8V6pG(t5tH8wRjH90jkG&40cG&wUhG(j{rG&40fG(t5uG(t5&H8wOiG&MCgH8V9cG(t5tH8M0cG&wafH8V9dG(<HvG($BvG)6NuGcq+bG(s~pGcq+bG&eOhGcq(bG)6QsGcq+cH8nLdGcz<fG(|K;H8C|bG&MCeH8eFhG(t2*H8wRiG&M6bGcq(qG&wavG&nRhG(t5wG(t2sG(t2%H8(XjG&M9tG%__dG(j{$G(t2qG%+<dH8V3ZG(j~%G($8vG%+<cH8V9qG&eLkGc+|fH8(XiH8V6eG(|NsH9<8tG(s~oH8eCtG(<EuG(j{rG(t2*G($BtG($8&G&40fH90jkG&40bG(t5sGcq(ZG&wakGcz<qG(t5&H8wOiG&MCgG(j~sG&wakG&walGcq$ZG&40cG(<HvG($8vG%+(YGcq+dG&wakH8V6fGd49fGcq+cG&nRiG&D6fG)6TxG&3|pG(<EuG($8tG)6TvH8eFiG(t5pH8(XlH8C|cGcq(qG&eLhG&MCiH8V9fG&D3uG(|KrG&eLhG&M9tG&D6aG(j{rG(j~qG&40dH8eCbG(t5tH8(XiGcq$ZGcq$WG&wUhH90glH8nLhG(j~qG(t2%H90jlG(t2)G&40bG(|HtH8V6eG(<HuH8V6hG(t5tH8wRjH8C|eH8V6tG&eLkGc+_bG&wakGcz<rG)6TtH8wOiG&M9tH8V3ZG&wavH8V6dG&wahH8V9dG(<HvG($BvH8C?bG&3_YG(t5pG&nRhH8(XiGcq(bG)6TtG(t5tG)6NsG&40fG(|K;H8C|bG&MCjH9<8oG(s~qH8(UiG(<HyG($8qG&eLhG&VFeG(t5uH8M3bG)6TtG&wXjG&eOeH8V6qG(j{rG(j~qG%+<aH8V9dG(t2rH9<5rGcq$ZGcq+nG&eLkH90jmH8(XhG(t5vG(<BrH90gkG(s~oH8eCtG(|N*H8C|bG%++rG(t2%G(t5pH8wRjH8C|bG&40cG(j{nH8nIgG%+<dG($5oG&wXuH8wOiG&MCgH8V3ZG)6Q*G($BvGcq$aG&40cG(<HvG($BvG)6NuGcq+bG(|NsH8nIgG)6TwGcq+cG&nRiG&D3dGcq+ZG&D6aG($8&H8C|bG&MCeH8eFiG(t5pH8(XlH8C|cGcq(qG&wavG&VFeG(t5tGcz<oG(j~%G(<EuG&M9tGcq(YG(j{rG(j~tGcq(pG(t5vG(t5tG&D3gG%+<cH8V9qG&eLkGc+|fH8(XiH8V6eG(|NsGcq(bG(s~oH8eCtG(|HtH8M3eG)6TxG($5oG(t2*H8wRjH8C|bG&40bG&eLwG%+<eG&MChH8V6eG(t5&H8wRjG&3_ZG(t2+G(t5pG(t5uH90dhG&40cG(j~sH8wRgG&wXxH8V9fG&wagG&VFhG&40dGcq(bG)6TtG&M9gG&eOdGcz?cG(j{)G($8tG)6TvH8eFhG(t2*H8wRiG&M6bGcq(qG(t5&G&MCiH8V9fG(t5sG&wXuG&nRhGcq$XG&3|pG(j{rG($BuG&waiH8V6fG(<E-H8(XiH8nFdH8V9qG&eLkH90jmG&40eH8V9iG(<BsGc`0eG(s~oH8eCtG(s~qG(|KwH90jgG($B(G(t2*H8wRjH8C|gG(t5qG&wavG&40cG&40fG(t5vG)6TtH8wOiG&M9tG&D6aG&wakG($8uGc+|fH8V9dG(<HvG($BvG)6NuGcq+bG(|NsH8nIgG&eOhGcq(cG(|NrGcq+dG&wagG&D3hG(<EuG($8tG)6TvH8eFhG($8tGc`0dGcq(pG($8sG(|NsG&nRhG(t5wG(t2uH83<XG(j{qGcq(pG(t2&G(j{rG(j~qG%+(WG%__cG(t2*G($BuG&MCcH8V9qG&eLkH90jmG&40eH8V9eG(|NsGcz<cG(s~oH8eCtG(|HtG&eOhG(t2)G($BpG(<E-G&40fH8C|bG&40cG&wavG&40gH8C|eG($5oG&wXuH8wOiG&M9tH8V6tH83<mG&nRiH8C?XG&40dG(t2%G&D6gG)6NvH8V9gG(s~pH90jnG)6TwGcq+cG&nRiG&D3eG&wUeH8eCiG($8&G($8tG)6TwH8eFcG($8&G($BwG%++qG&40pG(t5&G&VFeG(t5wG(t2rG&wXuG&nUjG(t2)G($BpG(j{rG(j~qG%+(WG%__cG(t5pG&D6fG&MCgH8V3ZG&wUhH90gjH90jjG(j~qG(|KrGcq(bG(s~oH8eCtG(|HtG&eOhG(t2*G(t5&G(t5tH8wRjH8C|bG&40cG&wavG&40gH8C|cGcz<rG)6TtH8?aiGc+|aGcq+YH83<XG(j~tGc+|aH8V9dG(<HvG($8uH90gzH8V9hG&wagG&D3gG&eOhGcq(cG(|K;Gc`0fG&M6eG(j~%G($8&H8C|bG&MCjH9<8oG(t5pG(<EwG%++qG&40gG(t5&G&VFeG(t5tGcz<sG(t5&G($BuG(<E+Gcq(YG(j{rG(j~qG&40dH8eCbG(t5oH9<5rGcq$ZGcq+nG&eLkH90jkGd49fH8V6eG(j{$H90jlG(s~oH8eCtG(|N*G&nUiG(<HtH8V6pG(s~qH8wRjH8C|bG&40aG&eLhG&40cG%+<dH8V6fG(t5&H8wRjG&3|rG%__dG&wakG(t2tGcq$aG&40dG(t2%G&D6gH8C|eG&40dG&eLhH8V6fGd49fGcq(bG)6TtG&MCgG(t5tG&3|eG(j{)H8C|bG&MCjH9<8oG(t5&H8(XlG%+<fG($8qG(|NsG&VFeG(t5tGcz<rH83<XG(t5sGcq$XG($8wG(j{rG($BuG&waiH8V6fG(<ExH90jmH90dhH8V9qG&eLwG%_?bGd49jH8V6fG(j{rGcz?dG(s~oH8eCtG($8&H8V9gGcq+dH8V6hG(t5tH8wRjH8C|bG&40cG&wavG&40gH8C|eH8V6eG(t5&H8wOiG&MCgG(j~sG&wakG&walGcq$XG&40cG(<HvG($BvH8C?bG&3_YG(|NvH90giG(t5sGcq(bG)6TtG&M9gG&eOeG&D3dG(|K)H8C|bG&MCeH8eFiG(t5pH8(XlH8C|cGcq(qG(|NsG&nRhG(t5wG(t2uH83<XG(j~tG&MCgH8eFbG(j{rG(j~qG%+<aH8V9cG(j~%G&40gG%+(YH8V9qG&eLkH90jkGc+|cG(j~qG(|KrH90jlG(s~oH8eCtG(|N*G&nUiG(<HrH8eFgG(t2%H8wRjH8C|eH8V6tG&eLdG($8vG(<HwG(j~oG(t5&H8wOiG&M9tH8V9cG&wakG($8tG)6Q;G(t5rG(<HvG($8vG%++pG(t5uG(s~pH90jmGd49fGcq(bG)6TtG&MCgG(t5tG&3|eG(|K;G&eOhG)6TvH8eFhG($8&G&40eG&MCdGcz<cG(|NsG&VFeG(t5tGcz<rH83<XG(t5sGcq$XG($BxG(j{rG(j~tGcq(pG%__ZG(t5sH9<5rG(<HrH8V3ZG&wUhH90glH8nLhG(j~oG(j{$G(|KvG(s~oH8eCtG(<EuG(j{rG(t2*G($BtG(t2%H8wRjH8C|bG&40bG&eLwG%+<aG&eOjG(j~pG)6TtH8wOiG&M9tH8V6fG)6TxG&nRiH8C?XG&40cG(<HvG($8tG(<BtG(t5rG&eLdG(|KwH8(XiGcq(bG)6QsH90jlG(t5uG&D3dG($8&H8C|bG&MCeH8eFhG($8tG($BsG&wXxG($8tG(|NsG&VFeG(t5uH8M3bG)6TtG(j{sG&M6bG&3|pG(j{rG($BuH8C?YG%__YG(j^pG&D3fH90jlH8V3ZH83<mG(j{rG)6T!G($8+H83<WGcq(bG(s~oH8eCtG(<EuH8M0cG(<HuH8V6hG(<HrG&40fH90jkG&40fG&wakG&VFiH8C|eG(t5sG&wXuH8wRjG&3_YGcz?bH83<mH8V9eG)6NtG&40cG(<HvG($BvG)6NuGcq+bG(|NsH8nIfGd49fGcq(bG)6TtG&MChG(t5pG(j~%G(|K)G&eOhG)6T!H9<8oG(t5tG(t2rGc+_sG&D3aG&eLhG&VFeG(t5wG(t2vG)6QsH8(XkG&MCgG&D3sG(j{$G(t2qG%+<nG&40gG(t2%G&D6fG&MCcH8V9qG&eLkGc+|fGcq+bH8V9hG(<BsGcz?dG(s~oH8eCtG(<EuH8V6eG(<HwH8V9iG(<E(G&40fH8C|bG&40bG(j{nH8nIfH8nLiH8V6eG(t5&H8wOiG&M9tG&D6aG&wakG($8uGc+|fH8V9dG(<HvG($BvG)6NuGcq+bG(s~qH8(UkG)6TwGcq+cG&nRiG&MCgH8nLdH8V6uG(|KrH8C|bG&MCjH9<8oG(t5tG(t2rGc+_sG&D3aG(t5&G&VFeG(t5tGcq+bG&wXuG&nRiG&M9tG&D6aG(j{rG(j~qG%+<nG&D6hG(j~vH9<5rH8nFdH8V3ZH83<mG(j{sH8V9iG(j~pH83<XGcq(bG(s~oH8eCtG)6Q*G&eOjH90jmH8V6pG(<E(G&40fH90jkG&40bG(|NsH8wRkH8V9fGcz<qG(t5&H8wOiG&M9tH8V9cG&wakG($8tG)6Q;G(t5sG(t2%G&D6gG&eIfH8V9hG(t5&H8V6gG&eOhGcq(cG(|NrGcq+dG&wagG&D3hG($8&G($8tG)6T!H9<8oG(t5&H8(XlG%+<fG($8qG&wavG&nRhG(t5uH8M3cG)6QsG&wakG&M6eH8V6fG(j{$G(t2qG%+<dH8V3ZG(j~%G($8vG%+<cH8V3ZH83<mG(j{rG&MCeG(j~qG(|KrH9<8tG(t2)G&40bG(|HtG($8rG%++rG(t5wG(t5&H8wRjH8C|bG&40cG&wavG&D3cG(t5sGcz<qG(t5&H8wOiG&MCgH8V6qG&wakG($BvGcq(rG(t5rG(<HvG($8vG%+(YGcq+dG&wakH8nIhH8(XiGcq(bG)6QsH90jlG(t5uG&D3dG(<EuG(j{rG)6TvH8eFfG(s~qH8(UiG(<E-G&D3aG&eLhG&nRhG(t5wG(t2vG(t5&G(t2sG(<E+G($BpG(j{rG(j~qG&40dH8eCbG(t5&G($BuG&3_bGcq$WG&wUhH90glH8nLhG(j~pG(|KrH90gkG(s~oH8eCtG)6Q*G&eOjH90jmH8V6pG(t5tH8wRjH8C|aGcz<YG(|K-Gcq(ZG&wakGcz<pG(t5&H8wOiG&M9tH8V9cG&wakG($8uH8nLcH8V9dG(<HvG($8uH8(RgGcq+bG(t5tH8V6dH8(XiGcq(bG)6TtG&M9gG&eOeG&D3dG(j~oG($8tG)6T!H9<8oG(t5tG(t2rGc+_sG&D3aG(t5&G&VFeG(t5tGcz<pG&eOiG(j{qGcq$XH8V6bG(j{$G(t2qG&40dH8M3cG(j~%G&D6eH8V3cGcq+nG&eLkGc+|fH8(XiH8V6eG(|NsGcz?dG(t2)G&40bG)6Q*H8V6cG&3_ZGcz?oG(<HrG&40fH90jkG&40bH83<mG($8sGc+|fG(t5tG(t5&H8wRjG&3_ZG(t5uG)6QwH8V9eG)6NrG&40cG(<HvG($BvG)6Q<G&40fG&wUgGcq+bGd49fGcq(bG)6QsGcq(aGc+|eH8V6uG(|KrG(j{rG)6TvH8eFhG($8&G&40eG&MCgGcq(qG&eLhG&VFeG(t5wG(t2rG&wXuG&nRjG&M6aH9<8tG(j{rG(j~qG%+(WG&40bG(<HvG(t5vG%+<cH8V9qG&eLkGc+|eG&40dH8V9hG(<BsGc+_dG(s~nH8V6qG(j^pH8V9eG(s~qG&3|oG(t2sH8wRjH8C|aGcz<YG&eLhG&40gH8V9fGcq+dG(t5&H8wOiG&M9tH8V6fG)6TxH8V6dH8C?YG&40cG(<HvG($BvH8C?bG&3_YG(|NvGcq+cG&eOhGcq(cG(|K;Gc`0eG&MCgGcz?cG($8pG($8tG)6TvH8eFfG(t5pH8wRiG&MCbGcq+eG(|NsG&VFeG(t5wG(t2vG&wavG(<HwG&M6aGcq(nG(j{rG(j~tGcq$ZG&40bG(j~sH8(UkG%+(YH8V9qG&eLkH90jlG(t5tH8V9fG&eOiH90jlG(t2)G&40bG(|HtG($8rG%++pG&D6iG(<E-G&40fH90jkG&40bG&wajH90giG&walG($8*G(t5&H8wOiG&M9tH8V6fG)6TxH8V6dH8C?XG&40cG(j~sH8wRgG&3_cG(s~nG(|K;H8nIfG&eOhGcq(bG)6TtG&3|dG(t5tG&40bG(j~sG($8tG)6TvH8eFhG($8&H8wRiG(<E+G&D3eG&wavG&nRhG(t5wG(j~qG(<HrH8C|cGcq$XH8V9cG(j{rG(j~qG%+(WG&40bG(<HvG(t5vG&wakH8V9qG&eLkH90jkGd49fH8V6eG(j{$H90gkG(s~oH8eCtG(|HtG&nUiG(<HuH8eFbG(<E-G&40fH90jkG&40bG(t5pG%_?aG&eOiGcq+eG)6TtH8wOiG&MCgG(j~sG&wakG&walGcq(pG(t5sG(t2%G&D6gH8C|eG&40dG&eLhH8V6gG&eOhGcq(bG)6TtG&40fG(t5pG(s~nG(j~sG($8tG)6TvH8eFfG(t5pH8wRiG&MCbGcz<ZG(t5&G&nRhG(t5wG(t2sG(t2%H8(XjG&M9tG&3_YG(j{rG($BuG&waiH8eFhG(j^pG&D3fG&wUgH8V9qG&eLkGc+|fH8(XiH8V6fG(t5&Gcq(bG(s~oH8eCtG(|HtG&nUiG(<HtG($5oG(s~qH8wRjH8C|aGcz<YG(|NsG&D3cG&eOiGcz<rG)6TtH8?aiGc+|aH8V3ZG)6QwG($BvGcq$aG&40cG(<HvG($BvG)6NuGcq+bG(|NsG&nRjG&40dGcq+cG&nRiG&MCgH8nLdH8V6bG(|KrG($8tG)6TvH8eFfG(t5&G&D3eG&M6cGcq(qG&wavG&nRhG(t5wG(t2tG(<HrG&wXjG(<E+G%__dG(j{rG(j~tGcq(qG($8)G(<EuG&D6eG(s~qGcq+nG&eLkGc+|fH8C|gH8eCrG(t5tGcz?dG(s~nH8V6qG(j~%H8M3fH90jgG($BxG(<E-G&40fH8C|aGcz<YG(|NsG&D3cG&eOiGcq+bG&wXuH8wOiG&M9tG(t2pG&wavH8C|cG&wahH8V9dG(<HvG($BvG&wUgH8V9fG(s~pGcq+dG&40dGcq+cG&nRiG&D3eG&wajH9<8&G($8&H8C|bG&MCeH8eFfG(t5pG(t2rG(t2*G(t5vG(|NsG&VFeG(t5wG(t2rG&wXuG&nUjG)6TtG(t2&G(j{rG(j~tGcq(pG%__ZG(t5sH9<5rG(<HrH8V9qG&eLwG%_?bGd49jH8V6fG(j{rGc`0eG(s~nH8V6qG(j^pH8V9eG(s~qG&3|gG(t5pH8wRjH8C|bG&40cG(j{nH8nIfGcq+cG&D0ZG&wXuH8wRjG&3_ZG&D3sG&wakG&walGcq$aG&40cG(<HvG($8vG%+<aGcq+cG(t5pG&VFhGd49fGcq(bG)6QsH90jlG&wUeH8eCiG(|K)G(j{rG)6TvH8eFhG(t2*H8wRiG&M6bH8eCcG(t5&G&nRhG(t5wG(t2sG(t2%H8(XjG&M9tG&D6aG(j{rG(j~tGcq$YGcz?gG(t2%G&D6eG(<BrH8V3ZH83<mG($8tG&40dH8V6gG(|KqH9<5sG(s~oH8eCtG(|N*H8C|bG%++rG(t2%G(t5tH8wRjH90jkG&40aG&eLsH8nIgH8nLiG($8)G(t5&H8wOiG&MCgGcq+YH83<bG(j{sGc+|eH8V9dG(<HvG($BvG&wUgH8V9eG&eLdH8nIfG)6TwGcq(bG)6TtG&MCgG(t5tG&3|eG(j{)H8C|bG&MCeH8eFfG(t5&H8(XlG&wanG($8qG&wavG&VFeG(t5wG(t2rG&wXuG&nUjG)6TtH8V3ZG(j{$G(t2qG%+<cG($BwG(<HvH8(UjH90dhH8V9qG&eLwG%_?bGd49jH8V6fG(j{rGcz?dG(s~oH8eCtG(<EuG&eOgG&40pG&3|gG(<E-G&40fH8C|aGcz<YG(|K-Gcq(ZG&walG(j~pG)6TtH8?aiGc+|aH8eFbG(t5&G($BvGc+|aH8V9dG(<HvG($BvH8C?bG&3_YG(t5pG&nRhH8(XiGcq(bG)6TtG&M9gG&eOdGcz?cG(|K)G($8tG)6TvH8eFeG(t2)H9<8vG%++qG&D3aG(t5&G&nRhG(t5wG(t2sG&eOiG&nRhGcq$XG&3|pG(j{rG(j~qG%+(WG&40bG(<HvG($BtGc+?aH8V3ZH83<mG($8tG&40dH8V6fG($8wGcq+cG(s~nH8V6qG(j^pH8V9eG(s~pG&3|fG(<E-G&40fH8C|eH8V6tG&eLdG($8vH8V9gG($8+G)6TtH8wOiG&MCgH8eFbG(t5&H8V9eH8C|aH8V9eG(t2%G&D6hG&wXxGcq+nG(s~pH90jjG&wajGcq(bG)6TtG(t5tG)6NsG&40fG(j{$G($8tG)6TvH8eFhG($8tG($BsG&wXxG($8sG&eLhG&nRhG(t5uH8M3cG)6QsG&wakG&M6bG($8wG(j{rG($BuH8C?YG%__YG($8&H8(UkG%+<YH8V9qG&eLkGc+|fH8(XiH8V6eG(|NsGcz?dG(s~oH8eCtG($8&G&eOhG(t2)G(t2vG(t2*H8wRjH8C|bG&40cG(j{nH8nIfH8nLiH8V6eG(t5&H8wOiG&M9tG&D6aG&wakH8C|cH8C?YG&40cG(<HvG($8tG(<BtG(t5rH83<mG&nRhH8(XiGcq(bG)6TtG&MCgG(t5tG&3|eG(|K;G&eOhG)6TvH8eFhG($8&G&40eG&MCdH8eCcG&wavG&nRhG(t5wG(t2rG(j~%G($8uG&MChG&3|aG(j{$G(t2qG&40dH8V6cG(<E-G($BtG(s~qGcq+nG&eLkH90jkGd49fH8V6eG(j{$H90gkG(s~oH8eCtG(<EuH8M0cG(<HuH8V6hG(<EuG&40fH8C|bG&40cG(j{nH8nIfGcq+dH8V6fG(t5&H8wOiG&M9tH8V9cG&wakG($8uH8nLdH8V9eG(t2%G&D6gH8C|eG&40dG(|NvH90jlG)6TwGcq(bG)6TtG&MCgG(t5tG&3|eG(j{)H8C|bG&MCjH9<8oG($8&G&3|cG&3|sG($8rG&wavG&VFeG(t5tGcz<pG&eOiG&wXjG)6TtH8V6qG(j{rG(j~qG%+(WG&40bG(<HvG($BtGc+|aH8V9qG&eLkH90jmH8(XhG($8)G($8tGc+|eG(t2)G&40bG(|HtG(j{qG)6TyH8V6hG(t5pH8wRjH90jkG&40bG(t5sH90gmG(<HvH8M3aG(t5&H8wOiG&MCgG(j~sG&wakG&walGcq$ZG&40cG(<HvG($BvG)6NuGcq+bG(s~qH8(UiG)6TwGcq(bG)6QsH9<5sG(t5tG&3|pG(<EuG&eOhG)6TvH8eFfG($8&G&3|cG(<HvGcz<ZG&eLhG&nRhG(t5wG(t2tG(<HrG&wXjG(<E+H8V9cG(j{rG(j~tGcq(pG(t5vG(t5pG($8vG%+<YH8V3ZH83<mG(j{rG)6T!G($8*G)6QsGcq+cG(s~oH8eCtG(<EuH8M0cG(<HuG($B(G(<EuG&40fH8C|eH8V6tG&eLdG($8vG(<HvGcq+eG)6TtH8wOiG&eOeG(j~sG)6Q<G(t5uH8nLcH8V9dG(<HvG($8uH8(RgGcq+bG(t5tH8V6fG&40dGcq(bG)6TtG&MCgG(t5tG&3|eG(|K)G(j{rG)6TvH8eFhG($8&G&40eG&MCdH8eCdG(|NsG&VFeG(t5wG(t2rG(|KrG(t2tG(t5tGcz?gG(j{$G(t2qG%+<cH8V9ZG(j^pG&D3fH90dhH8V9qG&eLkH90jlG(t5tH8V9fG&eOiGcq(bG(t2)G&40bG(|HtH8M0cG(<HsH8eFfG(t5pH8wRjH8C|bG&40aG&eLhG&40cG%+<dG($5oG&wXuH8?aiGc+|eG(j~oG(j{nH8M3dH8C|aH8V9dG(j~sH8wRgG&3_cG(t5tG&wagG&D3gG)6TwGcq(cG(|K;Gc`0fG&M6eH8eCiG($8&H8C|bG&MCeH8eFhG($8&H8wRiG(t2)G($8tG(|NsG&VFeG(t5tGcz<qG(<HrG(j~tG&MCgH8V3ZG(j{rG(j~qG%+(WG&40bG(j~sG($BuG&MCcH8V3ZG&wUhH90glH90joG($8-G(|KqH9<5sG(s~oH8eCtG(|HtH8M3eG)6TyH8eFbG(t5&H8wRjH8C|bG&40bG(j{nH8nIfG)6TyH8V6fG(t5&H8wOiG&MCgH8eFbG(t5&G&nUjG)6NvG&40cG(j~sH8wRgG&wXxH8V9fG&wagG&VFhH8(XiGcq(bG)6TtG&M9gG&eOeG&D3dG(j{)G(j{rG)6TvH8eFhG($8&G&40eG&MCdGcz<cG&wavG&VFeG(t5tH8V9iG(j{$G&wakG&M9tG(t2&G(j{$G(t2qG%+<dH8V3ZG(<HvH8(UjG&wUgH8V9qG&eLkGc+|fH8C|gH8eCrG(t5wGcz<cG(t2)G&40bG(|N*H8M0bG&40fH8V9iG(<HrG&40fH8C|aGcq+cG&eLwG&nRkG(<HvH8M3aG(t5&H8?aiGc+|aH8V3ZG)6QwH8M0cH8C?XG&40cG(<HvG($8vG%+(YGcq+dG&wakH8V6cG%+<bGcq+cG&nRiG(t5tG&3_ZH8V6fG(|KvG($8tG)6TvH8eFfG(t5pH8wRiG&MCbGcz<ZG&wavG&nRhG(t5wG(t2tG(<HrG&wXjG(<E+G(s~nG(j{rG(j~qG%+(WG%__cG(t5pG&40cH8C?aGcq$WG&wUhH90glH90joG($8(G(|NsH9<5sG(s~oH8eCtG(|HtH8V9gGcq+dH8eFfG(j^pG(t5uH90jkG&40bG&eLhG(|KuG(t5uH8V6eG(t5&H8wOiG&M9tH8V3ZG&wavH8C|cG&wafH8V9dG(<HvG($8vG%+(YGcq+dG&wagG&VFhGd49fGcq(bG)6TtG&MCgG(t5uG&D3sG(j~oG($8tG)6TvH8eFhG(t2*H8wRiG(<HsGcq(qG(t5&G&VFeG(t5wG(t2rG&wXuG&nRjG&40fG&3|aG(j{$G(t2qG%+(WG&D3rG(t5sH9<5rG(<BrH8V3ZH83<mG(j{rG&MCeG(j~qG(|KrH90gkG(s~oH8eCtG($8&G&eOhG(t2)G(t2vG(t2%H8wRjH8C|aGcz<ZG(t5&G(|KuGc+|fG(t5tG(t5&H8wOiG&MCgG(j~sG&wakG&walGcq$YG&40cG(<HvG($8tG(<BtG(t5tG&wakH8V6eG&eOhGcq(bG)6TtG&3|dG(t5tG&3|eG(|KvG&eOhG)6TvH8eFfG($8&G&3|cG(<BqGcq(qG(t5&G&nRhG(t5uH8eFrG&nRiG(|KvG(<E+H8eFjG(j{rG($BuH8C?YG%__YG(j^pG&D3gG%+<cH8V3ZH83<mG(j{rG)6T!G($8*G)6QsH90gkG(s~oH8eCtG(<EuG&eOgG&3_ZG&40hG(<HrG&40fH90jkG&40bG(t5sGcq(ZG&wakGcq+bG&wXuH8wOiG&MCgGcq+YH83<bG(j{sGcq(pG(t5sG(t2%G&D6gH8C|eG&40dG&eLhH8V6eG)6TwGcq(bG)6TtG&MCgG(t5uG&D3sG(j{)G($8tG)6TvH8eFfG(t5tH8wRiG&MCjG($8qG(|NsG&nRhG(t5wG(t2sG(t2%H8(XjG&M6bH8V6bG(j{rG(j~qG%+(WG&40YG(j{(H9<5rH8nFdH8V9qG&eLkGc+|fGcq+bH8V9iG(j~rH9<8tG(t2)G&40bG(|HtG($8rG%++qG($BtG(t5tH8wRjH8C|bG&40fG&wavH90gkG(<HwH8V6dG&wXuH8wRjG&3_ZG(t2+G(t5pH8C|cG)6NsG&40cG(<HvG($BwG&eIgG(t5uG(t5&H8nIfGd49fGcq+cG&nRiG(t5uG&wUiH8V6fG(|K)G&eOhG)6TvH8eFhG($8&G&40eG&MCgGcq(qG(t5&G&VFeG(t5tGcz<pG(t5&G&nUkG&MCgG(s~nG(j{rG(j~qG%+<bH8M3dG(t2%H8(XjG&MCgH8V9qG&eLkH90jmG&40eH8V9eG(|NsGcz<cG(s~oH8eCtG)6Q*G&eOjH90jmH8V6pG(s~qH8wRjH90jkG&40bG&eLhG(|KuH8C|dGcz<rG)6TtH8wOiG&M9tH8V6tH83<mG&nRiH8C?XG&40dG(t2%G&D6gG&wUhH8V9gG(|NsH8V6gG&eOhGcq(bG)6TtG&40fG(t5pG(s~nG(j~sG($8tG)6TvH8eFfG(t5tH8wRiG&MCeGcz<ZG&wavG&VFeG(t5wG(t2rG(|KrG(t5uG&M6aH9<8tG(j{rG(j~tGcq$aG&D3aG(t2vH90jnG%+<cH8V9qG&eLkGc+|fH8(XiH8V6fG($8tGc`0eG(s~oH8eCtG(|HtG&eOhG(t2)G($BuG(t2*H8wRjH8C|bG&40cG(j{nH8nIfGcq+dG(j~pG)6TtH8wOiG&M9tH8V9cG&wakG(j~tGc+?ZG&40cG(j~sH8wRgG(t2*G&40cG&eLdH8nIfG&eOhGcq+cG&nRiG&D6fG)6TxG&40fG($8&G&eOhG)6TvH8eFhG($8tG($BsG(s~rH8eCbG&eLhG&VFeG(t5wG(t2rG&wXuG&nRjG&M6aGcq$WG(j{rG(j~tGcq$YG&40bG(<HqH90jnG%+<YH8V3ZH83<mG(j{rG)6T!G($8*G)6QsH90jlG(s~oH8eCtG(|N*G&nUiG(<HsH8V9qG(t5tH8wRjH90jkG&40fG(j{nH8M3gH8C|eG(j~pG)6TtH8wOiG&M9tG(t2pG&wavG(j~tGc+?ZG&40dG(t2%G&D6gH8C|eG&40dG&eLhH8nIfG)6TwGcq(bG)6QsGcq(bG(<BpH9<8pG(|K)G&eOhG)6TwH8eFcG(t2*Gc`0dG(t2*G($8pG&eLhG&nRhG(t5wG(t2tG(<HrG&wXjG(<E+G(t2&G(j{rG(j~qG%+(WG&40bG(j~sG($BtGcq$ZGcq+nG&eLkGc+|fGcq+bH8V9eG(t5wGcz<cG(t2)G&40bG)6Q*H8V6cG&MCcH8eFfG(<HvG&40fH8C|bG&40cG&wajGcq(dG&MChG($8(G&wXuH8?aiGc+|aH8eFbG(t5&G(t2tH8nLcH8V9dG(<HvG($BvG)6Q<G&40eG&eLdH8nIgG&eOhGcq+cG&nRiG&D3dGcq+ZG&D6aG(<EuG($8tG)6TvH8eFiG(t5pH8(XlH8C|cGcq(rG(t5&G&nRhG(t5wG(t2uH83<XG(j~tG&MCgG($BpG(j{rG(j~qG%+(WG&40bG(j~sG(t5vG%+(YH8V3ZH83<mG(j{sH8(XhG(t5tG)6QsGc+_dG(t2)G&40bG)6Q*H8V6cG&MCcH8eFfG(<HrG&40fH8C|aGcz<YG(|NsG&D3cG&eOiGcq+bG&wXuH8wOiG&MCgGcq+YH83<XG($8uGcq(rG(t5rG(<HvG($BvH8C?bG&3_YG(t5pG&nRhH8(XiGcq(bG)6QsH90jlG(t5uG&D3dG(<EuH8C|bG&MCeH8eFhG($8&G&40eG&MCgGcq(qG&wavG&VFeG(t5wG(t2rG&wXuG&nUjG(t2)G($BpG(j{$G(t2qG%+(WG&D3rG(t5tG&D6eG(<HvH8V9qG&eLkH90jlG(t5tH8V9fG&eOiGcq+cG(s~oH8eCtG(|HtH8M3eG)6TyH8eFfG(j~%G(t5uH90jkG&40bG&wajH90giG&wakH8M3ZG(t5&H8wOiG&MCgGcq(nG)6Q<G($8uGc+|aH8V9dG(<HvG($BwG&eIgG(t5uG(|K;H8nIgG&eOhGcq+cG&nRiG&D6fG)6TxG&40fG(<EuG($8tG)6TvH8eFhG($8&G&40eG&MCdH8eCcG&wavG&VFeG(t5tGcz<pG(t5&G&nUkG&MCgGcq+ZG(j{$G(t2qG%+<cH8V9ZG(j^pG&D3gG%+<cH8V9qG&eLkH90jkGd49fH8V6eG(j{$H9<5sG(s~oH8eCtG(|HtG&nUiG(<HuH8eFgG(s~qH8wRjH8C|eH8V6tG&eLdG($8vH8V9fGcq+eG)6TtH8?aiGc+|aG($BtG&wUhH8C|cH8C|YH8V9dG(j~sH8wRgG(t2*G&40cG&eLdH8V6dH8(XiGcq(bG)6TtG(t5tG)6NsG&40fG(|K;G(j{rG)6TvH8eFfG(t5&G&D3eG(<HtGcz<ZG(|NsG&VFeG(t5wG(t2rG&wXuG&nUjG)6TtH8V3ZG(j{rG(j~tGcq$ZG&40bG(<HvH8(XiGcq$ZGcq+nG&eLkGc+|fH8C|gH8eCrG(t5wH9<5sG(t2)G&40bG(|HtG(j{qG)6TyH8V6hG(t2*H8wRjH8C|aGcz<YH83<mG&D3dG(t5tGcz<qG(t5&H8?aiGc+|aH8eFbG(t5&G($BvGcq$aG&40cG(<HvG($BvG)6NuGcq+bG(s~qH8(UkG&eOhGcq+cG&nRiG(t5uG&wUiH8V9cG(|K;H8C|bG&MCeH8eFeG(t2)H9<8uH90gyG&D3eG&wavG&VFeG(t5tGcz<pG(t5&G&nRhGcq$WGcz?YG(j{rG(j~tGcq(qG($8)G(<EuG&D6fG&M6cH8V9qG&eLkH90jlG)6T!G(j~oG)6QsH9<8tG(s~oH8eCtG(|HtG&eOhG(t2*G(t5&G(t5tH8wRjH8C|eH8V6tG&eLkGc+_bG&walG(j~nG(t5&H8wOiG&MCgH8eFbG(t5&G&nUjH8C|YH8V9dG(<HvG($BvH8C?bG&3_YG(t5pG&nRhG)6TwGcq(cG(|K;Gc`0eG&MCgGcz?cG($8pG(j{rG)6TvH8eFfG(t5pG(t2rGc+_sG&D3dG&eLhG&VFeG(t5wG(t2vG&wavH8(UhGcq(pG&D6aG(j{rG(j~qG%+<nG&D6hG(j{(H9<5rGc+|eH8V9qG&eLsGc+_cH90jwG(t5vG(|KrG(<HvG(s~oH8eCtG($8&G&eOhG(t2)G(t2vG(t2*H8wRjH8C|bG&40bG(j{nH8nIfH8nLiH8V6gG)6TtH8wOiG&M9tG&D6aG&wavG(j~tH8nLdH8V9dG(<HvG($8vG%+<aGcq+cG(t5pG&VFhH8(XiGcq+cG&nRiG&D6fG)6TxG&40fG(|K)G($8tG)6TvH8eFfG(s~qH8(UiG(<E-G&D3cG(|NsG&MCiH8V9fG&40hG(j{$H8(XjG&M9tG($BpG(j{$G(t2qG%+<aH8eFaG(s~qG($BtG(<HvH8V3ZH83<mG(j{rG)6T!G($8*G)6QsGcq(bG(s~oH8eCtG(|N*H8C|bG%++rG(t2%G(t5tH8wRjH8C|eH8V6tG(|K;G&D3cG&eOiGcz<qG(t5&H8wOiG&M9tH8V9cG&wakG(j~sH8C|YH8V9dG(<HvG($8uH8(RgGcq+bG(t5tH8V6dH8(XiGcq(bG)6TtG(t5tG)6NsG&3|pG(j~oH8C|bG&MCeH8eFfG($8tH8(XlH8C|dGcz<aG&wavG&VFeG(t5wG(t2rG&wXuG&nRjG&40fG&3|aG(j{rG(j~qG%+(WG&40bG(j~sG(t5vG%+(YH8V9qG&eLkGc+|fH8(XiH8V6fG($8wH9<8tG(t2)G&40bG(|HtG&eOgG&40eH8eFfG(<E-G&40fH90jkG&40fG&wakG&VFiH8C|eG(t5sG&wXuH8wOiG&MCgG(j~sG&wakG&walGcq$XG&40cG(<HvG($BvG)6Q<G&40fG&wUgGcq+bGd49fGcq+cG&nRiG&MCgH8nLdH8V6uG(<EuG&eOhG)6TvH8eFfG(t5pH8wRiG&MCbGcz<ZG&wavG&MCiH8V9fG&D3qG($8&G&wakG&eOeG($BpG(j{rG(j~qG&40dH8eCbG(t5&G($BuG&MCcH8V3ZH83<mG(j{sH8(XhG(t5tG)6QsGc+_dG(s~oH8eCtG($8&H8V9gH90jwGcz?gG(<E-G&40fH8C|bG&40cG&wavG&40gH8C|eH8V6fG(t5&H8wOiG&eOeG(j~sG)6Q<G(j{sH8nLfH8V9dG(<HvG($8vG%++pG(t5uG(|NsH8V6gG)6TwGcq(bG)6TtG(t5tG)6NsG&3|pG(t2oG&eOhG)6TvH8eFhG($8&G&40eG&MCgGcz<cG(t5&G&VFeG(t5uH8e9aG(|KrG(t2sG&eOeH8eFbG(j{rG(j~qG%+<aH8V9dG(t2rH9<5sG&M6cH8V9qG&eLwG%_?bGd49jH8V6eG(t5sGcq(bG(s~oH8eCtG($8&G&eOhG(t2)G(t2vG(t5&H8wRjH8C|aGcz<ZG(t5&G(|KuGc+|eGcz<pG(t5&H8?aiGc+|aGcq(nG)6Q*H8M0cG)6Q<G(t5rG(<HvG($8vG%+(YGcq+dG&wagG&VFhGd49fGcq(cG(|K;Gc`0eG&MCgH9<8&G($8&H8C|bG&MCeH8eFiG(t5pH8(XlH8C|ZGcz<cG(|NsG&nRhG(t5wG($5oG(|KrG&wXjG&eOeH8V6qG(j{rG(j~qG&40dH8eCbG(t5oH9<5rGc+?aH8V3ZG&wUhH90glH90joG($8-G(|KrH90gkG(s~oH8eCtG(|N*G&nUiG(<HsH8V9qG(t5&H8wRjH8C|bG&40aG&eLhG&40cG%+<dH8V6eG(t5&H8wOiG&eOeG(j~sG)6Q<G(t5uH8nLeH8V9eG(t2%G&D6gH8C?ZGcq+cG(|NvH90jmG&40dGcq(bG)6TtG&MCgG(t5tG&3|eG(|K)G(j{rG)6TvH8eFhG($8&G&40eG&MCdGcz<cG(t5&G&VFeG(t5wG(t2rG&wXuG&nRjG&40fG&3|aG(j{rG(j~qG%+<aH8V9cG(j~%G&D6eGc+|aH8V9qG&eLkGc+|fGcq+bH8V9eG(t5wGcz<cG(s~oH8eCtG(<EuG($8rG&40bH8eFfG(t5&H8wRjH8C|bG&40cG&wavG&40gH8C|eH8V6eG(t5&H8?aiGc+|aH8eFbG(t5&G(t2tH8nLdH8V9dG(<HvG($BvG&wUgH8V9eG&eLdG&nRjG&40dGcq(bG)6TtG&40fG(t5pG($8*G(|K;G($8tG)6TwH8eFcG($8sH90jkGc+|dGcq+eG&wavG&nRhG(t5wG($5oG(|KrG&wXjG&eOeH8V6qG(j{rG(j~qG%+<nG&D6hG(j~vH9<5rGc+?aH8V9qG&eLkGc+|fH8C|gH8eCrG(t5wGcq(bG(s~oH8eCtG(t5&H8M3fH90jgH8V6hG(j~%G(t5uH8C|aGcz<YG&eLhG&40gH8V9gG(t5tG(t5&H8wOiG&M9tH8V6fG)6TxH8M3cG&M9vG(t5sG(t2%G&D6hG&wXxGcq+eG(|K)G&MCiH8C|cGcq(bG)6QsG(t2tG&eIgH8eCiG($8&G&eOhG)6T!H9<8oG(t5&H8(XlG%+<aGcq+nG(t5&G&nRhG(t5uH8M3cG)6QsG&wakG&M6eH8V6fG(j{rG(j~qG%+<nG&D6hG(j~vH9<5rGcq$ZGcq$WH83<mG(j{qH90jkH8eCuG(|KrGcz<cG(s~oH8eCtG(|HtG&eOhG(t2)G($BuG(t2*H8wRjH8C|bG&40cG(j{nH8nIgG%+<dG($5oG&wXuH8wRjG&3_ZG(t2+G(t5pH8V6dG)6NtG&40cG(<HvG($BvH8C_rH8V3ZG(|NvH90giG&40dGcq+cG&nRiG&D6fG)6TxG&3|pG(|K)G($8tG)6TvH8eFhG($8tG($BsG&wXxG&D3bG&wavG&nRhG(t5wG(t2sG&eOiG&nRhGcq$XG&D6aG(j{rG($BuG&waiH8V6fG(<E-H8(UkG%+<YH8V3ZH83<mG(j{rG)6T!G($8*G)6QsGcz<cG(s~oH8eCtG(|N*G&nUiG(<HsH8V9qG(t5&H8wRjH8C|aGcz<YG(|NsG&D3cG&eOiGcz<rG)6TtH8?aiGc+|aH8V6eH83<mH8V9eG)6NvG&40dG(t2%G&D6gH8C|eG&40dG(|NvGcq+cG&eOhGcq(bG)6QsGcq(bG(<BpH9<8pG(|KrG&eOhG)6TwH8eFcG(t2*Gc`0dG(t2*G($8pG(t5&G&VFeG(t5tGcz<oG(j~%G(|KvG(<E+Gcq+ZG(j{rG($BuG&waiH8V6fG(<E-H8(UjH90dhH8V9qG&eLkH90jmH8(XhG(t5vG(<BsGc+_dG(t2)G&40bG(|HtG&eOgG&40dG($B(G(<E(G&40fH8C|aGcz<YH83<mG&D3dG(t5tGcz<oG&wXuH8wRjG&3_ZG(t2+G(t5pH8V6dG(<BrG&40dG(t2%G&D6gG&wXyH8V9fG&wakH8V6dH8(XiGcq(bG)6TtG&M9gG&eOeG&D3dG(|K)G&eOhG)6TwH8eFcG($8sH90jkGc+?ZGcz<cG&wavG&VFeG(t5wG(t2rG&wXuG&nUjG)6TtG($BpG(j{rG(j~qG%+<bH8M3dG(t2*G($BuG&M6cH8V9qG&eLkGc+|dH8(XiH8V9fG(|HtGc+|eG(s~oH8eCtG)6Q*G&eOjH90jlH8V9fG(<HvG&40fH8C|aGcz<YG(|NsG&D3cG&eOiGcz<qG(t5&H8?aiGc+|aG(j~oG&eOtH8V9eH8C|cH8V9dG(<HvG($8vG%++pG(t5uG(s~pH90jnG)6TwGcq+cG&nRiG&3|eG&40aH8eCtG(|KrG($8tG)6TwH8eFcG($8sH90jkGc+?ZGcz<YG(|NsG&VFeG(t5wG(t2rG(|KrG(t2tG(s~oH8V9cG(j{rG($BuG&wahH8V6bG(<HqH90jnG%+<cH8V9qG&eLkH90jlG(t5tH8V9fG&eOiGcz<cG(s~oH8eCtG($8&H8V9gGcq+dH8V6pG(t2sH8wRjH8C|bG&40bG(j{nH8nIfG)6TyH8V6fG(t5&H8wOiG&M9tH8V6fG)6TxH8V6dH8C?YG&40cG(<HvG($BwG&eIgG(t5uG(|K;H8nIhG&40dGcq+cG&nRiG&M9fG(<BpGcz<bG(<EuH8C|bG&MCeH8eFhG($8&G&40eG&MCgGcz<bG&eLhG&VFeG(t5wG(t2rG&wXuG&nRjG&M6aGcz?YG(j{rG($BuH8C?YG%__YG($8&H8(XiGcq$ZGcq+nG&eLkH90jlG&eOhH8V6eG&eOiH90gkG(s~oH8eCtG(|HtG&nUiG(<HuH8eFgG(t5pH8wRjH8C|aGcz<ZG&wavH90gjH8C|dGcz<qG(t5&H8wOiG&M9tH8V9cG&wakG($8uH8nLdH8V9eG(t2%G&D6gH8C?ZGcq+bG&eLhH8V6dG)6TwGcq(bG)6TtG&MChG(t5pG($BxG(|K)H8C|bG&MCeH8eFhG($8tG($BsG(t2)G&D3eG(|NsG&VFeG(t5tGcz<pG&eOiG&nUkG&MCgG(s~nG(j{rG($BuG&waiH8eFhG(j~nH90jmG&wakH8V9qG&eLkGc+|fH8C|gH8eCvG(j~%H9<5sG(s~oH8eCtG(|HtG&eOhG(t2)G($BuG(t2%H8wRjH8C|aGcz<YG(|NsG&D3cG&eOiGcz<pG(t5&H8?aiGc+|aH8V9cG(t5tG(t2tGcq$YG&40cG(<HvG($BvH8C?bG&3_YG(|NvGcq+bGd49fGcq(bG)6TtG&3|dG(s~nGcq(rG(|K;G(j{rG)6TwH8eFcG(t2)H9<8uGd46uG($8pG&wavG&nRhG(t5wG(t2tG(<HrG&nRhGcq+dG&3|aG(j{rG(j~tGcq(qG($8)G(t5&H8(XiG(<HrH8V3ZH83<mG($8sGc+|dH8M3bG(t2%Gc+_dG(t2)G&40bG)6Q*H8V6cG&MCcH8eFfG(<E-G&40fH8C|bG&40bG&eLwG%+<eG&MChG(j~oG(t5&H8wOiG&M9tH8V3ZG&wavH8V6dH8C?YG&40dG(t2%G&D6gG&eIfH8V9hG(|K;H8V6cG%+<bGcq(bG)6TtG&MCgG(t5uG&D3sG(j~oG($8tG)6TvH8eFfG(t5pH8wRiG&MCbGcz<YG(t5&G&VFeG(t5wG(t2rG(|KrG(t2sG&eOeH8V6qG(j{$G(t2qG%+<cG($BwG(<HqH90jmH8(RgGcq+nG&eLkGc+|eG&40dH8V9hG(|KqGcz<cG(t2)G&40bG(|HtH8M0cG(<HsH8eFfG(s~qH8wRjH8C|bG&40bG(j{nH8nIfG)6TxG&3|eG(t5&H8wOiG&MCgG(j~sG&wakG&walGcq(pG(t5sG(t2%G&D6gH8C|ZG(s~nG(|K;H8V6dG)6TwGcq(cG(|K;Gc`0fG&M6eH8eCiG($8pH8C|bG&MCeH8eFhG($8&G&40eG&MCgH8eCcG(t5&G&VFeG(t5wG(t2rG(|KrG(t2rGcq(pG($BpG(j{rG(j~tGcq$YG&40bG(<HqH90jnG%+<cH8V3ZG&wUhH90glH90joG($8-G(|KqGcq(bG(s~oH8eCtG(|HtG&eOhG(t2*G(t5sG(s~qH8wRjH90jkG&40cG&wUhG(j{rG&40fG(t5uG(t5&H8wOiG&MCgH8V9cG(t5&G(t2tGcq(qG(t5rG(j~sH8wRgG(t2*G&40cG&eLdH8M3cG&40dGcq(bG)6TtG(t5tG)6NsG&3|pG(t2sG(j{rG)6TvH8eFhG($8tG($BsG&wXxG(t2*G&wavG&MCiH8V9fG&40hG(j{$H8(XjG&M9tG&3_YG(j{$G(t2qG%+<dH8V3ZG(j~%G($8vG%+<cH8V9qG&eLkGc+|fH8(XiH8V6eG(|NsH9<8tG(s~oH8eCtG(<EuG(j{rG(t2*G($BtG($8&G&40fH90jkG&40bG(t5sGcq+dGcq+dG(j~oG(t5&H8wOiG&M9tH8V9cG&wakG($8uH8nLdH8V9dG(<HvG($8uGd43eH8V9hG(t5&H8V6cG%+<bGcq+cG&nRiG&D6fG)6TxG&3|pG(<EuH8C|bG&MCfH8eFdG(t5pH8wRiG&M6cGcz<ZG(t5&G&MCiH8V9fG&D3uG(|KrG&eLgGcq$WH9<8tG(j{rG(j~tGcq(pG%__ZG(t5sH9<5rG(<HvH8V9qG&eLkH90jlG(t5tH8V6gH83<XGcq(bG(s~oH8eCtG(|N*G&nUiG(<HrH8eFgG(t2sH8wRjH8C|eH8V6tG&eLdG($8vH8V9fH8M3bG)6TtH8wOiG&M9tG(t2pG&wavG($8uH8nLdH8V9dG(<HvG($BvH8C?bG&3_YG(t5pG&nRhH8(XiGcq(bG)6TtG(t5tG)6NsG&40fG(|K;H8C|bG&MCjH9<8oG(s~qH8(UiG(<HyG($8qG&eLhG&VFeG(t5wG(t2rG&wXuG&nUjG)6TtH8V6qG(j{rG(j~tGcq$YG&40bG(<HqH90jnG%+<cH8V9qG&eLkGc+|eG&40dH8V9fG)6QrGcq(bG(s~nH8V6qG(j^pH8V9eG(s~qG&3|oG(t2%H8wRjH8C|bG&40cG(j{nH8nIgG%+<dG($5oG&wXuH8wOiG&MCgH8V3ZG)6Q*G($BvGcq$aG&40cG(<HvG($BvG)6NuGcq+bG(|NsH8nIgG&eOhGcq(cG(|K;Gc`0eG&MChG&3|pG(<EuH8C|bG&MCeH8eFiG(t5pH8(XlH8C|ZGcz<cG(|NsG&nRhG(t5uH8M3bG&nRiG(<EuG&M9tGcq(YG(j{rG(j~tGcq$YGcz?fG(j~%G($BuG&MCcH8V9qG&eLkGc+|fH8(XiH8V6eG(|NsGcq(bG(s~oH8eCtG(|HtH8M3eG)6TxH8M3eG(t5tH8wRjH8C|bG&40cG&wavG&D3cG(t5uG(j~oG(t5&H8wOiG&MCcG($BtG&eOtH8V9eG)6NuG&40dG(t2%G&D6gH8C|eG&40dG(t5pG&D3gG)6TwGcq(bG)6TtG&40fG(t5pG($8*G(|K;H8C|bG&MCjH9<8oG(t2)H90gkH8nLhGcz<aG(|NsG&VFeG(t5tH8V9iG(j{$G&wakG&M6bG($BxG(j{$G(t2qG%+<dH8V3ZG(<HvH8(UjG&wUgH8V3ZH83<mG(j{qGc+|pG($8-G(|KqH90gkG(s~oH8eCtG(|HtH8M3eG)6TxG($5oG(t2*H8wRjH8C|bG&40fG&wavH90gkG(<HuGcq+dG(t5&H8wOiG&M9tG&D6aG&wakG(|KtG&eOfH8V9eG(t2%G&D6gG&wXyH8V9fG&wakG(|KwGd49fGcq(cG(|K;Gc`0fG&M6eG(j~%G(<EuG(j{rG)6TvH8eFhG($8tGc`0dGcq(pG($8sG(|NsG&nRhG(t5wG(t2uH83<XG(j{qGcq(pG(t2&G(j{rG(j~qG%+(WG%__cG(t2*G($BuG&MCcH8V3ZH83<mG(j{rG(t5tH8V6eG&eOiH9<8tG(s~oH8eCtG)6Q*G&eOjH90jmH8V6pG(<EuG&40fH8C|bG&40aG&eLhG&VFfG&wajH9<8oG(t5&H8wOiG&M9tH8V6fG)6TxG&nRhG)6NvG&40cG(<HvG($BvG)6NuGcq+bG(|NsH8nIgG)6TwGcq+cG&nRiG(t5tG&3_ZH8V6fG(|KrG&eOhG)6TvH8eFfG(t5pH8wRiG&MCbGcz<YG(t5&G&VFeG(t5tGcz<rH83<XG(t5tG&M9tH8eCiG(j{rG(j~qG%+(WG%__cG(t5pG&D6fG&MCgH8V3ZH83<mG(j{rG&MCeG(j~qG(|KrH9<5sG(s~nH8V6qG(j^pG&nRjH90jgH8V6pG(t2%H8wRjH8C|bG&40cG&wavG&40gH8C|cGcz<rG)6TtH8?aiGc+|aGcq+YG)6NuG&nUjH8C|YH8V9dG(<HvG($8vG%+<aGcq+cG(t5pG&VFhH8(XiGcq+cG&nRiG&M9fG(<BpGcz<bG($8&H8C|bG&MCeH8eFhG($8&G&40eG&MCgH8eCcG(t5&G&VFeG(t5tGcz<sG(t5&G($BuG(<E+Gcq(YG(j{rG(j~qG&40dH8eCbG(t5tH8(UhG&MCcH8V9qG&eLkGc+|fH8(XiH8V6fG($8wGcq+cG(s~oH8eCtG(|N*G&nUiG(<HtH8V6pG(s~qH8wRjH8C|bG&40aG&eLhG&VFfG&walH8V6gG)6TtH8?aiGc+|aH8V6fG&eOtG&nUjG)6NsG&40cG(<HvG($8uH90gzH8V9hG&wagG&D3gG&eOhGcq(bG)6TtG&MChG(t5pG(j~%G(|K;H8C|bG&MCjH9<8pG(t5pG(t5uG&wUeGcz<aG&wavG&VFeG(t5wG(t2rG&wXuG&nUjG)6TtG(j~sG(j{rG($BuG&waiH8V6fG(<E-H8(UjH8(RgGcq+nG&eLkH90jmH8V9iH8V6eG)6QsGcz?dG(s~oH8eCtG($8&G&eOhG(t2)G(t2vG(t5&H8wRjH8C|aGcz<ZG(|NwG(j{sGd49hG(t5sG&wXuH8wOiG&MCgH8V6qG&wakG(t2tGcq(rG(t5rG(<HvG($BvH8C_rH8V3ZG(|NvGcq+bG)6TwGcq(bG)6QsGcq(bG(<BqG&3|aG(|KrG(j{rG)6TvH8eFiG(t5pH8(XlH8C|cGcq(qG&eLhG&nRhG(t5wG(t2uH83<XG(j~tG&MCgG(j~sG(j{rG(j~qG%+<aH8V9cG(j~%G&D6eGcq$ZGcq$WH83<mG($8sGc+|dH8M3cG&wXuGc+|eG(s~nH8V6qG(j~%H8M3fH90jgG($BxG(<E-G&40fH8C|eH8V6tG&eLkGc+_bG&wakH8M3aG(t5&H8wOiG&MCgGcq+YH83<bG(j{sH8nLeH8V9dG(<HvG($8vG%+<aGcq+cG(t5pG&VFiG&eOhGcq+cG&nRiG&D6fG)6TxG&40fG(<EuH8C|bG&MCeH8eFfG(t5tH8wRiG&MCeGcq(qG(t5&G&VFeG(t5wG(t2rG(|KrG(t2rGcq(pG&D6aG(j{rG(j~tGcq$aG&D3aG(t2*H8(XiG(<HrH8V9qG&eLkH90jlG(t5tH8V6fG)6QsH90gkG(s~oH8eCtG(|N*H8C|bG%++rG(t2%G($8&G&40fH8C|bG&40bG&eLwG%+<aG&eOjG(j~pG)6TtH8wOiG&M9tH8V6fG)6TxG&nRiH8C?XG&40cG(<HvG($8tG(<BtG(t5rG&eLdG(|KwH8(XiGcq(bG)6QsH90jlG(t5uG&D3dG($8&H8C|bG&MCeH8eFhG($8tG($BsG&wXxG($8tG(|NsG&VFeG(t5uH8M3bG)6TtG(j{sG&M6bG&3_YG(j{rG(j~tGcq$YGcz?gG(t2%G&D3fGd43dGcq$WH83<mG(j{rG)6T!G($8+H83<WGcq(bG(s~oH8eCtG(<EuH8M0cG(<HuH8V6hG(<HrG&40fH8C|eH8eCfG($8pG&waiG&wakGcz<qG(t5&H8wOiG&MCgG(j~sG&wakG&walGcq$ZG&40dG(t2%G&D6gH8C|eG&40dG&eLhH8V6fH8(XiGcq(bG)6TtG&MCgG(t5tG&3|eG(|K;G&eOhG)6T!H9<8pG(t5pG(t5uG&wUeGcz<aG(|NsG&VFeG(t5wG(t2rG&wXuG&nRjG&40eGcz?gG(j{rG(j~tGcq$YG&40bG(<HqH90jmH90dhH8V9qG&eLkGc+|fGcq+bH8V9hG(<BsGcz?dG(s~oH8eCtG(|N*H8C|bG%++rG(t2%G(t2*H8wRjH8C|aGcq+cG&eLwG&nRkH8V9gG(j~pG)6TtH8wOiG&M9tH8V9cG&wakG($8uH8nLfH8V9dG(<HvG($BvG)6NuGcq+bG(|NsG&nRjG&40dGcq+cG&nRiG&MCgH8nLdH8V6uG(|KrH8C|bG&MCjH9<8oG(t5tG(t2rGc+_sG&D3aG&wavG&MCiH8V9fG&D3qG($8&G&wakG&M6bH8V6bG(j{rG(j~qG%+(WG%__cG(t5oH9<5sG&3_bGcq+nG&eLkGc+|fH8C|gH8eCvG(t2vGcz<cG(s~nH8V6qG(t2%G&eOhG(t2+G(t5wG(<EuG&40fH8C|bG&40aG&eLhG&40cG%+<bH9<8pG(t5&H8wOiG&M9tH8V9cG&wakG($8tG)6Q;G(t5sG(t2%G&D6gG)6NvH8V9gG&wagG&VFiG&eOhGcq(bG)6QsH9<5rGcq+YG&40fG(|K;G(j{rG)6T!H9<8oG(t5&H8(XlG%+<fG($8qG(t5&G&VFeG(t5wG($5oG(j{$G($BuG&eOeGcz<fG(j{rG(j~tGcq(pG%__ZG(t5sH9<5rG(<HvH8V3ZH83<mG(j{rG&MCeG(j~qG(|KrH9<5sG(t2)G&40bG(|HtG($8rG%++rG(t5wG(t5tH8wRjH8C|bG&40bG(j{nH8nIfH8nLiH8V6gG)6TtH8wOiG&M9tG&D6aG&wavG(j~tH8nLeH8V9dG(<HvG($8uGd43eH8V9gG(|NsH8V6fH8(XiGcq+cG&nRiG&D6fG)6TxG&40fG(<EuG($8tG)6TvH8eFfG(s~qH8(UiG(<E-G&D3aG&eLhG&nRhG(t5wG(t2vG(t5&G(t2sG(<E+G($BpG(j{rG(j~tGcq(pG(t5vG(t5tG&D6eG(<HrH8V3ZG&wUhH90glH8nLhG(j~pG(|KrH90gkG(s~oH8eCtG)6Q*G&eOjH90jlH8V9qG(t5pH8wRjH90jkG&40fG(j{nH8M3gH8C|eG(j~pG)6TtH8wRjG&3_ZG(t2+G(t5pH8V6dG(<BrG&40cG(<HvG($8uH8(RgGcq+bG(t5tH8V6fG&40dGcq(bG)6TtG&40fG(t5pG(s~nG(|K;G($8tG)6TvH8eFfG(s~qH8(UiG(t2*G($8qG&eLhG&VFeG(t5wG($5oG(j{$G($BuG&eOeH8eFbG(j{$G(t2qG%+<nG&40gG(t2vH9<5rG(<HvH8V9qG&eLkGc+|fH8(XiH8V6fG($8wH9<8tG(t2)G&40bG(|N*H8M0bG&40pG&3|gG(<HvG&40fH90jkG&40bG(t5sGcq(ZG&wakH8M3bG)6TtH8?aiGc+|aH8V3ZG)6QwG($BvH8nLdH8V9dG(<HvG($8vG%+(YGcq+dG&wakH8V6fGd49fGcq(bG)6QsGcq(aGc+|eH8V6uG(|KrG(j{rG)6TvH8eFhG($8&G&40eG&MCgGcq(qG&eLhG&VFeG(t5wG(t2rG&wXuG&nRjG&M6bG&3|pG(j{rG(j~qG%+<bH8M3dG(t2*G($BtGc+?aH8V9qG&eLkH90jmH8V9iH8V6fG($8&Gc+|eG(s~oH8eCtG(<EuG(t2tH8(UxG($BtG(t2*H8wRjH8C|aGcz<YG(|K-Gcq+dGcq+cH8M3aG(t5&H8wOiG&M9tH8V6fG)6TxH8V6dH8C?YG&40cG(<HvG($BvH8C?bG&3_YG(|NvGcq+bG)6TwGcq(bG)6QsG(t2tG&eLvH8M3pG(s~qG&eOhG)6TvH8eFfG(t5pH8wRiG&MCbGcz<YG(t5&G&VFeG(t5wG(t2vG&wavH8(XkG&M6aH9<8tG(j{rG(j~qG%+(WG&40bG(j~sG($BuG&M6cH8V9qG&eLsGc+_cH90jwG(t5vG(|KrH8C|dG(t2)G&40bG(|HtG($8rG%++pG&D6iG(<E-G&40fH8C|aGcz<ZG(|NwG(j{rG)6TyG(t5tG(t5&H8?aiGc+|eG(j~oG(j{nG(|KuH8C|ZH8V9eG(t2%G&D6hG&wXxGcq+nG(s~pH90jnG)6TwGcq(bG)6TtG&MCgG(t5tG&3|eG(|K)G&eOhG)6TvH8eFhG($8&H8wRiG(t2)G($8tG(|NsG&nRhG(t5wG(j~qG(<HrH8C|cGcq$XH8V9cG(j{rG(j~qG%+(WG&40YG(j{(H9<5rH8V3cGcq$WH83<mG(j{sG&40eH8V9fG&eOeGcz?dG(s~oH8eCtG(|N*G&nUiG(<HsH8V9qG(t5&H8wRjH8C|aGcz<ZG(t5&G(|KvG&40eGcz<oG&wXuH8wOiG&MCgG(j~nH83<XG&nUjG)6TtH8V9dG(<HvG($8uH8(RgGcq+bG(t5tH8V6fGd49fGcq(bG)6TtG&40fG(t5pG(s~nG(j~oG(j{rG)6TvH8eFfG(t5pH8wRiG&MCbGcz<ZG(t5&G&nRhG(t5wG(j~qG(<HrH8nIhG&MChG&40bG(j{rG(j~tGcq$YG&40bG(<HqH90jmH90dhH8V9qG&eLkH90jmG&40eH8V9iG(|KrGcz<cG(s~oH8eCtG(|HtG&nUiG(<HtG($5oG(t5&H8wRjH8C|bG&40cG&wavG&40gH8C|eH8V6fG(t5&H8wOiG&M9tH8V6fG)6TxG&nRiH8C|oG&40cG(<HvG($BwG&eIgG(t5uG(|K;H8nIgG&eOhGcq+cG&nRiG&MCgH8nLdH8V6bG(|KrG($8tG)6TvH8eFfG(t5&G&D3eG&M6cGcq(qG&wavG&nRhG(t5wG(t2tG(<HrG&nUkG&MCgH8eFbG(j{rG(j~qG&40dH8eCbG(t5&G($BuG(<HrH8V9qG&eLkH90jmH8V9iH8V6eG)6QsGcz<cG(s~oH8eCtG)6Q*G&eOjH90jkH8eFgG(s~qH8wRjH8C|aGcz<YG(|NsG&D3cG&eOiGcz<pG(t5&H8wOiG&M9tH8V9cG&wakG(j~sG)6NvG&40cG(<HvG($8vG%+<YH8V9eG(|NvH90jmH8(XiGcq+cG&nRiG&D3eG&wUeH8eCiG($8&H8C|bG&MCfH8eFcG($8sH90jkGc+_rG&D3aG(t5&G&VFeG(t5wG(t2rG&wXuG&nUjG)6TtG(t2&G(j{rG(j~tGcq$aG&D3aG(t2vH9<5rG(<HrH8V9qG&eLkH90jkGd49fH8V6eG(j{$H9<5sG(s~nH8V6qG(j^pH8V9eG(s~qG&3|gG(t2*H8wRjH8C|bG&40fG&wavH90gkG(<HwH8V6eG(t5&H8wOiG&MCgH8V9cG(t5&G(t2tGcq(qG(t5rG(<HvG($BvG)6NuGcq+bG(|NsH8nIgG&eOhGcq(bG)6QsH90jlG&wUeH8eCiG(<EuG($8tG)6TvH8eFhG($8&H8wRiG(<BtH8eCdG&wavG&VFeG(t5wG(t2vG&wavH8(UhGcq(pG&D6aG(j{rG(j~qG&40dH8eCbG(t5&G($BuG&M6cH8V3ZH83<mG(j{sG&40eH8V9gG)6QsGcq(bG(s~oH8eCtG(|HtG&eOhG(t2*G(t5&G(t2sH8wRjH8C|bG&40cG&wavG&D3cG(t5uG(j~pG)6TtH8wOiG&M9tH8V9cG&wakG(j~sH8C|ZH8V9dG(<HvG($BvG)6NuGcq+bG(|NsH8nIhG&40dGcq(bG)6TtG&MChG(t5pG(j~%G(|K)G&eOhG)6TvH8eFfG(t5&H8(XlG&wanG($8qG&wavG&VFeG(t5wG(t2rG&wXuG&nUjG)6TtGcq+ZG(j{rG(j~qG%+(WG&40bG(<HvG($BtGc+?aH8V9qG&eLkGc+|fGcq+bH8V9iG(t2vGcq+cG(s~oH8eCtG(|HtG&eOhG(t2*G(t5&G(t5&H8wRjH8C|aGcz<YH83<mG%+<eH8V9fGcq+eG)6TtH8wOiG&M9tH8V9cG&wakG($8uGc+?YG&40cG(<HvG($BvH8C?bG&3_YG(t5pG&nRhH8(XiGcq(bG)6TtG&M9gG&eOdGcz?cG(|K)G($8tG)6TvH8eFeG(t2)H9<8vG%++qG&D3aG(t5&G&nRhG(t5wG(t2sG&eOiG&nRhGcq$XG&3|pG(j{rG(j~qG%+(WG&40bG(<HvG(t5vG%+<cH8V3ZH83<mG(j{qH90jkH8eCuG(|KrGc+_dG(s~oH8eCtG(<EuG(t2tH90jhG($B(G(t5pH8wRjH90jkG&40bG(|NsH8(UgG(<HvH8M3bG)6TtH8?aiGc+|aG(j~oG&eOtH8V9eH8C|cH8V9dG(<HvG($BvH8C?bG&3_YG(t5pG&nRhH8(XiGcq(bG)6QsH9<5rGcq+cG(t5qG(<EuG($8tG)6TvH8eFhG($8tG($BsG&wXxG($8tG&wavG&VFeG(t5wG(t2rG(|KrG(t2rGcq(pG&3_YG(j{$G(t2qG&40dH8M3cG(j~sG($BtGcq$ZGcq+nG&eLkGc+|fH8(XiH8V6eG(|NsGcz?dG(s~oH8eCtG($8&G&eOhG(t2)G(t2vG(t2*H8wRjH8C|bG&40fG&wavH90gkG&eOhH9<8qG)6TtH8wOiG&MCgGcq(nG)6Q<G($8uGc+|ZH8V9dG(<HvG($BvG)6NuGcq+bG(s~qH8(UgG%+<bGcq(bG)6TtG&MCgG(t5uG&D3sG(j{)G($8tG)6TvH8eFhG($8&G&40eG&MCdH8eCcG&wavG&nRhG(t5wG(t2rG(j~%G($8uG&MChG&3|aG(j{$G(t2qG%+<cH8V9ZG(j^pG&D3fH90dhH8V9qG&eLkH90jkGd49fH8V6eG(j{$H90gkG(s~oH8eCtG(<EuH8M0cG(<HuH8V6pG($8&G&40fH8C|aGcq+cG&eLwG&eOgG&wakGcz<qG(t5&H8wOiG&MCgH8V9cG(t5&G(t2tGcq(pG(t5rG(j~sH8wRgG&wXxH8V9fG&wakH8nIfG)6TwGcq(bG)6TtG&MCgG(t5tG&3|eG(j{)H8C|bG&MCjH9<8oG($8&G&3|cG&3|sG($8rG&wavG&VFeG(t5tGcz<pG&eOiG(j{qGcq$XG(t5qG(j{$G(t2qG%+<dH8V3ZG(j~sH8(XiGc+|eH8V9qG&eLkH90jmH8(XhG($8)G($8&Gc+|eG(s~oH8eCtG(|HtG&eOhG(t2)G($BuG(t5tH8wRjH8C|eH8V6tG&eLdG($8vG(<HwG(j~oG(t5&H8wOiG&M9tH8V9cG&wakG($8uGc+?aG&40cG(<HvG($BvG)6NuGcq+bG(s~qH8(UiG)6TwGcq(bG)6QsH9<5sG(t5tG&3|pG(<EuG&eOhG)6T!H9<8oG(t5tG(t2rGc+_sG&40pG(t5&G&VFeG(t5wG(t2rG&wXuG&nUjG)6TtH8eFbG(j{rG(j~tGcq(qG($8)G(<EuG&D3fGd43dGcq+nG&eLkH90jmH8V9iH8V6eG)6QsGcz<cG(t2)G&40bG(|N*H8M0bG&40pG&3|gG(<E(G&40fH8C|eH8V6tG&eLdG($8vG(<HvGcq+eG)6TtH8wOiG&eOeG(j~sG)6Q<G(j{sGc+?aG&40dG(t2%G&D6hG&wXxGcq+nG(s~pH90jjG&wajGcq(bG)6QsGcq+cH8nLdH8V3ZG(<EuG($8tG)6T!H9<8oG(s~qH8(UiG(<HtGcz<aG&wavG&VFeG(t5wG(t2rG(|KrG(t2tG(s~oH8V9cG(j{rG(j~qG%+<nG&D6hG(j~vH9<5rGc+?aH8V9qG&eLwG%_?bGd49jH8V6fG(j{rGc+|eG(t2)G&40bG(|HtH8M0cG(<HsH8eFfG(<EuG&40fH8C|bG&40aG&eLhG&40cG%+<bGcz<rG)6TtH8?aiGc+|aGcq+YH83<XG(j~tGc+|ZH8V9dG(<HvG($BvG&eLwG&40eG(s~pGcq+cG&eOhGcq+cG&nRiG&M9fG(<BpGcq+ZG(<EuG(j{rG)6TvH8eFfG($8&G&3|cH8nLdGcq(qG(|NsG&VFeG(t5tGcz<qG(<HrG(j~tG&MCgH8V3ZG(j{rG(j~qG%+(WG&40bG(j~sG($BuG&MCgH8V3ZH83<mG(j{rG(t5tH8V6eG&eOiH90gkG(s~oH8eCtG)6Q*G&eOjH90jmH8V6pG(t5tH8wRjH8C|aGcz<ZG(|NwG(j{rH8nLiG(t5vG)6TtH8wOiG&MCgH8eFbG(t5&G&nUjG)6NvG&40dG(t2%G&D6gH8C|eG&40dG(t5pG&D3gG)6TwGcq(bG)6TtG&M9gG&eOeG&D3dG(|K)H8C|bG&MCeH8eFhG($8tG($BsG&wXxG(t2*G&wavG&MCiH8V9fG&D3uG(|KrG&eLhG&eOeG(t2&G(j{rG(j~qG%+(WG&40bG(j~sG($BuG&M6cH8V9qG&eLkGc+|fH8(XiH8V6fG($8tGcz?dG(s~oH8eCtG(<EuG(j{rG(t2*G($BtG(s~qH8wRjH8C|aGcz<YH83<mG&D3dG(t5tGcq+bG&wXuH8?aiGc+|aH8V3ZG)6QwH8M0cH8C?XG&40cG(<HvG($8vG%+(YGcq+dG&wakH8V6cG%+<bGcq(cG(|NrGcq+dG&wagG&D3hG(<EuH8C|bG&MCjH9<8oG(t2)H90gkH8nFcGcz<aG&wavG&nRhG(t5wG(t2tG(<HrG&nUkG&MCgH8V3ZG(j{rG(j~qG&40dH8eCbG(t5tH8(XiGc+?aH8V3ZG&wUhH90glH8nLhG(j~qG(t2%H90jlG(s~oH8eCtG(|HtH8V9gGcq+dH8eFfG(j^pG(t5uH90jkG&40bG&eLhG(|KuG(t5uH8V6eG(t5&H8wOiG&M9tH8V3ZG&wavH8C|cG&wafH8V9eG(t2%G&D6gH8C|bGcq+bG(t5pG&VFgG)6TwGcq(bG)6TtG(t5tG)6NsG&40fG(|NsG(j{rG)6TvH8eFhG(t2*H8wRiG&MCgGcz<bG(|NsG&VFeG(t5wG(t2rG&wXuG&nRjG&40eH8V3ZG(j{$G(t2qG%+(WG&D3rG(t5sH9<5rG(<BrH8V3ZH83<mG(j{rG&MCeG(j~qG(|KrH9<8tG(t2)G&40bG(|HtG($8rG%++qG($BuG(t5tH8wRjH8C|aGcz<ZG(t5&G(|KuGc+|eGcz<pG(t5&H8wOiG&M9tG&D6aG&wakH8C|cG&wahH8V9dG(<HvG($BvG&eLwG&40eG&eLdH8nIhG&40dGcq(cG(|K;Gc`0eG&MChG&3|pG(<EuG($8tG)6TvH8eFiG(t5pH8(XlH8C|cGcq(qG&wavG&nRhG(t5uH8eFrG&nRiG(|KvG(<E+H8eFjG(j{rG($BuH8C?YG%__YG(j^pG&D3fH90jlH8V3ZH83<mG(j{rG)6T!G($8*G)6QsH9<8tG(t2)G&40bG(|N*H8V9gH90jgH8V6hG(j~sG(t5uH90jkG&40bG(|NsH8wRgG&40eGcz<qG(t5&H8wOiG&eOeG(j~sG)6Q*G&nRiH8C?YG&40cG(<HvG($8uH8(RgGcq+bG(t5tH8V6dGd49fGcq(bG)6TtG&40fG(t5pG($8*G(|K;H8C|bG&MCeH8eFhG(t2*H8wRiG&M6bGcq(qG(|NsG&VFeG(t5tH8V9iG(j{$G&wakG&M6bG($BxG(j{$G(t2qG%+<dH8V3ZG(j~%G($8vG%+<cH8V9qG&eLkGc+|fH8(XiH8V6fG($8wH9<8tG(s~oH8eCtG(<EuG($8rG&40bH8eFfG(<EuG&40fH90jkG&40aG&eLsH8nIgH8nLiG(t5uG(t5&H8wRjG&3_ZG(t2+G(t5pH8C|cG)6NsG&40cG(<HvG($BwG&eIgG(t5uG(t5&H8nIfGd49fGcq(cG(|K;Gc`0eG&MCgH9<8&G($8&H8C|bG&MCeH8eFhG(t5tG&40eG(<HsGcz<bG&eLhG&nRhG(t5wG($5oG(|KrG&wXjG&eOeG(t2&G(j{rG(j~qG%+(WG%__cG(t5pG&40gG&wakH8V9qG&eLkH90jmG&40eH8V9eG(|NsGcz<cG(s~oH8eCtG)6Q*G&eOjH90jmH8V6pG(s~qH8wRjH90jkG&40bG&eLhG(|KuH8C|dGcz<rG)6TtH8wOiG&M9tG&D6aG&wakH8C|cG&wafH8V9eG(t2%G&D6gG&wUhH8V9gG&eLdH8V6cG&wajGcq+cG&nRiG&D3eG&wUeH8eCiG($8&G($8tG)6TwH8eFcG($8&G($BwG%++qG&40pG(t5&G&VFeG(t5tGcz<rH83<XG(t5tG&M9tH8eCiG(j{rG(j~tGcq$aG&D3aG(t2vH90jnG%+<cH8V9qG&eLkGc+|fH8(XiH8V6fG($8tGc+_dG(t2)G&40bG(|HtH8M0cG(t2+G(t5wG(t2%H8wRjH8C|bG&40cG(j{nH8nIfGcq+dG(j~pG)6TtH8wOiG&M9tH8V6fG)6TxH8V6dH8C?ZG&40cG(<HvG($8vG%+<aGcq+bG(|NvH90jkH8(XiGcq(bG)6QsH90jlG&wUeH8eCiG(|K)G(j{rG)6TvH8eFhG($8tG($BsG(t2)G&D3eG(t5&G&VFeG(t5wG(t2vG&wavH8(XkG&M6bG&3|pG(j{$G(t2qG&40dH8V6cG(<E-G($BtH8nLhH8V9qG&eLkGc+|fH8C|gH8eCrG(t5wGcz<cG(s~oH8eCtG(|N*H8C|bG%++rG(t2rG(s~qH8wRjH90jkG&40aG&eLsH8nIgG)6TyG(t5vG)6TtH8?aiGc+|aG($BtG&wUhG(j~tGcq(qG(t5rG(j~sH8wRgG(t2*G&40cH83<mG&MCeG&40dGcq(bG)6QsGcq(bG(<BpH9<8pG(|KrG&eOhG)6TwH8eFcG(t2*Gc`0dGc+_sG&D3bG(t5&G&nRhG(t5wG(t2sG(t2%H8(XjG&M9tH8V9cG(j{$G(t2qG%+<nG&40gG(t2%G&D6eGc+?aH8V9qG&eLkGc+|fH8(XiH8V6eG(|NsH9<8tG(t2)G&40bG)6Q*G&nUiG(t2+G(t2%G(t5tH8wRjH8C|bG&40cG&wavG&D3cG(t5sH9<8pG(t5&H8wOiG&MCgG(j~sG&wakG&walGcq$XG&40cG(<HvG($BvG)6Q<G&40eG&eLdH8nIgG&eOhGcq(bG)6QsGcq(bG(<BqG&3|aG(<EuG&eOhG)6TvH8eFfG(t5pH8wRiG&MCbGcz<YG&eLhG&VFeG(t5uH8M3bG)6TtG(j{sG&40eGcz<fG(j{rG(j~qG%+<bH8M3dG(t2%H8(XjG&MCgH8V9qG&eLkH90jkGd49fH8V6eG(j{$Gcq(bG(t2)G&40bG(|HtG(j{qG)6TyH8V6hG(t2*H8wRjH8C|aGcz<YG(|NsG&D3cG&eOiGcq+eG)6TtH8wOiG&M9tH8V6fG)6TxH8V6dH8C|dH8V9eG(t2%G&D6gH8C_qG(t5tG&eLhH8V6fG&40dGcq+cG&nRiG&M9eGc+|eG(j~oG(|KrG($8tG)6T!H9<8oG(t5&H8(XlG%+(YGcz<ZG(|NsG&VFeG(t5wG(t2rG&wXuG&nUjG(t2)G($BpG(j{$G(t2qG%+(WG&D3rG(t5sH9<5rG(<BrH8V9qG&eLkH90jkGc+|cG(t5sG(|NsH8nIgG(s~oH8eCtG(|HtG&eOhG(t2*G(t5&G(t5&H8wRjH8C|bG&40fG&wavH90gkG&eOjH8V6dG&wXuH8?aiGc+|aH8V3ZG)6QwH8M0cG)6NvG&40cG(<HvG($BwG&eIgG(t5uG&wUgGcq+cG&eOhGcq(bG)6QsH90jlG(t5uG&D3dG($8&G&eOhG)6TvH8eFhG(t5tG&40eG(<BqGcq(qG(|NsG&VFeG(t5uH8M3bG)6TtG&wXjG&eOeH8V3ZG(j{rG($BvH8(XiH8V9cG(<HvH8(UkG%+<cH8V3ZH83<mG(j{rG)6T!G($8+H83<XGcz<cG(s~oH8eCtG(|HtG&eOhG(t2*G(t5sG(s~qH8wRjH90jkG&40bG(|NsH8wRkH8V9fGcz<rG)6TtH8?aiGc+|aG($BtG&wUhH8C|cH8C|YH8V9dG(j~sH8wRgG(t2*G&40cH83<mG&VFfGd49fGcq(bG)6QsGcq(aGc+|eH8V6uG(|KrG($8tG)6TvH8eFfG(t5tH8wRiG&MCeGcz<YG&eLhG&MCiH8V9fG&D3uG(|KrG&eLgGcq+dG&3|aG(j{rG(j~tGcq$ZG&40bG(j~sH8(UjH90jlH8V9qG&eLkGc+|eG&40dH8V9gG($8tGc+_dG(s~oH8eCtG(<EuH8M0cG(<HuG($B(G(<EuG&40fH8C|bG&40fG&wavH90gkG(<HuGcq+dG(t5&H8?aiGc+|eH8V6bG&wakH8C|cH8C|eH8V9dG(<HvG($BvG&wUgH8V9eG&eLdH8nIgG&eOhGcq+cG&nRiG&3|eG&40aH8eCtG(|KvG(j{rG)6TvH8eFfG($8&G&3|cG(<BqGcq(rG(t5&G&VFeG(t5tGcz<pG(t5&G&nRhGcq$WH9<8tG(j{rG(j~tGcq(qG($8)G(<EuG&D6fG&M6cH8V9qG&eLkH90jlG)6T!G(j~oG)6QsH9<8tG(s~oH8eCtG(|HtG&eOhG(t2*G(t5&G(t5tH8wRjH8C|eH8V6tG&eLdG($8vH8V9fGcz<rG)6TtH8wOiG&eOeG(j~sG)6Q<G(j{sGc+?aG&40dG(t2%G&D6gG&wUhH8V9gG&eLdH8V6gG)6TwGcq(bG)6QsH9<5rGcq+YG&40fG(|K;G(j{rG)6T!H9<8oG(t5&H8(XlG%+(YGcz<YG(|NsG&VFeG(t5wG(t2vG&wavH8(UhGcq(pG&D6aG(j{rG(j~qG%+<nG&D6hG(j{(H9<5rGc+|eH8V9qG&eLsGc+_cH90jwG($8-G(|KrH90gkG(t2)G&40bG(|HtG(t2tH8(UwG&D6qG(t5tH8wRjH8C|bG&40cG&wavG&D3cG(t5uG(j~pG)6TtH8?aiGc+|eH8V6bG&wakG($8uGc+?ZG&40cG(j~sH8wRgG&3_cG(t5tG&wagG&VFfG)6TwGcq+cG&nRiG&D6fG)6TyG&D6aG($8pH8C|bG&MCjH9<8oG(t5pG(<EwG%++qG&D3dG&wavG&VFeG(t5uH8M3bG)6TtG&wXjG&eOeH8V6qG(j{rG(j~tGcq$YG&40bG(<HqH90jnG%+<YH8V3ZH83<mG(j{rG)6T!G($8*G)6QsGcq+cG(s~oH8eCtG(|HtG&nUiG(<HtG($5oG(t2%H8wRjH8C|eH8V6tG&eLkGc+_bG&wakGcq+bG&wXuH8wOiG&M9tH8V6tH83<mG&nRiH8C|dH8V9eG(t2%G&D6gH8C|eG&40dG(|NvGcq+bG)6TwGcq(bG)6TtG&M9gG&eOdGcz?cG(j{)G($8tG)6T!H9<8oG(t5&G&D3eG&MCeGcz<ZG(t5&G&MCiH8V9fG&D3uG(|KrG&eLgGcq$XG&3|pG(j{$G(t2qG%+<dH8V3ZG(j~sH8(XiG(<HrH8V9qG&eLkGc+|fH8(XiH8V6eG(|NsH9<8tG(t2)G&40bG(|HtG&eOgG&40eH8eFfG(<E-G&40fH90jkG&40fG&wakG&VFiH8C|eG(t5sG&wXuH8wOiG&MCgG(j~sG&wakG&walGcq$XG&40cG(<HvG($8vG%+(YGcq+dG&wakH8V6fGd49fGcq(bG)6TtG&MChG(t5pG($BxG(|K;G($8tG)6T!H9<8oG(t5tG(t2rGc+_sG&D3bG&wavG&VFeG(t5wG(t2rG&wXuG&nUjG)6TtH8eFbG(j{rG(j~qG&40dH8eCbG(t5&G($BuG&MCcH8V3ZH83<mG(j{sH8(XhG(t2rG(|NsGcz?dG(s~oH8eCtG(<EuG(t2tH90jhG($B(G($8&G&40fH90jkG&40bG&eLhG(|KuH8C|dGcq+eG)6TtH8wOiG&M9tH8V9cG&wakG($8tG)6Q;G(t5rG(<HvG($8vG%++pG(t5uG(|NsH8V6gG)6TwGcq(bG)6TtG(t5tG)6NrH9<8&G(|K;H8C|bG&MCeH8eFfG(t5pH8wRiG&MCbGcz<YG(|NsG&VFeG(t5uH8e9aG(|KrG(t2sG&eOeH8eFbG(j{rG(j~qG%+<aH8V9cG(j~%G&D6fG&M6cH8V9qG&eLsGc+_cH90jwG(t5wG(t2vH9<8tG(s~oH8eCtG(|HtG&eOhG(t2*G(t5&G(t5&H8wRjH8C|bG&40cG&wajGcq(dG&MChG(j~nG(t5&H8?aiGc+|eG(j~oG(j{nH8M3dH8C|dH8V9dG(<HvG($BwG&eIgG(t5uG(|K;H8nIhH8(XiGcq(cG(|K;Gc`0eG&MChG&3|pG($8&G&eOhG)6TvH8eFfG($8tH8(XlH8C|aGcz<aG&wavG&VFeG(t5tGcz<pG&eOiG&wXjG(<E+G(s~nG(j{rG($BuH8C?YG%__YG(j^pG&D3gG%+<cH8V9qG&eLkGc+|dH8(XiH8V6gG(|KqGcz<cG(s~oH8eCtG(|N*H8C|bG%++rG(t2rG(s~qH8wRjH8C|aGcz<ZG(t5&G(|KvG&40fG(t5tG(t5&H8wOiG&eOeG(j~sG)6Q<G(t5uH8nLeH8V9eG(t2%G&D6gH8C?ZGcq+cG(|NvH90jmG&40dGcq(bG)6TtG&MCgG(t5tG&3|eG(|K;G(j{rG)6T!H9<8oG($8&G&3|cG(<HsGcz<aG&wavG&VFeG(t5tGcz<pG&eOiG(j{qGcq$XG&3_YG(j{rG($BuG&waiH8eFhG(j^pG&D3fG&wakH8V9qG&eLkGc+|fGcq+bH8V9eG(t5wGcz<cG(s~oH8eCtG(<EuG($8rG&40bH8eFfG(t5&H8wRjH8C|bG&40cG&wavG&40gH8C|eH8V6fG(t5&H8?aiGc+|aH8eFbG(t5tH8M0cG)6NrG&40cG(<HvG($BvG)6Q<G&40eH83<mG&nRhH8(XiGcq(bG)6TtG&MCgG(t5uG&D3sG(|K)G&eOhG)6TvH8eFfG(s~qH8(UiG(t2*G($8qG&wavG&nRhG(t5wG(t2uH83<XG(j~tG&MCgG($BpG(j{rG(j~qG%+<nG&D6hG(j~vH9<5rGc+?aH8V9qG&eLkGc+|fH8C|gH8eCrG(t5tGcz?dG(s~nH8V6qG(j^pH8V9eG(s~pG&3|fG(<E(G&40fH8C|aGcz<YG(|NsG&D3cG&eOiH8M3aG(t5&H8wOiG&M9tH8V6fG)6Q<G&nRiH8C|oG&40cG(<HvG($8vG%+<YH8V9eG(t5pG&VFhH8(XiGcq(bG)6QsG(t2tG&eIgH8eCiG($8pG($8tG)6T!H9<8oG(t5&H8(XlG%+<aGcq+nG(t5&G&nRhG(t5uH8M3cG)6QsG&wakG&M6eH8V6fG(j{rG(j~qG%+<nG&D6hG(j~vH9<5rGcq$ZGcq$WH83<mG(j{rG)6T!G($8+H83<XGcz?dG(s~oH8eCtG(|HtH8M3eG)6TyH8eFfG(j^pG(t5uH8C|bG&40fG&wavH90gkG&eOjG($5oG&wXuH8?aiGc+|eG(j~oG(j{nH8M3dH8C|bH8V9dG(<HvG($BvH8C_rH8V3ZG(|NvH90giG(t5sGcq+cG&nRiG&M9fG(<BpGcq+ZG(|K;G(j{rG)6TvH8eFhG(t2*H8wRiG&M6bH8eCcG(t5&G&VFeG(t5tGcz<rH83<XG(t5sGcq$XG($8wG(j{rG(j~qG%+(WG&40bG(<HvG(t5vG&wakH8V9qG&eLkGc+|fH8(XiH8V6eG(|HtGc+|eG(s~oH8eCtG(|N*G&nUiG(<HsH8V9qG(t5&H8wRjH8C|aGcz<YG(|NsG&D3cG&eOiGcz<rG)6TtH8?aiGc+|aH8V6eH83<mH8V9eG)6NsG&40cG(<HvG($8uH8(RgGcq+bG(t5tH8V6dH8(XiGcq(bG)6QsGcq(bG(<BpH9<8pG(|K;G&eOhG)6TvH8eFeG(t2)H9<8vG%++qG&D3aG&wavG&VFeG(t5tGcz<rH83<XG(t5sGcq$XH8V6bG(j{rG(j~qG%+<aH8V9cG(j~%G&40gG&eIfGcq+nG&eLwG%_?bGd49jH8V6fG(j{rGcz?dG(t2)G&40bG(|N*G&eLfG&3_ZG&40hG(<E(G&40fH8C|eH8eCfG($8pG&waiG&wakGcq+dG(t5&H8?aiGc+|aH8eFbG(t5&G($BvGcq$XG&40cG(<HvG($BvG)6NuGcq+bG(|NsG&nRjG&40dGcq(bG)6TtG&3|dG(s~nGcq(rG(|K;H8C|bG&MCfH8eFcG($8sH90jkGc+|dGcz<YG&wavG&VFeG(t5tGcq+bG&wXuG&nRiG&M9tG%__dG(j{rG(j~qG%+<bH8M3dG(t2*G($BuG&M6cH8V9qG&eLkGc+|dH8(XiH8V6gG(<BsGc+|eG(s~oH8eCtG(t5&H8M3fH8(RgG&3|fG(<E(G&40fH8C|eH8V6tG&eLdG($8vH8V9fGcz<pG(t5&H8wOiG&MCgGcq+YH83<bG(j{sGcq(qG(t5rG(<HvG($8vG%+<dG&40eG(|NvH90jmGd49fGcq+cG&nRiG&3|eG&40aH8eCtG(|KrG($8tG)6TwH8eFcG($8sH90jkGc+?ZGcz<YG(|NsG&VFeG(t5wG(t2rG(|KrG(t2tG(s~oH8V9cG(j{rG($BuG&wahH8V6bG(<HqH90jnG%+<cH8V9qG&eLkH90jlG(t5tH8V9fG&eOiGcz<cG(s~oH8eCtG($8&H8V9gGcq+dH8V6pG(t2sH8wRjH8C|bG&40bG(j{nH8nIfG)6TyH8V6fG(t5&H8wOiG&M9tH8V6fG)6TxH8V6dH8C?YG&40cG(<HvG($BwG&eIgG(t5uG(|K;G&nRhG)6TwGcq+cG&nRiG(t5uG&wUiH8V9cG(|KvG&eOhG)6TvH8eFhG($8&G&40eG&MCgGcz<bG&eLhG&VFeG(t5uH8e9aG(|KrG(j~sG)6TtGcq+ZG(j{rG(j~tH90jjH8e9aG(<E-H8(XiGc+|eH8V9qG&eLkH90jkGd49fH8V6eG(j{$Gcq+cG(s~oH8eCtG(<EuG&eOgG&3_ZG&40pG(s~qH8wRjH8C|aGcz<YH83<mG&D3dG(t5uG(t5uG(t5&H8?aiGc+|aH8V3ZG)6QwH8M0cG)6Q;G(t5rG(<HvG($8vG%+<YH8V9eG(t5pG&nRiG)6TwGcq(bG)6TtG&MChG(t5pG($BxG(|K)H8C|bG&MCeH8eFfG(s~qH8(UiG(<E-G&D3bG&eLhG&VFeG(t5tGcz<pG&eOiG&wXjG)6TtH8V6qG(j{rG(j~tGcq$YG&40YG($8&H8(UjG&wakH8V9qG&eLkGc+|fH8C|gH8eCvG(t2vGcq+cG(s~oH8eCtG(|N*H8C|bG&40aH8eFgG(t5&H8wRjH8C|aGcz<ZG(|NwG(j{sGd49hG(t5uG(t5&H8?aiGc+|aH8V3ZG)6QwG($BvGcq(pG(t5rG(<HvG($BvG&eLwG&40eG(|NsH8nIgG&eOhGcq+cG&nRiG(t5tG&3_ZH8V6fG(|KvG($8tG)6TvH8eFfG($8&G&3|cH8nLdGcz<ZG(|NsG&nRhG(t5wG(t2tG(<HrG&wXjG)6TtG(s~nG(j{rG(j~tGcq(pG(t5vG(t5pG($BtG(s~qGcq$WG&wUhH90gjH90jjG(j~qG(|KrGcq(bG(t2)G&40bG(|N*H8M0bG&40pG&3|gG(<E(G&40fH90jkG&40bG(|NsH8wRkH8V9fGcz<qG(t5&H8wOiG&M9tH8V3ZG&wavG&nRiH8C?ZG&40cG(j~sH8wRgG&3_cG(s~nG(|K;H8V6eG)6TwGcq(bG)6TtG&MCgG&wUeG($BtG(|KvG&eOhG)6T!H9<8oG(s~qH8(UiG(<HtGcq(qG&wavG&VFeG(t5wG(t2rG(|KrG(t5uG&40fG&3|aG(j{rG(j~tGcq(pG%__ZG(t5&H8(XiG(<HvH8V9qG&eLkGc+|eG&40dH8V9hG(|KqGcz<cG(t2)G&40bG(|HtG($8rG%++rG(t5wG(t5&H8wRjH8C|bG&40bG&eLwG%+<eG&MChG($5oG&wXuH8wOiG&M9tH8V9cG&wakG($8uH8nLdH8V9eG(t2%G&D6hG&wXxGcq+nG(s~pH90jjG%+<bGcq(bG)6QsH90jlG(t5uG&D3dG($8&H8C|bG&MCeH8eFhG($8&H8wRiG(t2)G($8tG(|NsG&nRhG(t5wG(t2rG(j~%G($8uG&MCgGcq+ZG(j{rG(j~tGcq$YG&40bG(<HqH90jnG%+<cH8V3ZG&wUhH90glH90joG($8-G(|KqGcq(bG(s~oH8eCtG(|HtG&eOhG(t2*G(t5sG(s~qH8wRjH90jkG&40cG&wUhG(j{rG&40fG(t5uG(t5&H8wOiG&MCgH8V9cG(t5&G(t2tGcq(qG(t5rG(j~sH8wRgG(t2*G&40cH83<mG&D3gG&eOhGcq+cG&nRiG&40eG&wakG&D3hG($8&H8C|bG&MCeH8eFhG($8tG($BsG(t2)G&D3eG(|NsG&MCiH8V9fG&D3uG(|KrG&eLhG&eOeG($BpG(j{rG(j~qG%+(WG&40bG(j~sG($BtGc+?aH8V9qG&eLkGc+|eG&40dH8V9hG(<BsGc+|eG(s~oH8eCtG(|N*H8C|bG&40aH8eFgG(s~qH8wRjH8C|aGcz<ZG(|NwG(j{rG)6TxGcz<oG&wXuH8?aiGc+|aH8V3ZG)6QwH8M0cG)6Q;G(t5rG(<HvG($BvH8C_rH8V3ZG(|NvGcq+bG&eOhGcq(cG(|K;Gc`0eG&MChG&3|pG(<EuG(j{rG)6T!H9<8oG(t2)H90gkH8nFcGcz<aG&wavG&MCiH8V9fG&D3uG(|KrG&eLhG&M9tG&D6aG(j{rG(j~qG&40dH8eCbG(t5&G($BuG&MCcH8V9qG&eLkH90jkGc+|cG(j~qG(|KrH9<5sG(s~oH8eCtG(|HtG&eOhG(t2*G(t5&G(t5tH8wRjH8C|aGcz<YG(|NsG&D3cG&eOiGcq+eG)6TtH8wOiG&M9tH8V3ZG&wavH8M3cG&eOdH8V9dG(<HvG($BvH8C?bG&3_YG(t5pG&nRhH8(XiGcq(bG)6TtG(t5tG)6NsG&40fG(|K;H8C|bG&MCjH9<8oG(s~qH8(UiG(<HyG($8qG(t5&G&VFeG(t5wG(t2rG&wXuG&nUjG(t2)G($BpG(j{rG(j~tGcq$ZG&40bG(<HvH8(UkG%+<cH8V9qG&eLkH90jlG(t5tH8V6fG)6QsH90jlG(s~nH8V6qG(j^pG&nRjH90jgH8V6gG(<E-G&40fH8C|bG&40cG(j{nH8nIgG%+<dG($5oG&wXuH8wOiG&MCgH8V3ZG)6Q*G($BvGcq$aG&40cG(<HvG($BvG)6NuGcq+bG(|NsH8nIhH8(XiGcq(bG)6TtG&3|dG(t5tG&3|eG(|KvG&eOhG)6TvH8eFhG($8tG($BsG(s~rH8eCbG&eLhG&VFeG(t5uH8M3bG)6TtG&wXjG&eOeH8V6qG(j{rG(j~qG%+<bH8M3dG(t2*G($BtGcq$ZGcq+nG&eLkH90jkGd49fH8V6eG(j{$H90gkG(s~oH8eCtG(|HtH8M3eG)6TxH8M3eG(t5tH8wRjH8C|bG&40cG&wavG&D3cG(t5uG(j~oG(t5&H8wOiG&MCcG($BtG&eOtH8V9eG)6NuG&40dG(t2%G&D6gH8C|eG&40dG(t5pG&D3gG)6TwGcq(bG)6TtG&M9gG&eOdGcz?cG(j{)G($8tG)6TvH8eFhG(t2*H8wRiG(<HsGcq(qG&wavG&MCiH8V9fG&40hG(j{$H8(XjG&M9tG(s~nG(j{$G(t2qG%+<dH8V3ZG(j~%G($BtGc+|eH8V9qG&eLkH90jmG&40eH8V9iG(|KrGc+|eG(s~nH8V6qG(j~%H8M3fGcq+dH8V6hG(s~qH8wRjH90jkG&40aG&eLsH8nIgH8nLiG(t5uG(t5&H8?aiGc+|aH8V3ZG)6QwG($BvGcq(pG(t5rG(<HvG($BvG)6NuGcq+bG(|NsG&nRjG&40dGcq(cG(|K;Gc`0eG&MCgH9<8&G($8&H8C|bG&MCeH8eFhG($8tGc`0dGcq(pG($8sG(t5&G&nRhG(t5wG(t2tG(<HrG&nUkG&M6aGcq$WG(j{rG(j~qG%+<nG&D6hG(j{(H90gmG%+<cH8V3ZH83<mG(j{rG(t5tH8V6eG&eOiGcq(bG(t2)G&40bG)6Q*H8V6cG&MCcH8eFgG($8&G&40fH8C|eH8V6tG&eLkGc+_fG(<HwG($8(G&wXuH8wOiG&M9tH8V9cG&wakG(j~sH8C|ZH8V9eG(t2%G&D6gG)6NvH8V9gG(s~pH90jnG)6TwGcq+cG&nRiG&D3eG&wUeH8eCiG($8&G($8tG)6TwH8eFcG($8&G($BwG%++qG&40pG(t5&G&VFeG(t5wG(t2rG(|KrG(t5uG&M6bG(t5qG(j{rG(j~qG%+<nG&D6hG(j~vH9<5rGcq$ZGcq$WG&wUhGcq(aGd49fH8V6gH83<XGcz<cG(s~oH8eCtG(|HtG&eOhG(t2*G(t5&G(t5&H8wRjH8C|bG&40cG&wavG&40gH8C|cGcz<rG)6TtH8?aiGc+|aH8V6aH83<bG(j{sGc+|ZH8V9dG(j~sH8wRgG&3_cG(s~nG(|K;H8V6dG)6TwGcq+cG&nRiG&M9fG(<BpGcz<bG($8&H8C|bG&MCeH8eFhG($8&G&40eG&MCgH8eCcG(t5&G&VFeG(t5wG(t2rG&wXuG&nRjG&M6bG&3|pG(j{$G(t2qG%+<fH9<8pG(t5pG($8vG%+<YH8V3ZH83<mG(j{rG)6T!G($8+H83<XH9<5sG(s~oH8eCtG(|N*G&nUiG(<HtH8V6pG(s~qH8wRjH8C|bG&40aG&eLhG&VFfG&walH8V6gG)6TtH8wOiG&MCgGcq+YH83<XG($8uGcq(qG(t5sG(t2%G&D6gH8C|eG&40dG&eLhH8V6eG)6TwGcq(bG)6QsGcq(bG(<BpH9<8pG(<EuG(j{rG)6TvH8eFfG($8tH8(XlH8C|aGcz<aG(t5&G&VFeG(t5tGcq+bG&wXuG&nRiG&M9tG(t2&G(j{rG($BuG&waiH8V6fG(<E-H8(UjH8(RgGcq+nG&eLkH90jmH8V9iH8V6eG)6QsGcz?dG(s~oH8eCtG(<EuG(j{rG(t2)G&D6qG(t5tH8wRjH8C|eH8V6tG&eLdG($8vH8V9fH8M3bG)6TtH8wOiG&MCgH8V6qG&wakG($BvGcq$WG&40cG(<HvG($BvG&eLwG&40eG(|NsH8nIgG)6TwGcq+cG&nRiG&D3eG&wUeH8eCiG($8&H8C|bG&MCeH8eFfG(t5&G&D3eG(<HtGcz<ZG&wavG&nRhG(t5wG(t2uH83<XG(j~tG&MCgGcz<fG(j{rG(j~qG%+<aH8V9cG(j~%G&40gG%+(YH8V9qG&eLkH90jkGd49fH8V6eG(j{$H9<8tG(s~oH8eCtG(<EuG(t2tH90jhG($B(G($8&G&40fH8C|eH8V6tG&eLkGc+_bG&wakGcq+eG)6TtH8wOiG&MCgH8eFbG(t5&H8V9eG)6Q=G(t5rG(<HvG($8vG%+<dG&40eG(|NvH90jlG)6TwGcq(bG)6TtG&MCgG(t5tG&3|eG(|K;G(j{rG)6TwH8eFcG($8&G($BwG%++qG&D3dG&eLhG&VFeG(t5wG(t2rG&wXuG&nUjG(t2)G($BpG(j{rG(j~tGcq(pG%__ZG(t5sH9<5rG(<HrH8V3ZG&wUhH90glH8nLhG(j~oG(j{$G(<HvG(t2)G&40bG)6Q*G&nUiG(t2+G(t2%G(t5tH8wRjH8C|bG&40bG&eLwG%+<aG&eOjG(j~pG)6TtH8wOiG&M9tH8V6fG)6TxG&nRiG&wafH8V9dG(j~sH8wRgG(t2*G&40cG&eLdH8nIfG&eOhGcq(bG)6TtG&MCgG(t5tG&3|eG(|K;H8C|bG&MCeH8eFhG($8&G&40eG&MCgGcq(qG&wavG&VFeG(t5tGcz<pG(t5&G&nUkG&MCgH8V3ZG(j{rG(j~qG%+<bH8M3dG(t2*G($BuG&M6cH8V3ZH83<mG(j{rG)6T!G($8+H83<WGcq(bG(s~oH8eCtG(<EuH8M0cG(<HuH8V6hG(<HrG&40fH8C|eH8eCfG($8pG&waiG&wakGcz<qG(t5&H8wOiG&MCgG(j~sG&wakG&walGcq$ZG&40dG(t2%G&D6gH8C|eG&40dG&eLhH8V6fH8(XiGcq(bG)6TtG&3|dG(t5tG&40bG(|K;G(j{rG)6TwH8eFcG($8&G($BvGd46uG($8pG&eLhG&VFeG(t5wG(t2rG&wXuG&nRjG&40eGcz?gG(j{rG(j~tGcq$YG&40bG(<HqH90jmH90dhH8V9qG&eLkGc+|fGcq+bH8V9hG(<BsGcz?dG(s~oH8eCtG(|HtH8M3eG)6TxG($5oG(t2%H8wRjH8C|bG&40fG&wavH90gkG(<HwH8V9gG(t5&H8?aiGc+|aH8V3ZG)6QwG($BvGcq(rG(t5rG(<HvG($BvH8C?bG&40gG&wUgGcq+bG&eOhGcq(bG)6TtG&MCgG(t5tG&3|eG(|K;G($8tG)6T!H9<8oG(t5tG(t2rGc+_sG&D3bG&wavG&nRhG(t5wG(t2tG(<HrG&nUkG&M6bG&3|pG(j{rG(j~tGcq(pG(t5vG(t5pG($BtG(s~qGcq$WG&wUhH90gjH90jjG(t5sG(|NsGcq(bG(s~oH8eCtG(|N*G&nUiG(<HtH8V6pG($8&G&40fH8C|bG&40aG&eLhG&40cG%+<bH9<8oG(t5&H8wOiG&MCgGcq+YH83<XH8C|cG&wagH8V9eG(t2%G&D6gG)6NvH8V9gG&wagG&VFiG&eOhGcq(bG)6QsH9<5rGcq+YG&40fG(|K;G(j{rG)6T!H9<8oG(t5&H8(XlG%+<fG($8qG(t5&G&VFeG(t5wG($5oG(j{$G($8tG(<HsG&D3hG(j{rG(j~tGcq(pG%__ZG(t5sH9<5rG(<HvH8V3ZH83<mG(j{rG&MCeG(j~qG(|KqH9<5sG(s~oH8eCtG($8&G&eOhG(t2)G(t2vG(t5pH8wRjH8C|bG&40bG(j{nH8nIfH8nLiH8V6gG)6TtH8wOiG&M9tG&D6aG&wavG(j~tH8nLeH8V9eG(t2%G&D6gH8C|ZG(t5tG&wagG&VFfH8(XiGcq(bG)6QsH90jlG&wUfG(s~nG($8pG($8tG)6TvH8eFhG($8&H8wRiG(t2)G(t2*G(|NsG&MCiH8V9fG&D3uG(|KrG&eLgGcq$WH9<8tG(j{rG(j~tGcq(pG(t5vG(t5tG&D6eG(<HrH8V3ZG&wUhH90glH8nLhG(j~pG(|KrH90gkG(s~oH8eCtG)6Q*G&eOjH90jlH8V9qG(t5pH8wRjH8C|eH8V6tG&eLdG($8vG(<HvGcq+eG)6TtH8wOiG&M9tG(t2pG&wavG(j~tGc+|pG&40cG(j~sH8wRgG&wXxH8V9fG&wagG&D3gG&eOhGcq(bG)6TtG&40fG(t5pG(s~nG(|K;G($8tG)6TvH8eFhG(t2*H8wRiG&M6bGcq(qG&wavG&VFeG(t5wG($5oG(j{$G($BuG&eOeH8eFbG(j{$G(t2qG%+<nG&40gG(t2vH90jnG%+(YH8V9qG&eLkGc+|fH8(XiH8V6fG($8wH9<8tG(s~oH8eCtG(|HtG&eOhG(t2)G($BuG(t2*H8wRjH8C|eH8eCfG($8pG(j{sGcq+dG($5oG&wXuH8wOiG&MCgH8V6qG&wakG(t2tGcq$WG&40cG(<HvG($BvG)6Q<G&40fG&wUgGcq+bGd49fGcq(bG)6QsH9<8tG)6NrGcz<bG(<EuG($8tG)6TvH8eFhG($8&G&40eG&MCgGcq(qG&eLhG&VFeG(t5wG(t2rG&wXuG&nRjG&M6aGcz?YG(j{rG(j~tGcq(qG($8)G(s~qG($BuG&MCgH8V9qG&eLkH90jmH8V9iH8V6eG)6QsGc+_dG(s~oH8eCtG(<EuG(t2tH8(UxG($BtG(t2%H8wRjH90jkG&40fG(j{nH8M3cG%+<dH8V6eG(t5&H8wOiG&M9tH8V6fG)6TxH8M3cG&M6dG&40cG(<HvG($BvG)6NuGcq+bG(s~pGcq+bG)6TwGcq(bG)6QsH90jlG(t5uG&D3dG(<EuG(j{rG)6T!H9<8oG(t5&H8(XlG%+<fG($8pG(|NsG&VFeG(t5uH8e9aG(|KrG(j~sG(t2)H8eCiG(j{$G(t2qG%+<aH8eFaG(s~qG($BtG(<HvH8V3ZH83<mG(j{sH8V9iG(j~qG(|KrH9<5sG(t2)G&40bG(|HtG($8rG%++pG&D6iG(<E-G&40fH90jkG&40bG&wajH90giG&walG($8*G(t5&H8wOiG&M9tG&D6aG&wakH8C|cH8C?ZG&40cG(j~sH8wRgG&3_cG(s~nG(|K;H8V6eG&eOhGcq+cG&nRiG&D3dGcq+ZG&D6aG($8&G&eOhG)6TvH8eFfG($8&G&3|cG(<BqGcz<aG(t5&G&MCiH8V9fG&D3tG(<HrG&nRiG&M9tG(s~nG(j{rG(j~qG%+(WG&40YG(j{(H9<5rH8V3cGcq$WH83<mG(j{sG&40eH8V9fG&eOeGcz?dG(s~oH8eCtG(|N*G&nUiG(<HsH8V9qG(t5&H8wRjH8C|bG&40bG&eLwG%+<aG&eOjG(j~pG)6TtH8wOiG&M9tH8V9cG&wakG(j~sH8C|YH8V9dG(<HvG($8vG%+<YH8V9eG(t5tG(|KxG)6TwGcq(bG)6TtG&MCgG(t5tG&3|eG(|K;G(j{rG)6T!H9<8oG($8&G&3|cG(<HsGcz<aG(t5&G&nRhG(t5wG(t2sG(t2%H8(XjG&M9tG&3_YG(j{rG($BuG&waiH8eFhG(j^pG&D3fG&wUgH8V9qG&eLkGc+|fGcq+bH8V9eG(t5tGc`0eG(s~oH8eCtG(|HtH8M3eG)6TxG($5oG(t5pH8wRjH8C|gG(t5qG&wavG&40cG&40fG(t5tG(t5&H8?aiGc+|aH8V3ZG)6QwG($BvGcq(qG(t5rG(<HvG($BwG&eIgG(t5uG(|K;H8nIgG&eOhGcq+cG&nRiG&40dGd49gGcz<fG(|KrG($8tG)6TwH8eFcG(t2*Gc`0dGc+_sG&D3bG&wavG&nRhG(t5wG(t2tG(<HrG&nUkG&MCgG($BpG(j{rG(j~tGcq(qG($8)G(<EuG&D6eG(s~qGcq$WH83<mG(j{rG&MCeG(j~qG(|KrH90jlG(t2)G&40bG(|HtG(j{qG(<HqG($BxG(<E-G&40fH8C|aGcz<YG(|NsG&D3cG&eOiGcz<pG(t5&H8wOiG&M9tH8V9cG&wakG(j~sG)6NvG&40cG(<HvG($8vG%+<YH8V9eG(|NvH90jmH8(XiGcq(bG)6QsGcq+cH8nLdH8V3ZG(|KrG(j{rG)6T!H9<8oG(t5&H8(XlG%+(YGcz<ZG(|NsG&VFeG(t5tGcz<rH83<XG(t5tG&M9tG(t2&G(j{$G(t2qG%+<dH8V3ZG(j~sH8(UkG%+(YH8V9qG&eLkH90jkGd49fH8V6eG(j{$H9<5sG(s~nH8V6qG(j^pH8V9eG(s~qG&3|gG(t5pH8wRjH8C|bG&40cG(j{nH8nIfGcq+cG&D0ZG&wXuH8wRjG&3_ZG&D3sG&wakG&walGcq$aG&40cG(<HvG($8vG%+<aGcq+cG(t5pG&VFhH8(XiGcq+cG&nRiG(t5uG&wUiH8V9cG(j{)H8C|bG&MCeH8eFhG($8&H8wRiG(<BtH8eCdG&wavG&nRhG(t5wG(t2sG(t2%H8(XjG&M9tG&D6aG(j{rG(j~tGcq$YGcz?gG(t2%G&D3gG%+<cH8V3ZH83<mG(j{sG&40eH8V9gG)6QsGcz?dG(s~oH8eCtG(|HtG&eOhG(t2*G(t5&G(t2sH8wRjH90jkG&40aG&eLsH8nIgH8nLiG($8)G(t5&H8?aiGc+|aH8V6eH83<mH8V9eG)6NtG&40dG(t2%G&D6gH8C?ZGcq+cG(t5pG&VFgG&eOhGcq(bG)6TtG&MChG(t5pG(j~%G(|K)G&eOhG)6TvH8eFfG($8tH8(XlH8C|aGcz<ZG&eLhG&VFeG(t5wG(t2rG&wXuG&nUjG)6TtGcq+ZG(j{rG(j~qG%+(WG&40bG(<HvG($BtGcq$ZGcq+nG&eLkH90jmG&40eH8V9eG(|NsGcz?dG(s~oH8eCtG(<EuH8V6eG(<HvH8eFfG(<E(G&40fH8C|aGcz<YH83<mG%+<aG&40fH8V6eG(t5&H8wOiG&M9tH8V9cG&wakG(j~sG)6Q;G(t5rG(<HvG($BvH8C?bG&3_YG($8pH8(UiG&eOhGcq(bG)6TtG&MCgG(t5uG&D3sG(|K)G($8tG)6TvH8eFeG(t2)H9<8vG%++qG&D3aG(|NsG&nRhG(t5wG(t2tG(<HrG&wXjG(<BqH8V6bG(j{rG(j~qG%+<nG&D6hG($8&G($BtGc+|aH8V9qG&eLkH90jlG&eOhH8V6eG&eOiGcq(bG(s~oH8eCtG(<EuG&eOgG&3_ZG&40hG(<HrG&40fH90jkG&40bG(|NsH8(UgG(<HvH8M3bG)6TtH8?aiGc+|aG(j~oG&eOtH8V9eH8C|cH8V9dG(<HvG($BvH8C?bG&3_YG(t5pG&nRhGd49fGcq(bG)6QsH90jlG(t5uG&D3dG(<EuG($8tG)6T!H9<8oG(t5&H8(XlG%+(YGcz<ZG(|NsG&VFeG(t5wG($5oG(j{$G($8tG)6TtG(j~sG(j{$G(t2qG&40dH8V6cG(<E(H8(XiG(s~qGcq+nG&eLkGc+|fH8nLfG($5oG(t5wH9<5sG(t2)G&40bG(|HtH8M0cG(<HrG($5oG(t5tH8wRjH8C|bG&40cG(j{nH8nIgG%+<bH9<8qG)6TtH8wOiG&MCgGcq(nG)6Q<G($8uGc+|ZH8V9dG(<HvG($BvG&eLwG&40eG&eLdH8nIfGd49fGcq+cG&nRiG&D6fG)6TxG&40fG(<EuG($8tG)6TvH8eFhG(t5tG&40eG(<HvGcq(qG(t5&G&VFeG(t5tGcq+bG&wXuG&nRiG&M9tG($BpG(j{$G(t2qG%+<cH8V9ZG(j^pG&D3fH90jlH8V3ZG&wUhH90glH90joG($8-G(|KrH8C|dG(s~oH8eCtG(<EuH8M0cG(<HuH8V6hG(<EuG&40fH8C|aGcz<YG(|NsG&D3cG&eOiGcz<oG&wXuH8?aiGc+|aH8V3ZG)6QwH8M0cG)6Q;G(t5rG(j~sH8wRgG&wXxH8V9fG&wakH8nIfH8(XiGcq(bG)6TtG(t5tG)6NsG&40fG(|K;G(j{rG)6T!H9<8oG($8&G&3|cG&3|sG($8rG&wavG&VFeG(t5tGcz<pG&eOiG&wXjG)6TtH8V6qG(j{$G(t2qG%+<dH8V3ZG(j~sH8(XjG&MCcH8V3ZH83<mG(j{qGc+|pG($8-G(|KqH90gkG(s~oH8eCtG(<EuH8V6eG(<HvH8eFfG(<E(G&40fH90jkG&40bG(t5sGcq(ZG&wakGcz<qG(t5&H8?aiGc+|aH8V3ZG)6QwH8M0cG)6NuG&40cG(<HvG($BvH8C?bG&3_YG(|NvGcq+bGd49fGcq+cG&nRiG&MCgH8nLdH8V6uG(<EuG&eOhG)6TvH8eFhG($8&G&40eG&MCdH8eCdG(t5&G&VFeG(t5tGcq+bG&wXuG&nRiG&M9tG%__dG(j{$G(t2qG%+<bH8V6uG(j^pG&D6eH8nLhH8V9qG&eLkH90jlG(t5tH8V9fG&eOiH9<8tG(s~oH8eCtG($8&G&eOhG(t2)G(t2vG(t5tH8wRjH8C|eH8V6tG&eLdG($8vG(<HvGcq+eG)6TtH8wOiG&eOeG(j~sG)6Q<G(t5uH8nLcH8V9dG(<HvG($8vG%+<aGcq+cG(t5pG&VFhGd49fGcq(bG)6TtG&MCgG(t5tG&3|eG(|K)G(j{rG)6TvH8eFhG($8tG($BsG&wXxG&D3bG&wavG&VFeG(t5wG(t2rG(|KrG(t2tG(s~oH8V9cG(j{rG(j~tGcq(pG(t5vG(t5tG&D6eG(<HrH8V9qG&eLwG%_?bGd49jH8V6fG(j{rGc+|eG(t2)G&40bG(|HtH8M0cG(<HsH8eFfG(s~qH8wRjH8C|bG&40cG&wavG&40gH8C|eH8V6eG(t5&H8?aiGc+|aGcq+YH83<XG(j~tGc+|ZH8V9dG(<HvG($8vG%+<aGcq+cG(t5pG&VFgG)6TwGcq(cG(|K;Gc`0fG&M6eH8eCiG($8pH8C|bG&MCeH8eFhG($8&H8wRiG(t2)G($8tG(|NsG&VFeG(t5tGcz<sG(t5&G($8uG&MCgGcz<fG(j{rG(j~qG%+(WG&40bG(j~sG($BuG&3_bGcq+nG&eLkGc+|fH8(XiH8V6eG(|HtGc+|eG(s~oH8eCtG(|HtG&eOhG(t2*G(t5sG(s~qH8wRjH8C|bG&40cG&wavG&40gH8C|eH8V6eG(t5&H8wOiG&MCgH8V9cG(t5tH8M0cG&wafH8V9eG(t2%G&D6gH8C?ZGcq+cG(|NvH90jnG)6TwGcq(bG)6TtG&M9gG&eOeG&D3dG(j{)G(j{rG)6TvH8eFhG($8&G&40eG&MCdGcz<cG&wavG&VFeG(t5tH8V9iG(j{$G&wakG&M9tG(t2&G(j{$G(t2qG%+<dH8V3ZG(<HvH8(UjG&wUgH8V9qG&eLkGc+|fH8C|gH8eCrG(t2%H9<8tG(s~oH8eCtG(|N*H8C|bG%++rG(t2%G(s~qH8wRjH8C|aGcq+cG&eLwG&eOgG&wakGcq+bG&wXuH8?aiGc+|aH8V3ZG)6QwH8M0cH8C?XG&40cG(<HvG($8vG%+(YGcq+dG&wakH8V6cG%+<bGcq(cG(|NrGcq+dG&wagG&D3hG(<EuG(j{rG)6T!H9<8oG(t2)H90gkH8nFcGcz<aG&wavG&nRhG(t5wG(t2tG(<HrG&nUkG&MCgGcq+ZG(j{rG(j~qG%+(WG%__cG(t5pG&D6eGc+|eH8V3ZG&wUhH90glH90joG($8-G(|KrH90jlG(s~oH8eCtG(|HtG&eOhG(t2)G($BpG(<E(G&40fH8C|aGcz<YG(|NsG&D3cG&eOiGcq+eG)6TtH8wOiG&eOeG(j~sG)6Q<G(j{rH8C|ZH8V9eG(t2%G&D6gH8C|eG&40dG(|NvH90jkGd49fGcq(bG)6QsH90jlG&wUfG(s~nG($8pH8C|bG&MCfH8eFcG($8&G($BvGd46uG($8sG(|NsG&VFeG(t5uH8e9aG(|KrG(j~sG(s~rH8V6fG(j{rG(j~tGcq$YG&40bG(<HqH90jnG%+(YH8V3ZH83<mG($8sGc+|dH8M3cG&wXuGc+|eG(s~oH8eCtG($8&G&eOhG(t2)G(t2vG(s~qH8wRjH8C|aGcz<ZG(|NwG(j{sGd49hG(t5sG&wXuH8wOiG&MCgH8V3ZG)6Q*G($BvGc+|ZH8V9dG(<HvG($8vG%+<aGcq+cG(t5pG&VFhH8(XiGcq(cG(|K;Gc`0fG&M6eH8eCiG(|KvG&eOhG)6TvH8eFfG($8&G&3|cG(<BqGcq(qG(t5&G&nRhG(t5wG(t2rG(j~%G(t5sGcq$XG($BxG(j{rG(j~tGcq$YGcz?fG(j~%G($BuG&MCcH8V3ZH83<mG(j{rG)6T!G($8+H83<XH90jlG(s~oH8eCtG(<EuG&eOgG&3_ZG&40hG(<HrG&40fH8C|bG&40bG&eLwG%+<eG&MChG($5oG&wXuH8wOiG&eOeG(j~sG)6Q*G&nRiG&wahH8V9dG(<HvG($8uH8(RgGcq+bG(t5tH8V6dGd49fGcq(bG)6TtG&40fG(t5pG($8*G(|K;H8C|bG&MCeH8eFhG(t2*H8wRiG&M6bGcq(qG(|NsG&VFeG(t5tH8V9iG(j{$G&eLhG&M6bG($BxG(j{rG($BuG&waiH8V6fG(<E-H8(UkG%+<YH8V9qG&eLkH90jmH8(XhG($8)G($8&Gc+|eG(t2)G&40bG(|HtH8V6eG(<HtH8V9iG(s~qH8wRjH8C|gG(t5qG&wavG&40cG&40eGcz<rG)6TtH8wRjG&3_ZG(t2+G(t5pH8C|cG)6NsG&40cG(<HvG($BwG&eIgG(t5uG(t5&H8nIfGd49fGcq(cG(|K;Gc`0eG&MCgH9<8&G($8&G($8tG)6TwH8eFcG(t2*Gc`0dGc+_sG&D3bG&wavG&nRhG(t5wG(t2tG(<HrG&nUkG&M6bG&3_YG(j{rG(j~qG%+(WG%__cG(t5pG&D6eGc+?aH8V9qG&eLkGc+|fH8C|gH8eCvG(t2vGcq+cG(s~oH8eCtG)6Q*G&eOjH90jmH8V6pG(s~qH8wRjH90jkG&40bG&eLhG(|KuH8C|eG(t5uG(t5&H8wOiG&M9tH8V9cG&wakG($8uGc+|pG&40dG(t2%G&D6gG&wUhH8V9gG&eLdH8V6cG&wajGcq+cG&nRiG&D3eG&wUeH8eCiG($8&G&eOhG)6TwH8eFcG($8sH90jkGc+?ZGcz<cG&wavG&VFeG(t5tGcz<rH83<XG(t5tG&M9tH8eCiG(j{rG(j~tGcq(pG%__ZG(t5sH9<5rG(<HrH8V9qG&eLkGc+|fH8(XiH8V6fG($8tGc`0eG(s~oH8eCtG(|HtG&eOhG(t2)G($BuG(t5&H8wRjH90jkG&40bG&wajH90giG&wakH8M3ZG(t5&H8wOiG&M9tH8V6fG)6TxH8V6dH8C?XG&40cG(j~sH8wRgG(t2*G&40cG&eLdH8nIfG&eOhGcq(bG)6TtG&MCgG(t5uG&D3sG(j{)H8C|bG&MCeH8eFhG($8tG($BsG(t2)G&D3eG(t5&G&VFeG(t5wG(t2vG&wavH8(XkG&M6aGcq$WG(j{rG(j~tH90jjH8e9aG(j^pG&D3fH90jlH8V3ZH83<mG(j{rG)6T!G($8+H83<XH90jlG(s~oH8eCtG(|HtH8M3eG)6TyH8eFbG(t5&H8wRjH8C|aGcz<YG&eLhG&40gH8V9fGcz<qG(t5&H8wRjG&3_ZG(t2+G(t5pG(t5uGcq+YH8V9dG(j~sH8wRgG(t2*G&40cG(|K;G(|KwH8(XiGcq+cG&nRiG&40eG&wakG&D3hG(|KvG($8tG)6TvH8eFhG(t2*H8wRiG&M6bGcq(qG&wavG&VFeG(t5tGcq+bG&wXuG&nRiG&M9tG(t2&G(j{$G(t2qG%+<dH8V3ZG(j~sH8(UkG%+(YH8V9qG&eLkGc+|dH8(XiH8V6gG(<BsGc`0eG(s~nH8V6qG(j^pH8V9eG(s~qG&3|gG(t2*H8wRjH8C|bG&40cG&wavG&D3cG(t5sH9<8pG(t5&H8wOiG&MCgG(j~sG&wakG&walGcq$XG&40cG(<HvG($BvG)6Q<G&40eG&eLdH8nIgG&eOhGcq(bG)6TtG&3|dG(t5tG&40bG(|K)H8C|bG&MCeH8eFeG(t2)H9<8uH90gyG&D3dG&eLhG&VFeG(t5tGcz<pG(t5&G&nUkG&MCgGcz?gG(j{rG(j~qG%+<bH8M3dG(t2%H8wRkH8C|dH8V9qG&eLkH90jkGd49fH8V6eG(j{$Gcq(bG(t2)G&40bG(|HtG(j{qG)6TyH8V6hG(t5&H8wRjH90jkG&40bG(|NsH8wRkH8V9gH8V6eG(t5&H8wOiG&MCgH8eFbG(t5&H8V9eG)6NuG&40cG(<HvG($BvG&wUgH8V9eG&eLdH8nIhG&40dGcq(bG)6QsH9<5rGcq+cG(t5qG(<EuG&eOhG)6T!H9<8oG(s~qH8(UiG(<HtGcz<cG(t5&G&VFeG(t5tGcz<oG(j~%G(<EuG&eOeH8V3ZG(j{$G(t2qG%+(WG&D3rG(t5tG&D6eG(<HvH8V9qG&eLkH90jlG(t5tH8V6gG)6NuGcz?dG(t2)G&40bG(|HtG($8rG%++rG(t5wG(t5pH8wRjH8C|aGcz<ZG(|NwG(j{sGd49hG(t5sG&wXuH8wOiG&M9tH8V6fG)6TxG&nRiH8C?ZG&40dG(t2%G&D6gH8C|ZG(s~nG(|K;G(|KxG)6TwGcq+cG&nRiG&D6fG)6TxG&40fG(<EuG($8tG)6TvH8eFhG($8&G&40eG&MCdH8eCcG&wavG&VFeG(t5tGcz<pG(t5&G&nUkG&MCgGcq+ZG(j{$G(t2qG%+<cH8V9ZG($8&H8(XiGc+|eH8V9qG&eLkGc+|fH8(XiH8V6fG($8tGcz?dG(s~oH8eCtG(<EuH8M0cG(<HuH8V6hG(<EuG&40fH90jkG&40bG(|NsH8wRkH8V9fGcz<rG)6TtH8wRjG&3|rG%__dG&wakH8M0cG)6Q;G(t5rG(j~sH8wRgG(t2*G&40cH83<mG&VFfGd49fGcq(bG)6QsGcq(aGc+|eH8V6uG(|KrG($8tG)6TvH8eFhG($8&G&40eG&MCgGcq(qG&wavG&VFeG(t5tGcq+fG)6QsG(<HuGcq+dG&3|aG(j{$G(t2qG%+<dH8V3ZG(j~sH8(UkG%+(YH8V9qG&eLkGc+|fGcq+bH8V9iG(j~rH9<8tG(s~oH8eCtG(<EuH8M0cG(<HuG($B(G(<EuG&40fH8C|bG&40fG&wavH90gkG(<HwH8V6gG)6TtH8?aiGc+|aH8eFbG(t5&G($BvGcq(pG(t5rG(<HvG($BvG)6NuGcq+bG(|NsH8nIgG&eOhGcq+cG&nRiG&MCgH8nLdH8V6uG(|KrG($8tG)6TvH8eFfG(t5&G&D3eG(<HtGcz<ZG&wavG&MCiH8V9fG&D3uG(|KrG&eLhG&eOeG(s~nG(j{rG(j~tGcq(qG($8)G(<EuG&D6fG&M6cH8V9qG&eLkH90jlG)6T!G(j~oG)6QsH9<8tG(s~oH8eCtG(|HtG&eOhG(t2*G(t5&G(t5tH8wRjH8C|eH8V6tG&eLkGc+_bG&walG($8(G&wXuH8wOiG&M9tH8V6fG)6TxG&nRhG)6NvG&40cG(<HvG($BvG)6Q<G&40eH83<mG&nRjG&40dGcq(bG)6TtG(t5tG)6NsG&40fG(|K;G(j{rG)6T!H9<8oG(s~qH8(UiG(<HyG($8pG(t5&G&VFeG(t5wG(t2vG&wavH8(UjG(t5tH8V6qG(j{rG(j~qG%+(WG&40bG(<HvG($BtGc+|eH8V9qG&eLkH90jkGd49fH8V6eG(j{$H9<5sG(t2)G&40bG(|HtG(t2tH8(UwG&D6qG(t5pH8wRjH8C|bG&40bG&eLwG%+<eG&MCfGcz<qG(t5&H8wOiG&MCgH8V6qG&wakG($BvGcq$aG&40cG(j~sH8wRgG(t2*G&40cG(|K;G(|KxG)6TwGcq(cG(|K;Gc`0eG&MCgGcz?cG(s~qG&eOhG)6T!H9<8oG(t5pG(<EwG%++qG&D3dG&wavG&VFeG(t5wG(t2vG&wavH8(UhGcq(pG&3_YG(j{$G(t2qG&40dH8V6cG(<E-G($BtG(s~qGcq$WH83<mG(j{sG&40eH8V9fG&eOeGc+_dG(s~oH8eCtG(|HtG&nUiG(<HtG($5oG(t2*H8wRjH90jkG&40fG(j{nH8M3cG%+<dH8V6eG(t5&H8wOiG&M9tH8V6tH83<mG&nRiH8C|dH8V9eG(t2%G&D6gH8C|eG&40dG(|NvGcq+bG)6TwGcq(bG)6TtG&M9gG&eOeGcq+dG(|K)G(j{rG)6TvH8eFfG($8tH8(XlH8C|aGcz<aG(t5&G&nRhG(t5wG(j~qG(<HrH8nIhG&MCgGcq+ZG(j{$G(t2qG%+<dH8V3ZG(j~sH8(XiG(<HrH8V9qG&eLkGc+|fH8(XiH8V6eG(|NsGc+_dG(t2)G&40bG(|HtG&eOgG&40eH8eFfG(<E-G&40fH90jkG&40bG(t5sGcq(ZG&wakGcq+eG)6TtH8wOiG&MCgG(j~sG&wakG&walGcq$XG&40cG(<HvG($BvH8C?bG&3_YG(t5pG&MCeG&40dGcq+cG&nRiG&M9eGc+|eG($BpG(<EuH8C|bG&MCeH8eFiG(t5pH8(XlH8C|cGcq(rG&wavG&VFeG(t5tGcq+fG)6QsH8(XjG&M9tG(s~nG(j{rG(j~qG%+(WG&40bG(j~sG(t5vG%+(YH8V3ZH83<mG(j{rG&40cG($8)G($8&Gcz?dG(s~nH8V6qG(j~%H8M3fGcq+dH8V6hG(t2%H8wRjH90jkG&40bG(|NsH8(UgG(<HvH8M3bG)6TtH8wOiG&eOeG(j~sG)6Q<G(j{sH8nLfH8V9eG(t2%G&D6gH8C|bGcq+bG(t5tH8V6dGd49fGcq(bG)6TtG(t5tG)6NrH9<8&G(|K;H8C|bG&MCeH8eFfG(t5pH8wRiG&MCbGcz<YG(|NsG&VFeG(t5uH8e9aG(|KrG(t2sG&eOeH8eFbG(j{rG(j~qG%+<aH8V9cG(j~%G&D6fG&MCgH8V3ZG&wUhGcq(aGd49fH8V6eG&eOiH9<8tG(t2)G&40bG(|HtG($8rG%++rG(t5wG(<EuG&40fH8C|bG&40cG&wavG&40gH8C|cGcz<rG)6TtH8?aiGc+|aH8V9cG(t5tG(t2tGcq$YG&40cG(<HvG($8uH8(RgGcq+bG(t5tH8V6eG&eOhGcq(cG(|K;Gc`0eG&MChG&3|pG($8&G&eOhG)6TvH8eFfG($8tH8(XlH8C|aGcz<aG&wavG&VFeG(t5wG(t2rG&wXuG&nUjG)6TtH8V3ZG(j{rG(j~tGcq(qG($8)G(t5&H8(XiG(<HvH8V3ZH83<mG(j{rG)6T!G($8+H83<XH90jlG(s~oH8eCtG(|HtG&nUiG(<HtG($5oG(s~qH8wRjH8C|aGcz<ZG(t5&G(|KvG&40fG(t5tG(t5&H8wOiG&eOeG(j~sG)6Q<G(t5uH8nLeH8V9eG(t2%G&D6gH8C?ZGcq+cG(|NvH90jmGd49fGcq(bG)6TtG&MCgG(t5uG&D3sG(j~oH8C|bG&MCjH9<8oG($8&G&3|cG(<HsGcz<aG&wavG&VFeG(t5tGcz<pG&eOiG&nUkG&MCgG($BpG(j{rG($BuG&waiH8eFhG(j^pG&D3fH90dhH8V9qG&eLkH90jmG&40eH8V9iG(|KrGcz<cG(s~oH8eCtG(<EuG($8rG&40bH8eFfG(t5&H8wRjH8C|bG&40cG&wavG&40gH8C|eH8V6eG(t5&H8wRjG&3_ZG(t5uG)6QwH8V9eH8C|oG&40cG(<HvG($8vG%+(YGcq+dG&wagG&VFiG&eOhGcq(bG)6QsGcq+cH8nLdH8eCtG(|KrH8C|bG&MCeH8eFhG(t5tG&40eG(<HvH8eCdG(|NsG&nRhG(t5wG(t2tG(<HrG&wXjG(<E+G%__dG(j{rG(j~qG%+<nG&D6hG(j~vH9<5rGc+?aH8V9qG&eLkGc+|fH8C|gH8eCrG(t5wGcq(bG(s~oH8eCtG($8&G&eOhG(t2)G(t2vG(t5tH8wRjH90jkG&40bG&eLhG(|KuG(t5tGcq+eG)6TtH8wOiG&M9tH8V9cG&wakG($8uH8nLcH8V9eG(t2%G&D6gG)6NvH8V9gG(s~pH90jmH8(XiGcq+cG&nRiG&D3eG&wajH9<8&G($8&G($8tG)6TwH8eFcG($8sH90jkGc+|dGcq+eG&wavG&VFeG(t5tGcz<oG(j~%G($BuG(<E+H8eCiG(j{$G(t2qG&40dH8V6cG(<E(H8(XiH8nLdH8V3ZH83<mG(j{sH8V9iG(j~qG(|KrGcz<cG(s~oH8eCtG(|HtH8M3eG)6TyH8eFgG(t2sH8wRjH8C|bG&40cG(j{nH8nIfGcq+dG(j~oG(t5&H8wRjG&3_ZG(t2+G(t5pH8C|cG)6NsG&40cG(<HvG($BvH8C_rH8V3ZG(|NvH90giG(t5sGcq+cG&nRiG&M9fG(<BpGcq+ZG(|K;G(j{rG)6TvH8eFhG($8&H8wRiG(<BqGcq(qG&wavG&VFeG(t5tGcz<sG(t5&G($BuG(<E+H8eFjG(j{rG(j~qG%+<bH8M3dG(t2*G($BuG&MCgH8V3ZH83<mG(j{sG&40eH8V9gG)6QsGcq+cG(s~oH8eCtG(|HtG&eOhG(t2*G(t5&G(t2sH8wRjH90jkG&40cG&wUhG(j{rG&walG(t5vG)6TtH8?aiGc+|aH8V6eH83<mH8V9eG)6NvG&40dG(t2%G&D6gH8C?ZGcq+cG(t5pG&VFhG&40dGcq(bG)6TtG&3|dG(t5tG&40bG(|K)G(j{rG)6TvH8eFhG($8tG($BsG(t2)G&D3eG(|NsG&MCiH8V9fG&D3uG(|KrG&eLgGcq$WH9<8tG(j{rG($BuG&waiH8V6fG(<E-H8(UkG%+<cH8V9qG&eLwG%_?bGd49jH8V6fG(j{rGcz?dG(t2)G&40bG(|HtG&eOgG&40dG($B(G(<E(G&40fH8C|aGcz<YH83<mG&D3dG(t5tGcz<oG&wXuH8wRjG&3_ZG(t2+G(t5pH8V6dG(<BrG&40dG(t2%G&D6gG&wXyH8V9fG&wakH8V6dH8(XiGcq(bG)6TtG&M9gG&eOeG&D3dG(|K)G&eOhG)6TwH8eFcG(t2*Gc`0dGc+_sG&40pG(t5&G&nRhG(t5wG(t2tG(<HrG&wXjG(<E+G(s~nG(j{rG(j~qG%+(WG&40bG(<HvG(t5vG%+<cH8V9qG&eLkH90jlG&eOhH8V6fG)6QsGcq+cG(t2)G&40bG(|HtG(j{qG(<HqG($BxG(<E-G&40fH8C|eH8V6tG&eLdG($8vH8V9fGcq+eG)6TtH8wOiG&MCgH8eFbG(t5&H8V9eG)6Q=G(t5sG(t2%G&D6gH8C|eG&40dG(|NvH90jlG&eOhGcq(bG)6TtG(t5tG)6NsG&40fG(|K;G&eOhG)6TwH8eFcG($8sH90jkGc+?ZGcz<YG(t5&G&VFeG(t5wG($5oG(j{$G($BuG&eOeH8V6qG(j{rG(j~tGcq$YGcz?gG(t2%G&D3fGd43dGcq+nG&eLkGc+|fH8(XiH8V6fG($8tGcz?dG(s~oH8eCtG($8&H8V9gGcq+dH8V6hG(t5&H8wRjH8C|bG&40bG&eLwG%+<aG&eOhH9<8pG(t5&H8?aiGc+|aH8V6eH83<mH8V9eG)6NsG&40cG(<HvG($8vG%+<aGcq+cG(t5pG&VFiG)6TwGcq+cG&nRiG(t5uG&wUiH8V9cG(|KvG&eOhG)6TvH8eFhG($8&G&40eG&MCgH8eCcG(t5&G&VFeG(t5tGcz<pG(t5&G&nRhGcq$XG&3_YG(j{rG(j~tGcq$YGcz?gG(t2%G&D3gG%+<cH8V3ZG&wUhH90glH90joG($8-G(|KrH8nIgG(s~oH8eCtG(|HtG&eOhG(t2*G(t5sG(s~qH8wRjH8C|aGcz<ZG&wavH90gjH8C|dGcz<qG(t5&H8wOiG&M9tH8V9cG&wakG($8uH8nLfH8V9dG(<HvG($BvG)6NuGcq+bG(s~pGcq+bH8(XiGcq(bG)6QsGcq+cH8nLdH8eCtG(|K;G($8tG)6TvH8eFfG($8tH8(XlH8C|dGcz<aG(t5&G&VFeG(t5wG($5oG(j{$G($BuG&eOeH8V6qG(j{rG(j~qG%+(WG&40bG(<HvG(t5vG%+(YH8V9qG&eLkGc+|fH8C|gH8eCvG(t2vGcq+cG(s~oH8eCtG(|HtH8M3eG)6TyH8eFgG(t5tH8wRjH8C|eH8V6tG&eLdG($8vG&MCgH8M3bG)6TtH8wOiG&MCgG(j~sG&wakG&walGcq$XG&40cG(<HvG($BvG&eLwG&40eG&eLdH8nIhG&40dGcq+cG&nRiG&3|eG&40aH8V3ZG(|KrH8C|bG&MCjH9<8oG(t2)H90gkH8nLeGcz<ZG(|NsG&MCiH8V9fG&D3uG(|KrG&VIhG&M6bG(t5qG(j{$G(t2qG%+<bH8V6uG(j^pG&D6eH8nLhH8V9qG&eLkGc+|fH8C|gH8eCvG(t2vGcq(bG(s~nH8V6qG(j~%H8M3fGcq+dH8V6pG(t2sH8wRjH8C|bG&40aG&eLhG&40cG%+<cG&3|eG(t5&H8wOiG&M9tH8V3ZG&wavH8V6dH8C?XG&40dG(t2%G&D6hG&wXxGcq+eG(|K)G&VFeG%+<bGcq(bG)6TtG&MCgG&wUeG($BtG(|KvG&eOhG)6T!H9<8oG(s~qH8(UiG(<HtGcq(qG&wavG&VFeG(t5wG(t2rG(|KrG(t5uG&40fG&3|aG(j{rG(j~tGcq(pG%__ZG(t5&H8(XiG(<HvH8V9qG&eLkGc+|eG&40dH8V9hG(|KqGcz<cG(t2)G&40bG(|HtG($8rG%++rG(t5&G(t2%H8wRjH8C|bG&40cG&wavG&40gH8C|eH8V6eG(t5&H8?aiGc+|aGcq+YH83<XG(j~tGc+|aH8V9eG(t2%G&D6hG&wXxGcq+nG(s~pH90jjG%+<bGcq(bG)6QsH90jlG(t5uG&D3dG($8&H8C|bG&MCeH8eFhG($8&G&40eG&MCgGcz<cG(|NsG&MCiH8V9fG&D3uG(|KrG&eLhG&M6bH8V6bG(j{rG(j~tGcq(qG($8)G(<EuG&D6eH8nLdH8V9qG&eLkGc+|dH8(XiH8V6gG(<HrGcz<cG(s~oH8eCtG(<EuG&eOgG&40pG&3|oG(t5&H8wRjH90jkG&40bG&wagH8(UjGd49hG(t5uG(t5&H8wRjG&3_YGcz?bH83<mH8V9eG)6NvG&40dG(t2%G&D6gH8C|eG&40dG(|NvH90jkH8(XiGcq(bG)6QsGcq+cH8nLdGcz<fG(|KrG&eOhG)6T!H9<8oG(t5tG(t2rGc+_sG&D3aG(|NsG&nRhG(t5wG(t2sG(t2%G&wajGcq+cGcz?gG(j{rG(j~tGcq$YG&40bG(<HqH90jmH8(RgGcq+nG&eLkGc+|eG&40dH8V9hG(<BsGc+|eG(s~oH8eCtG(|N*H8C|bG&40aH8eFgG(s~qH8wRjH90jkG&40bG(t5sH90gmG(<HvGcq+eG)6TtH8wOiG&MCgG(j~nH83<XG&nUjG(<BrG&40cG(<HvG($BvG)6Q<G&40fG&wUgGcq+dH8(XiGcq+cG&nRiG&3|eG&40aH8V3ZG(|KrG($8tG)6TvH8eFiG(t5pH8(XlH8C|cGcq(qG&eLhG&MCiH8V9fG&D3uG(|KrG&eLhG&M9tG&D6aG(j{rG(j~qG&40dH8eCbG(t5tH8(XiGcq$ZGcq+nG&eLkGc+|dH8(XiH8V9fG(|HtGcz?dG(s~nH8V6qG(t2%G&eOhG(t2+G(t5wG($8&G&40fH8C|eH8V6tG&eLdG($8vG&MCgH8eCrG&wXuH8wOiG&M9tG(t2pG&wavG($8uH8nLdH8V9dG(<HvG($BvG&wUgH8V9eG&eLdH8nIgG&eOhGcq(bG)6TtG(t5tG)6NsG&40fG(|K;H8C|bG&MCjH9<8oG(s~qH8(UiG(<HyG($8qG(t5&G&VFeG(t5wG(t2vG)6QsH8(XkG&M6aGcq$WG(j{$G(t2qG%+<aH8eFaG(t5&H8(XiG(<HvH8V9qG&eLkGc+|eG&40dH8V9fG)6QrGcq+cG(s~nH8V6qG(j^pG&nRjH90jgH8V6gG(<E-G&40fH8C|aGcz<ZG(|NwG(j{sGd49hH8V6gG)6TtH8wOiG&MCgH8V3ZG)6Q*G($BvGcq$aG&40cG(<HvG($BvG)6NuGcq+bG(|NsH8nIgG&eOhGcq(cG(|K;Gc`0eG&MChG&3|pG(<EuH8C|bG&MCeH8eFiG(t5pH8(XlH8C|ZGcz<cG(|NsG&nRhG(t5uH8M3bG&nRiG(<EuG&M9tGcq(YG(j{rG(j~tGcq(pG(t5vG(t5tG&D3gG%+<cH8V9qG&eLkGc+|fH8nLfG($5oG(t5wH90jlG(s~oH8eCtG(|HtH8M3eG)6TxG($5oG(t2*H8wRjH8C|bG&40bG&eLwG%+<eG&MChG(j~oG(t5&H8wOiG&MCcG($BtG&eOiH8C|cG(<BpG&40cG(<HvG($8uH8(RgGcq+bG(t5tH8V6dH8(XiGcq(bG)6TtG&40fG(t5pG($8*G(|K;H8C|bG&MCeH8eFhG($8&G&40eG&MCgGcq(qG(|NsG&VFeG(t5tGcz<oG(j~%G($BuG(<E+H8V9cG(j{$G(t2qG%+<dH8V3ZG(<HvH8(UjG&wUgH8V9qG&eLkH90jmH8(XhG(t5uG($8&Gcz<cG(t2)G&40bG)6Q*H8V6cG&3_ZGcz?oG(<HvG&40fH90jkG&40fG&wakG&VFiH8C|eG($8(G&wXuH8wOiG&M9tG&D6aG&wakG(|KtG&M9vG(t5rG(<HvG($BvG)6Q<G&40fG&wUgGcq+bGd49fGcq+cG&nRiG(t5uG&wUiH8V9cG(|K;G(j{rG)6TvH8eFhG($8tGc`0dGcq(pG($8sG(t5&G&nRhG(t5wG(t2tG(<HrG&nUkG&M6aGcq$WG(j{rG(j~qG%+<nG&D6hG(j{(H90gmG%+<cH8V3ZH83<mG(j{rG(t5tH8V6eG&eOiGcq(bG(s~nH8V6qG(j^pH8V9eG(s~pGcz?oG(t5tH8wRjH90jkG&40bG(|NsH8wRkH8V9gG(t5tG(t5&H8wOiG&M9tH8V9cG&wakG($8uH8nLcH8V9eG(t2%G&D6gG)6NvH8V9gG(s~pH90jnG)6TwGcq+cG&nRiG&D3eG&wUeH8eCiG($8&G($8tG)6TwH8eFcG($8&G($BwG%++qG&40gG(|NsG&VFeG(t5wG(t2rG(|KrG(t2tG(t5tG&3|eG(j{rG($BuG&waiH8V6fG(<ExH90jmG&wUgH8V9qG&eLkH90jmH8(XhG($8)G($8&Gc+|eG(s~nH8V6qG(j^pG&nRjH90jgH8V6hG(j^pG(t5uH8C|aGcz<ZG(|NwG(j{rH8nLiH8V6fG(t5&H8?aiGc+|aGcq+YG)6NuG&nUjH8C|YH8V9dG(<HvG($8vG%+<aGcq+bG&eLhH8nIgG&eOhGcq+cG&nRiG&D6fG)6TxG&3|pG(<EuH8C|bG&MCeH8eFiG(t5pH8(XlH8C|cGcq(rG&wavG&VFeG(t5tGcz<sG(t5&G($8uG&MCgGcz?gG(j{rG(j~tGcq(qG($8)G(<EuG&D6eG(<HrH8V3ZH83<mG(j{rG)6T!G($8+H83<XH9<8tG(s~oH8eCtG(|HtG&eOhG(t2)G($BpG(t5&H8wRjH8C|aGcz<YG&eLhG&40gH8V9gG(t5tG(t5&H8wOiG&MCgGcq+YH83<XH8C|cG&wajH8V9dG(j~sH8wRgG(t2*G&40cH83<mG&VFgG)6TwGcq(bG)6TtG&MChG(t5pG($BxG(j~oG($8tG)6TvH8eFfG(t5&H8(XlG&wanG($8qG&wavG&VFeG(t5tGcz<oG(j~%G(|KvG(<E+Gcq(YG(j{rG($BuG&waiH8V6fG(<ExH90jmH90dhH8V9qG&eLwG%_?bGd49jH8V6eG($8wGcz<cG(s~nH8V6qG(j^pH8V9eG(s~qG&3|gG(t2*H8wRjH8C|bG&40bG(j{nH8nIfG&walG(j~nG(t5&H8wRjG&3_ZG(t5uG)6QwG&nUjG(<BrG&40cG(<HvG($BvG&eLwG&40eG(|NsH8nIgG)6TwGcq(bG)6TtG&M9gG&eOeG&D3dG(|K)H8C|bG&MCeH8eFiG(t5pH8(XlH8C|cGcq(qG(|NsG&nRhG(t5wG(t2uH83<XG(j~tG&MCgGcz<fG(j{rG(j~qG%+(WG&40bG(<HvG(t5vG&wUgH8V3ZH83<mG(j{sH8(XhG(t5tG)6QsGcz?dG(s~oH8eCtG(<EuG(t2tH8(UxG($BtG(t2*H8wRjH90jkG&40bG&eLhG(|KuG(t5tGcz<pG(t5&H8wOiG&M9tH8V9cG&wakG($8tG)6Q;G(t5rG(<HvG($8vG%+<dG&40eG(|NvH90jlG)6TwGcq(bG)6TtG&MCgG(t5tG&3|eG(|K;G&eOhG)6TvH8eFhG(t2*H8wRiG&MCgGcz<bG(|NsG&VFeG(t5wG(t2vG&wavH8(UjG(t5tH8V6qG(j{rG(j~qG%+<aH8V9dG(t2rH9<5sG&MCgH8V9qG&eLkH90jmG&40eH8V9eG(|NsH9<8tG(s~nH8V6qG(j^pG&nRjH90jgH8V6hG(s~qH8wRjH8C|bG&40bG&eLwG%+<aG&eOjG(j~pG)6TtH8wOiG&M9tH8V6fG)6TxG&nRiH8C?XG&40cG(<HvG($8tG(<BtG(t5rG&eLdG(|KwH8(XiGcq(bG)6QsG($BtGd49gGcq$WG($8&G&eOhG)6TvH8eFhG($8&G&40eG&MCgGcz<bG&eLhG&VFeG(t5tGcz<pG(t5&G&nUkG&MCgH8eFbG(j{rG(j~qG%+<bH8M3dG(t2*G($BtGc+?aH8V3ZH83<mG(j{rG)6T!G($8)G&eOiH8nIgG(t2)G&40bG(|N*H8V9gH90jgH8V6hG(j~sG(t5uH8C|bG&40bG&eLwG%+<aG&eOjG($5oG&wXuH8?aiGc+|aH8V3ZG)6QwH8M0cH8C|YH8V9dG(<HvG($BvH8C?bG&3_YG(|NvGcq+bG&eOhGcq(bG)6TtG(t5tG)6NrH9<8&G(|K;G($8tG)6TwH8eFcG(t2*Gc`0dGc+_sG&D3bG&wavG&VFeG(t5wG(t2vG)6QsH8(XkG&MCgG&D3sG(j{$G(t2qG%+<nG&40gG(t2%G&D6fG&MCcH8V9qG&eLkGc+|eG&40dH8V9gG($8tGc+_dG(s~oH8eCtG(|HtH8M3eG)6TxG($5oG(t2*H8wRjH8C|bG&40cG&wavG&D3cG(t5sH9<8pG(t5&H8wOiG&MCgH8V6qG&wakG&walGcq+YH8V9dG(<HvG($BvG)6NuGcq+bG(|NsG&nRjG&40dGcq+cG&nRiG&MCgH8nLdH8V6uG(|KrH8C|bG&MCjH9<8oG(t5tG(t2rGc+_sG&D3aG(t5&G&VFeG(t5tGcq+bG&wXuG&nRiG&M9tG&D6aG(j{rG(j~tGcq(pG(t5vG(t5pG($BuG&3_bGcq+nG&eLsGc+_cH90jwG($8-G(|KrH9<8tG(s~oH8eCtG(<EuG(t2tH90jhG($B(G(<EuG&40fH8C|bG&40aG&eLhG&40cG%+<bH9<8oG(t5&H8wOiG&MCgGcq+YH83<XH8C|cG&wagH8V9eG(t2%G&D6gG)6NvH8V9gG&wagG&VFiG&eOhGcq(bG)6QsH9<5rGcq+cG(t5qG($8&G&eOhG)6T!H9<8oG(s~qH8(UiG(<HtGcz<ZG&eLhG&nRhG(t5uH8M3cG)6QsG&wakG&M6bG($8wG(j{rG(j~tGcq(pG%__ZG(t5&H8(XiG(<BrH8V9qG&eLwG%_?bGd49jG($5oG(t5tGc+|eG(s~oH8eCtG($8&G&eOhG(t2)G(t2vG(t5pH8wRjH8C|bG&40bG(j{nH8nIfH8nLiH8V6gG)6TtH8wOiG&M9tG&D6aG&wakH8C|cG&wagH8V9dG(j~sH8(UhG(s~qGcq+bG(t5pG&VFgG)6TwGcq+cG&nRiG&D6fG)6TxG&40fG(<EuG&eOhG)6TvH8eFhG($8&H8wRiG(t2)G($8tG(|NsG&nRhG(t5wG(t2tG(<HrG&nUkG&MCgH8eFbG(j{rG(j~tGcq$YG&40bG(<HqH90jnG%+<YH8V3ZG&wUhH90glH8nLhG(j~pG(|KrH90gkG(s~oH8eCtG)6Q*G&eOjH90jlH8V9qG(t5pH8wRjH90jkG&40fG(j{nH8M3gH8C|eG($5oG&wXuH8wOiG&M9tH8V9cG&wakG($8uH8nLdH8V9dG(<HvG($8vG%+<YH8V9eG(|NvH90jkG)6TwGcq(bG)6TtG&40fG(t5pG(s~nG(|K;G($8tG)6TvH8eFhG(t2*H8wRiG&M6bGcq(qG&wavG&VFeG(t5wG($5oG(j{$G($BuG&eOeH8eFbG(j{$G(t2qG%+<nG&40gG(t2vH90jnG%+(YH8V9qG&eLkGc+|dH8(XiH8V6gG(<HrGcq(bG(s~oH8eCtG($8&H8V9gGcq+dH8V6hG(t5pH8wRjH8C|bG&40bG(j{nH8nIfH8nLiH8V6gG)6TtH8wRjG&3_ZG(t5uG)6QwH8V9eG)6TtH8V9dG(<HvG($8vG%+(YGcq+dG&wakH8V6fGd49fGcq(bG)6QsH9<8tG)6NrGcz<bG(<EuG($8tG)6TvH8eFhG($8&G&40eG&MCgGcq(qG(t5&G&nRhG(t5wG(t2sG&eOiG&nRhGcq$WGcz?YG(j{rG(j~qG&40dH8eCbG(t5&G($BuG&MCcH8V9qG&eLkH90jmH8(XhG(t5vG(|KrGc+_dG(s~oH8eCtG(<EuH8M0cG(<HuG($B(G(t5&H8wRjH90jkG&40bG(|NsH8(UgG(<HvH8M3bG)6TtH8wOiG&M9tH8V6fG)6TxH8M3cG&M6dG&40cG(<HvG($BvG)6NuGcq+bG(s~pGcq+bG)6TwGcq(bG)6QsG(t2tG&eIgH8eCiG(<EuH8C|bG&MCjH9<8pG(t5tG&40eG&M6bGcz<bG&eLhG&VFeG(t5wG(t2rG&wXuG&nUjG)6TtG(t2&G(j{rG(j~qG%+<aH8V9cG(j~%G&D6fG&M6cH8V9qG&eLsGc+_cH90jwG($8-G(|KrH90jlG(t2)G&40bG(|HtG($8rG%++pG&D6iG(<E-G&40fH90jkG&40bG&wajH90giG&walG($8*G(t5&H8wOiG&M9tH8V6fG)6TxH8V6dH8C?ZG&40cG(<HvG($8uH8(RgGcq+bG(t5tH8V6eG)6TwGcq+cG&nRiG&D6fG)6TxG&40fG(<EuG&eOhG)6TvH8eFiG(t5pH8(XlH8C|ZGcz<cG(t5&G&MCiH8V9fG&D3uG(|KrG&eLgGcq$WH9<8tG(j{rG(j~qG%+(WG&40YG(j{(H9<5rH8V3cGcq$WH83<mG(j{sG&40eH8V9fG&eOeGcz?dG(s~oH8eCtG(|HtG&nUiG(<HtH8V6pG(t5tH8wRjH8C|aGcz<ZG(t5pG($8tG)6TyG(t5uG(t5&H8wOiG&M9tG(t2pG&wavH8C|cG&wafH8V9eG(t2%G&D6gH8C|bGcq+bG(t5pG&VFhG&40dGcq(bG)6TtG&40fG(t5pG($8*G(|K)H8C|bG&MCeH8eFfG(t5pH8wRiG&MCbGcz<ZG(t5&G&nRhG(t5wG(j~qG(<HrH8nIhG&MChG&40bG(j{rG(j~tGcq$YG&40bG(<HqH90jnG%+(YH8V9qG&eLkH90jmH8(XhG($8)G($8&Gc+|eG(s~oH8eCtG(<EuG($8rG&40bH8eFfG(<E(G&40fH8C|bG&40cG&wavG&40gH8C|eH8V6fG(t5&H8wOiG&M9tH8V9cG&wakG($8uH8nLcH8V9dG(<HvG($BvG)6NuGcq+bG(|NsG&nRjG&40dGcq+cG&nRiG&MCgH8nLdH8V6bG(|KrG($8tG)6TvH8eFfG(s~qH8(UiG(t2*G($8qG&wavG&VFeG(t5wG(t2vG&wavH8(XkG&M6aH9<8tG(j{rG(j~qG&40dH8eCbG(t5tH8(UhG&MCcH8V9qG&eLkGc+|fH8C|gH8eCvG(t2vGcq+cG(t2)G&40bG(|HtG(j{qG)6TyH8V6hG(t2%H8wRjH90jkG&40bG(|NsH8wRgG&40eGcz<pG(t5&H8wOiG&M9tG(t2pG&wavH8C|cG&wahH8V9dG(<HvG($BvG&wUgH8V9fG(s~pGcq+dG&40dGcq+cG&nRiG&D3eG&wajH9<8&G($8&H8C|bG&MCeH8eFfG(t5pG(t2rG(t2*G(t5vG(|NsG&VFeG(t5uH8M3bG)6TtG&wXjG&eOeG(t2&G(j{$G(t2qG%+<aH8eFaG(t5&H8(XiG(<HvH8V9qG&eLkH90jmG&40eH8V9eG(|NsGcz<cG(s~nH8V6qG(j^pH8V9eG(s~qG&3|gG(t2*H8wRjH8C|bG&40fG&wavH90gkG&eOjG($5oG&wXuH8?aiGc+|eH8V6bG&wakH8C|cG&wafH8V9dG(<HvG($BwG&eIgG(t5uG&wUgGcq+bH8(XiGcq(cG(|K;Gc`0fG&M6eH8eCiG($8&H8C|bG&MCeH8eFhG(t5tG&40eG(<HvGcq(qG(t5&G&nRhG(t5wG(t2sG(t2%H8(XjG&M9tG&D6aG(j{rG(j~tGcq$YGcz?gG(t2%G&D3gG%+(YH8V3ZH83<mG(j{sG&40eH8V9gG)6QsH9<8tG(s~oH8eCtG(|N*H8C|bG%++rG(t2%G(t5tH8wRjH8C|bG&40bG(j{nH8nIfG)6TyH8V6dG&wXuH8wOiG&MCcG($BtG&eOtH8V9eG)6TtH8V9eG(t2%G&D6gH8C?ZGcq+cG(t5pG&VFgG&eOhGcq(bG)6QsGcq+cH8nLdGcz<fG(|K;H8C|bG&MCeH8eFfG(t5&G&D3eG(<HtGcz<aG&wavG&nRhG(t5wG(t2tG(<HrG&wXjG(<E+G($BpG(j{$G(t2qG%+<nG&40gG(t2%G&D6fG&M6cH8V9qG&eLkGc+|fH8C|gH8eCvG(j~%H9<5sG(s~oH8eCtG(<EuH8V6eG(<HvH8eFfG(<E-G&40fH8C|aGcz<YG(|NsG&D3cG&eOiGcz<qG(t5&H8wRjG&3_ZG(t5uG)6QwG&nUjG)6Q<G(t5rG(<HvG($BvH8C?bG&3_YG(t5pG&nRhH8(XiGcq(bG)6TtG&3|dG(s~nGcq(rG(|K;H8C|bG&MCjH9<8pG(t5pG(t5uG&wUhGcq(qG&eLhG&VFeG(t5tGcz<pG(t5&G&nRiG&M6bH8V6bG(j{rG(j~qG%+<bH8M3dG(t2*G($BuG&M6cH8V9qG&eLkGc+|fH8(XiH8V6fG($8tGc+|eG(s~oH8eCtG(<EuG&eOgG&3_ZG&40hG(<HrG&40fH90jkG&40bG(|NsH8(UgG(<HvH8M3bG)6TtH8wOiG&MCgGcq+YH83<bG(j{sGc+|bH8V9dG(<HvG($8vG%++pG(t5uG(s~pH90jmGd49fGcq+cG&nRiG(t5tG&3_ZH8V6fG(|KrH8C|bG&MCeH8eFhG($8tG($BsG&wXxG($8tG&wavG&VFeG(t5wG(t2rG(|KrG(t2rGcq(pG&D6aG(j{rG($BuG&waiH8V6fG(<E-H8(UjH8(RgGcq+nG&eLkGc+|fH8nLfG($5oG(t5wH90jlG(t2)G&40bG(|HtG($8rG%++qG($BtG(t2*H8wRjH8C|bG&40bG&eLwG%+<eG&MCfGcz<qG(t5&H8wOiG&MCgH8eFbG(t5&G&nUjG)6Q=G(t5rG(<HvG($BvG)6NuGcq+bG(s~qH8(UgG%+<bGcq(bG)6TtG&MCgG(t5tG&3|eG(|K;G&eOhG)6TvH8eFhG(t5tG&40eG(<HvH8eCcG&eLhG&VFeG(t5tGcq+bG&wXuG&nRiG&M9tG(s~nG(j{rG(j~tGcq$YGcz?fG(j~sH8(UjH90jlH8V9qG&eLkGc+|dH8(XiH8V6gG(|KqH9<8tG(s~oH8eCtG(|N*H8C|bG%++rG(t2%G(t2sH8wRjH8C|bG&40bG&eLwG%+<aG&eOjH8V6eG(t5&H8wOiG&MCgGcq+YH83<bG(j{sGc+|bH8V9dG(<HvG($BvG)6NuGcq+bG(|NsH8nIgG&eOhGcq(bG)6TtG&M9gG&eOdGcz?cG(j{)G($8tG)6T!H9<8oG($8&G&3|cG&3|sG($8rG&wavG&VFeG(t5tGcz<rH83<XG(t5sGcq$XG&3_YG(j{rG(j~qG%+<aH8V9dG(t2rH9<5sG&MCcH8V9qG&eLkGc+|fH8(XiH8V6fG($8wH9<8tG(t2)G&40bG(|HtG(j{qG)6TyH8V6hG(s~qH8wRjH90jkG&40bH83<mG($8sH8(XkH8V6fG(t5&H8wOiG&MCgH8V6qG&wakG(t2tH8nLdH8V9dG(<HvG($BvH8C?bG&3_YG($8pH8(UkG&eOhGcq(bG)6TtG&M9gG&eOdGcz?cG(|K;G(j{rG)6T!H9<8oG(t2)H90gkH8nLeGcz<ZG(t5&G&VFeG(t5tH8eCuG($8&G&wajGcq$XG&3_YG(j{rG(j~tGcq$aG&D3aG(t2vH90jnG%+(YH8V3ZH83<mG(j{sH8V9iG(j~qG(|KrH9<8tG(t2)G&40bG(|HtG($8rG%++pG&D0ZG(t2*H8wRjH8C|gG(t5uG&eLwG&nRgG(t5sH9<8pG(t5&H8wRiG&3|rG&D6dH83<mH8V9eG)6Q<G(t5rG(j~sG&40cG%+(ZGcq+bG&eLhH8V6gG&eOhH8V6gG(j{$H90glG&wagH9<8pG(t2%G&waiG&MCeH8eFiG(t2)H90jkGc+?aH8V9aG(t2*H8M3gG%+<ZGcq+aG(|K-Gd49dG)6Q+G(j{$G&VFfGek2)Gek2)Gek2)GB+|gGC49iCn+f@')))')))
